<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Centos7-Redis安装</title>
    <url>/2020/06/16/Centos7-Redis%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>本文要主描述了Centos7-Redis安装</p>
<a id="more"></a>

<h3 id="centos7-安装redis"><a href="#centos7-安装redis" class="headerlink" title="centos7 安装redis"></a>centos7 安装redis</h3><figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">[root<span class="symbol">@qyjy</span> ~]<span class="meta"># wget http://download.redis.io/releases/redis-5.0.7.tar.gz</span></span><br><span class="line">[root<span class="symbol">@qyjy</span> ~]<span class="meta"># tar -zxvf redis-5.0.7.tar.gz</span></span><br><span class="line">[root<span class="symbol">@qyjy</span> ~]<span class="meta"># cd redis-5.0.7</span></span><br><span class="line">[root<span class="symbol">@qyjy</span> ~]<span class="meta"># yum -y install gcc-c++</span></span><br><span class="line">[root<span class="symbol">@qyjy</span> ~]<span class="meta"># make</span></span><br><span class="line">[root<span class="symbol">@qyjy</span> ~]<span class="meta"># make install</span></span><br></pre></td></tr></table></figure>
<p>如果make失败需要执行make distclean<br>make install</p>
<h3 id="redis设置外网访问"><a href="#redis设置外网访问" class="headerlink" title="redis设置外网访问"></a>redis设置外网访问</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[<span class="symbol">root@</span>qyjy ~]# vim redis<span class="number">-5.0</span><span class="number">.7</span>/redis.conf</span><br></pre></td></tr></table></figure>
<p>bind:0.0.0.0 设置所有ip都能访问，127.0.0.1 是只绑定本地<br>daemonize yes 设置后台启动<br>protected no<br>requirepass 123456  设置密码</p>
<p>保护模式启动的2个条件：<br>1、没有使用bind<br>2、没有设置访问密码</p>
<h3 id="启动redis"><a href="#启动redis" class="headerlink" title="启动redis"></a>启动redis</h3><p>安装后redis-server在/usr/local/bin/目录下</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[<span class="symbol">root@</span>qyjy ~]# /usr/local/bin/redis-server ./redis<span class="number">-5.0</span><span class="number">.7</span>/redis.conf</span><br><span class="line"><span class="number">10009</span>:C <span class="number">16</span> Jun <span class="number">2020</span> <span class="number">17</span>:<span class="number">12</span>:<span class="number">11.840</span> # oO0OoO0OoO0Oo Redis <span class="keyword">is</span> starting oO0OoO0OoO0Oo</span><br><span class="line"><span class="number">10009</span>:C <span class="number">16</span> Jun <span class="number">2020</span> <span class="number">17</span>:<span class="number">12</span>:<span class="number">11.840</span> # Redis version=<span class="number">5.0</span><span class="number">.7</span>, bits=<span class="number">64</span>, commit=<span class="number">00000000</span>, modified=<span class="number">0</span>, pid=<span class="number">10009</span>, just started</span><br><span class="line"><span class="number">10009</span>:C <span class="number">16</span> Jun <span class="number">2020</span> <span class="number">17</span>:<span class="number">12</span>:<span class="number">11.840</span> # Configuration loaded</span><br></pre></td></tr></table></figure>

<h3 id="测试redis"><a href="#测试redis" class="headerlink" title="测试redis"></a>测试redis</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">[root@qyjy ~]# redis-cli -a 123456</span><br><span class="line">Warning: Using a password with <span class="string">'-a'</span> <span class="keyword">or</span> <span class="string">'-u'</span> option on the command line<span class="built_in"> interface </span>may <span class="keyword">not</span> be safe.</span><br><span class="line">127.0.0.1:6379&gt; ping</span><br><span class="line">PONG</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure>

<h3 id="授权密码重要"><a href="#授权密码重要" class="headerlink" title="授权密码重要"></a>授权密码重要</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">[root@qyjy ~]# redis-cli -a 123456</span><br><span class="line">Warning: Using a password with <span class="string">'-a'</span> <span class="keyword">or</span> <span class="string">'-u'</span> option on the command line<span class="built_in"> interface </span>may <span class="keyword">not</span> be safe.</span><br><span class="line">127.0.0.1:6379&gt; auth 123456</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt;<span class="built_in"> config </span><span class="builtin-name">get</span> requirepass</span><br><span class="line">1) <span class="string">"requirepass"</span></span><br><span class="line">2) <span class="string">"123456"</span></span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure>

<h3 id="关掉redis"><a href="#关掉redis" class="headerlink" title="关掉redis:"></a>关掉redis:</h3><p>[root@qyjy ~]# redis-cli -a 123456<br>Warning: Using a password with ‘-a’ or ‘-u’ option on the command line interface may not be safe.<br>127.0.0.1:6379&gt; shotdown<br>(error) ERR unknown command <code>shotdown</code>, with args beginning with:<br>127.0.0.1:6379&gt; SHUTDOWN<br>not connected&gt; exit</p>
<p>第一种<br>注释掉bind 并把daemonize no<br>第二种<br>设置bind 0.0.0.0 或密码 （保护模式不生效）</p>
<p>防火墙添加端口<br>[root@localhost bin]# firewall-cmd –query-port=6379/tcp<br>no<br>[root@localhost bin]# firewall-cmd –add-port=6379/tcp<br>success<br>[root@localhost bin]# firewall-cmd –query-port=6379/tcp<br>yes</p>
<p>端口谁占用了，使用<br>netstat -ltunp</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Centos7-Mysql安装</title>
    <url>/2020/06/16/Centos7-Mysql%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>本文要主描述了Centos7-Mysql的卸载与安装</p>
<a id="more"></a>

<h3 id="Centos7-Mysql卸载"><a href="#Centos7-Mysql卸载" class="headerlink" title="Centos7-Mysql卸载"></a>Centos7-Mysql卸载</h3><h4 id="查看mysql安装了哪些东西"><a href="#查看mysql安装了哪些东西" class="headerlink" title="查看mysql安装了哪些东西"></a>查看mysql安装了哪些东西</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[<span class="symbol">root@</span>qyjy ~]# rpm -qa |grep -i mysql</span><br><span class="line">mysql-community-libs<span class="number">-5.7</span><span class="number">.30</span><span class="number">-1.</span>el7.x86_64</span><br><span class="line">mysql-community-libs-compat<span class="number">-5.7</span><span class="number">.30</span><span class="number">-1.</span>el7.x86_64</span><br><span class="line">mysql-community-common<span class="number">-5.7</span><span class="number">.30</span><span class="number">-1.</span>el7.x86_64</span><br><span class="line">mysql-community-server<span class="number">-5.7</span><span class="number">.30</span><span class="number">-1.</span>el7.x86_64</span><br><span class="line">mysql57-community-release-el7<span class="number">-10.</span>noarch</span><br><span class="line">mysql-community-client<span class="number">-5.7</span><span class="number">.30</span><span class="number">-1.</span>el7.x86_64</span><br></pre></td></tr></table></figure>

<h4 id="开始卸载"><a href="#开始卸载" class="headerlink" title="开始卸载"></a>开始卸载</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">yum</span> <span class="selector-tag">remove</span> <span class="selector-tag">mysql-community-libs-5</span><span class="selector-class">.7</span><span class="selector-class">.30-1</span><span class="selector-class">.el7</span><span class="selector-class">.x86_64</span></span><br><span class="line"><span class="selector-tag">yum</span> <span class="selector-tag">remove</span> <span class="selector-tag">mysql-community-libs-compat-5</span><span class="selector-class">.7</span><span class="selector-class">.30-1</span><span class="selector-class">.el7</span><span class="selector-class">.x86_64</span></span><br><span class="line"><span class="selector-tag">yum</span> <span class="selector-tag">remove</span> <span class="selector-tag">mysql-community-common-5</span><span class="selector-class">.7</span><span class="selector-class">.30-1</span><span class="selector-class">.el7</span><span class="selector-class">.x86_64</span></span><br><span class="line"><span class="selector-tag">yum</span> <span class="selector-tag">remove</span> <span class="selector-tag">mysql-community-server-5</span><span class="selector-class">.7</span><span class="selector-class">.30-1</span><span class="selector-class">.el7</span><span class="selector-class">.x86_64</span></span><br><span class="line"><span class="selector-tag">yum</span> <span class="selector-tag">remove</span> <span class="selector-tag">mysql57-community-release-el7-10</span><span class="selector-class">.noarch</span></span><br><span class="line"><span class="selector-tag">yum</span> <span class="selector-tag">remove</span> <span class="selector-tag">mysql-community-client-5</span><span class="selector-class">.7</span><span class="selector-class">.30-1</span><span class="selector-class">.el7</span><span class="selector-class">.x86_64</span></span><br></pre></td></tr></table></figure>

<h4 id="查看是否卸载完成"><a href="#查看是否卸载完成" class="headerlink" title="查看是否卸载完成"></a>查看是否卸载完成</h4><figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">[root<span class="symbol">@qyjy</span> ~]<span class="meta"># rpm -qa |grep -i mysql</span></span><br><span class="line">[root<span class="symbol">@qyjy</span> ~]<span class="meta">#</span></span><br></pre></td></tr></table></figure>

<h4 id="查找mysql相关目录"><a href="#查找mysql相关目录" class="headerlink" title="查找mysql相关目录"></a>查找mysql相关目录</h4><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">[root@qyjy ~]<span class="comment"># find / -name mysql</span></span><br><span class="line">/etc/selinux/targeted/tmp/modules/<span class="number">100</span>/mysql</span><br><span class="line">/etc/selinux/targeted/active/modules/<span class="number">100</span>/mysql</span><br><span class="line">/var/<span class="class"><span class="keyword">lib</span>/<span class="title">docker</span>/<span class="title">overlay2</span>/<span class="title">b714b8f47a5da8821a24f56c2b8c37158b33bcf333b7b40827604446db9aefec</span>/<span class="title">diff</span>/<span class="title">etc</span>/<span class="title">mysql</span></span></span><br><span class="line">/var/<span class="class"><span class="keyword">lib</span>/<span class="title">docker</span>/<span class="title">overlay2</span>/<span class="title">b714b8f47a5da8821a24f56c2b8c37158b33bcf333b7b40827604446db9aefec</span>/<span class="title">diff</span>/<span class="title">var</span>/<span class="title">lib</span>/<span class="title">mysql</span></span></span><br><span class="line">/var/<span class="class"><span class="keyword">lib</span>/<span class="title">docker</span>/<span class="title">overlay2</span>/<span class="title">b714b8f47a5da8821a24f56c2b8c37158b33bcf333b7b40827604446db9aefec</span>/<span class="title">diff</span>/<span class="title">usr</span>/<span class="title">lib</span>/<span class="title">mysql</span></span></span><br><span class="line">/var/<span class="class"><span class="keyword">lib</span>/<span class="title">docker</span>/<span class="title">overlay2</span>/<span class="title">b714b8f47a5da8821a24f56c2b8c37158b33bcf333b7b40827604446db9aefec</span>/<span class="title">diff</span>/<span class="title">usr</span>/<span class="title">bin</span>/<span class="title">mysql</span></span></span><br><span class="line">/var/<span class="class"><span class="keyword">lib</span>/<span class="title">docker</span>/<span class="title">overlay2</span>/<span class="title">d898524b3255b992cd88283bb14babb46e9260e9eb7291c8096d11091444c1cf</span>/<span class="title">diff</span>/<span class="title">etc</span>/<span class="title">mysql</span></span></span><br><span class="line">/var/<span class="class"><span class="keyword">lib</span>/<span class="title">mysql</span></span></span><br><span class="line">/usr/share/mysql</span><br></pre></td></tr></table></figure>

<h4 id="删除相关目录"><a href="#删除相关目录" class="headerlink" title="删除相关目录"></a>删除相关目录</h4><figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">[root<span class="title">@qyjy</span> ~]# rm -rf /etc/selinux/targeted/active/modules/<span class="number">100</span>/mysql</span><br><span class="line">[root<span class="title">@qyjy</span> ~]# rm -rf /var/lib/docker/overlay<span class="number">2</span>/b<span class="number">714</span>b<span class="number">8</span>f<span class="number">47</span>a<span class="number">5</span>da<span class="number">8821</span>a<span class="number">24</span>f<span class="number">56</span><span class="keyword">c</span><span class="number">2</span>b<span class="number">8</span><span class="keyword">c</span><span class="number">37158</span>b<span class="number">33</span>bcf<span class="number">333</span>b<span class="number">7</span>b<span class="number">40827604446</span>db<span class="number">9</span>aefec/diff/etc/mysql</span><br><span class="line">[root<span class="title">@qyjy</span> ~]# rm -rf /var/lib/docker/overlay<span class="number">2</span>/b<span class="number">714</span>b<span class="number">8</span>f<span class="number">47</span>a<span class="number">5</span>da<span class="number">8821</span>a<span class="number">24</span>f<span class="number">56</span><span class="keyword">c</span><span class="number">2</span>b<span class="number">8</span><span class="keyword">c</span><span class="number">37158</span>b<span class="number">33</span>bcf<span class="number">333</span>b<span class="number">7</span>b<span class="number">40827604446</span>db<span class="number">9</span>aefec/diff/var/lib/mysql</span><br><span class="line">[root<span class="title">@qyjy</span> ~]# rm -rf /var/lib/docker/overlay<span class="number">2</span>/b<span class="number">714</span>b<span class="number">8</span>f<span class="number">47</span>a<span class="number">5</span>da<span class="number">8821</span>a<span class="number">24</span>f<span class="number">56</span><span class="keyword">c</span><span class="number">2</span>b<span class="number">8</span><span class="keyword">c</span><span class="number">37158</span>b<span class="number">33</span>bcf<span class="number">333</span>b<span class="number">7</span>b<span class="number">40827604446</span>db<span class="number">9</span>aefec/diff/usr/lib/mysql</span><br><span class="line">[root<span class="title">@qyjy</span> ~]# rm -rf /var/lib/docker/overlay<span class="number">2</span>/b<span class="number">714</span>b<span class="number">8</span>f<span class="number">47</span>a<span class="number">5</span>da<span class="number">8821</span>a<span class="number">24</span>f<span class="number">56</span><span class="keyword">c</span><span class="number">2</span>b<span class="number">8</span><span class="keyword">c</span><span class="number">37158</span>b<span class="number">33</span>bcf<span class="number">333</span>b<span class="number">7</span>b<span class="number">40827604446</span>db<span class="number">9</span>aefec/diff/usr/bin/mysql</span><br><span class="line">[root<span class="title">@qyjy</span> ~]# rm -rf /var/lib/docker/overlay<span class="number">2</span>/d<span class="number">898524</span>b<span class="number">3255</span>b<span class="number">992</span>cd<span class="number">88283</span>bb<span class="number">14</span>babb<span class="number">46e9260</span>e<span class="number">9</span>eb<span class="number">7291</span><span class="keyword">c</span><span class="number">8096</span>d<span class="number">11091444</span><span class="keyword">c</span><span class="number">1</span>cf/diff/etc/mysql</span><br><span class="line">[root<span class="title">@qyjy</span> ~]# rm -rf /var/lib/mysql</span><br><span class="line">[root<span class="title">@qyjy</span> ~]# rm -rf /usr/share/mysql</span><br></pre></td></tr></table></figure>

<h4 id="删除-etc-my-cnf"><a href="#删除-etc-my-cnf" class="headerlink" title="删除/etc/my.cnf"></a>删除/etc/my.cnf</h4><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">rm -rf /etc/<span class="keyword">my</span>.cnf</span><br></pre></td></tr></table></figure>

<h4 id="删除-var-log-mysqld-log（如果不删除这个文件，会导致新安装的mysql无法生存新密码，导致无法登陆）"><a href="#删除-var-log-mysqld-log（如果不删除这个文件，会导致新安装的mysql无法生存新密码，导致无法登陆）" class="headerlink" title="删除/var/log/mysqld.log（如果不删除这个文件，会导致新安装的mysql无法生存新密码，导致无法登陆）"></a>删除/var/log/mysqld.log（如果不删除这个文件，会导致新安装的mysql无法生存新密码，导致无法登陆）</h4><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">rm</span> -rf /<span class="keyword">var</span>/<span class="keyword">log</span>/mysqld.<span class="keyword">log</span></span><br></pre></td></tr></table></figure>

<h3 id="Cntos7-Mysql安装"><a href="#Cntos7-Mysql安装" class="headerlink" title="Cntos7-Mysql安装"></a>Cntos7-Mysql安装</h3><p>扩展：在CentOS中默认安装有MariaDB，这个是MySQL的分支，但为了需要，还是要在系统中安装MySQL，而且安装完成之后可以直接覆盖掉MariaDB。</p>
<h4 id="下载并安装MySQL官方的-Yum-Repository"><a href="#下载并安装MySQL官方的-Yum-Repository" class="headerlink" title="下载并安装MySQL官方的 Yum Repository"></a>下载并安装MySQL官方的 Yum Repository</h4><figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">[root<span class="title">@qyjy</span> ~]# wget -i -<span class="keyword">c</span> http://dev.mysql.com/get/mysql<span class="number">57</span>-community-<span class="keyword">release</span>-el<span class="number">7</span><span class="number">-10</span>.noarch.rpm</span><br></pre></td></tr></table></figure>

<h4 id="使用上面的命令就直接下载了安装用的Yum-Repository，大概25KB的样子，然后就可以直接yum安装了"><a href="#使用上面的命令就直接下载了安装用的Yum-Repository，大概25KB的样子，然后就可以直接yum安装了" class="headerlink" title="使用上面的命令就直接下载了安装用的Yum Repository，大概25KB的样子，然后就可以直接yum安装了"></a>使用上面的命令就直接下载了安装用的Yum Repository，大概25KB的样子，然后就可以直接yum安装了</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-attr">[root@qyjy ~]</span># <span class="selector-tag">yum</span> <span class="selector-tag">-y</span> <span class="selector-tag">install</span> <span class="selector-tag">mysql57-community-release-el7-10</span><span class="selector-class">.noarch</span><span class="selector-class">.rpm</span></span><br></pre></td></tr></table></figure>
<h4 id="开始安装MySQL服务器"><a href="#开始安装MySQL服务器" class="headerlink" title="开始安装MySQL服务器"></a>开始安装MySQL服务器</h4><figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">[root<span class="symbol">@qyjy</span> ~]<span class="meta"># yum -y install mysql-community-server</span></span><br></pre></td></tr></table></figure>
<h4 id="启动MySQL"><a href="#启动MySQL" class="headerlink" title="启动MySQL"></a>启动MySQL</h4><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">systemctl <span class="literal">start</span>  mysqld.service</span><br></pre></td></tr></table></figure>

<h4 id="查看MySQL运行状态"><a href="#查看MySQL运行状态" class="headerlink" title="查看MySQL运行状态"></a>查看MySQL运行状态</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[<span class="symbol">root@</span>qyjy ~]# systemctl status mysqld.service</span><br><span class="line">?.mysqld.service - MySQL Server</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Tue <span class="number">2020</span><span class="number">-06</span><span class="number">-16</span> <span class="number">10</span>:<span class="number">07</span>:<span class="number">21</span> CST; <span class="number">23</span>s ago</span><br><span class="line">     Docs: man:mysqld(<span class="number">8</span>)</span><br><span class="line">           http:<span class="comment">//dev.mysql.com/doc/refman/en/using-systemd.html</span></span><br><span class="line">  Process: <span class="number">21746</span> ExecStart=/usr/sbin/mysqld --daemonize --pid-file=/var/run/mysqld/mysqld.pid $MYSQLD_OPTS (code=exited, status=<span class="number">0</span>/SUCCESS)</span><br><span class="line">  Process: <span class="number">21677</span> ExecStartPre=/usr/bin/mysqld_pre_systemd (code=exited, status=<span class="number">0</span>/SUCCESS)</span><br><span class="line"> Main PID: <span class="number">21751</span> (mysqld)</span><br><span class="line">   CGroup: /system.slice/mysqld.service</span><br><span class="line">           ?.<span class="number">.21751</span> /usr/sbin/mysqld --daemonize --pid-file=/var/run/mysqld/mysqld.pid</span><br><span class="line"></span><br><span class="line">Jun <span class="number">16</span> <span class="number">10</span>:<span class="number">07</span>:<span class="number">12</span> qyjy systemd[<span class="number">1</span>]: Starting MySQL Server...</span><br><span class="line">Jun <span class="number">16</span> <span class="number">10</span>:<span class="number">07</span>:<span class="number">21</span> qyjy systemd[<span class="number">1</span>]: Started MySQL Server.</span><br></pre></td></tr></table></figure>

<h4 id="此时MySQL已经开始正常运行，不过要想进入MySQL还得先找出此时root用户的密码，通过如下命令可以在日志文件中找出密码"><a href="#此时MySQL已经开始正常运行，不过要想进入MySQL还得先找出此时root用户的密码，通过如下命令可以在日志文件中找出密码" class="headerlink" title="此时MySQL已经开始正常运行，不过要想进入MySQL还得先找出此时root用户的密码，通过如下命令可以在日志文件中找出密码"></a>此时MySQL已经开始正常运行，不过要想进入MySQL还得先找出此时root用户的密码，通过如下命令可以在日志文件中找出密码</h4><p>密码：8qFjh&gt;4?klq</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[<span class="symbol">root@</span>qyjy ~]# grep <span class="string">"password"</span> /var/log/mysqld.log</span><br><span class="line"><span class="number">2020</span><span class="number">-06</span><span class="number">-16</span>T02:<span class="number">07</span>:<span class="number">18.845419</span>Z <span class="number">1</span> [Note] A temporary password <span class="keyword">is</span> generated <span class="keyword">for</span> <span class="symbol">root@</span>localhost: <span class="number">8</span>qFjh&gt;<span class="number">4</span>?klqq</span><br></pre></td></tr></table></figure>

<h4 id="如下命令进入数据库"><a href="#如下命令进入数据库" class="headerlink" title="如下命令进入数据库"></a>如下命令进入数据库</h4><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">[root@qyjy ~]# mysql -u root -p</span><br><span class="line">Enter password: </span><br><span class="line">Welcome <span class="keyword">to</span> the MySQL monitor.  Commands end with ; <span class="keyword">or</span> \g.</span><br><span class="line">Your MySQL<span class="built_in"> connection </span>id is 2</span><br><span class="line">Server version: 5.7.30</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2020, Oracle <span class="keyword">and</span>/<span class="keyword">or</span> its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation <span class="keyword">and</span>/<span class="keyword">or</span> its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">'help;'</span> <span class="keyword">or</span> <span class="string">'\h'</span> <span class="keyword">for</span> help.<span class="built_in"> Type </span><span class="string">'\c'</span> <span class="keyword">to</span> clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure>

<h4 id="设置新密码"><a href="#设置新密码" class="headerlink" title="设置新密码"></a>设置新密码</h4><p>因为MySQL有密码设置的规范，故先设置如下命令，再设置新密码，就可以设置简单密码了。</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">mysql&gt; <span class="builtin-name">set</span> global <span class="attribute">validate_password_policy</span>=0;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="builtin-name">set</span> global <span class="attribute">validate_password_length</span>=1;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure>

<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">mysql&gt; ALTER<span class="built_in"> USER </span><span class="string">'root'</span>@<span class="string">'localhost'</span> IDENTIFIED BY <span class="string">'123456'</span>;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure>

<h4 id="但此时还有一个问题，就是因为安装了Yum-Repository，以后每次yum操作都会自动更新，需要把这个卸载掉"><a href="#但此时还有一个问题，就是因为安装了Yum-Repository，以后每次yum操作都会自动更新，需要把这个卸载掉" class="headerlink" title="但此时还有一个问题，就是因为安装了Yum Repository，以后每次yum操作都会自动更新，需要把这个卸载掉"></a>但此时还有一个问题，就是因为安装了Yum Repository，以后每次yum操作都会自动更新，需要把这个卸载掉</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[<span class="symbol">root@</span>qyjy ~]# yum -y remove mysql57-community-release-el7<span class="number">-10.</span>noarch</span><br></pre></td></tr></table></figure>

<h3 id="解决远程连接mysql错误1130代码的方法"><a href="#解决远程连接mysql错误1130代码的方法" class="headerlink" title="解决远程连接mysql错误1130代码的方法"></a>解决远程连接mysql错误1130代码的方法</h3><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">[root@qyjy ~]# mysql -uroot -p</span><br><span class="line">mysql&gt;use mysql;</span><br><span class="line"></span><br><span class="line">mysql&gt;<span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> host = <span class="string">'%'</span>   <span class="keyword">where</span> <span class="keyword">user</span> =<span class="string">'root'</span>; //修改host值（以通配符%的内容增加主机/IP地址），当然也可以直接增加IP地址</span><br><span class="line"></span><br><span class="line">mysql&gt;flush <span class="keyword">privileges</span>; //刷新MySQL的系统权限相关表</span><br><span class="line"></span><br><span class="line">mysql&gt;<span class="keyword">select</span> <span class="string">'host'</span>,<span class="string">'user'</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">user</span>=<span class="string">'root'</span>;</span><br><span class="line"></span><br><span class="line">mysql&gt;quit</span><br></pre></td></tr></table></figure>

<h3 id="Centos7-firewall开放3306端口"><a href="#Centos7-firewall开放3306端口" class="headerlink" title="Centos7 firewall开放3306端口"></a>Centos7 firewall开放3306端口</h3><p>如果客户端连接不上，查看防火墙是否开启。关闭防火墙或开放3306端口即可。</p>
<h4 id="查看防火墙状态"><a href="#查看防火墙状态" class="headerlink" title="查看防火墙状态"></a>查看防火墙状态</h4><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">[root@qyjy ~]<span class="comment"># firewall-cmd --state</span></span><br><span class="line"><span class="keyword">not</span> <span class="built_in">running</span></span><br></pre></td></tr></table></figure>
<h4 id="开启-关闭-重启防火墙firewall"><a href="#开启-关闭-重启防火墙firewall" class="headerlink" title="开启/关闭/重启防火墙firewall"></a>开启/关闭/重启防火墙firewall</h4><p>[root@qyjy ~]# systemctl start firewalld.service<br>[root@qyjy ~]# systemctl stop firewalld.service<br>[root@qyjy ~]# firewall-cmd –reload</p>
<h4 id="查询端口号-3306-是否开启"><a href="#查询端口号-3306-是否开启" class="headerlink" title="查询端口号 3306 是否开启"></a>查询端口号 3306 是否开启</h4><p>firewall-cmd –query-port=3306/tcp</p>
<h4 id="开启端口"><a href="#开启端口" class="headerlink" title="开启端口"></a>开启端口</h4><p>zone – 作用域<br>add-port=3306/tcp – 添加端口，格式为：端口/通讯协议<br>permanent – 永久生效，没有此参数重启后失效</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">[root@qyjy ~]# firewall-cmd <span class="attribute">--zone</span>=public <span class="attribute">--add-port</span>=3306/tcp --permanent</span><br><span class="line"><span class="comment">## 开启3306端口后，dataGrid或naivcat 就能连接到MySQL数据库了</span></span><br></pre></td></tr></table></figure>

<h3 id="云实例配置访问规则"><a href="#云实例配置访问规则" class="headerlink" title="云实例配置访问规则"></a>云实例配置访问规则</h3><p>如果用的是阿里主机，则需要配置端口规则。<br><img src="/2020/06/16/Centos7-Mysql%E5%AE%89%E8%A3%85/00.jpg" alt="00"><br><img src="/2020/06/16/Centos7-Mysql%E5%AE%89%E8%A3%85/01.jpg" alt="01"></p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL表名大小写敏感问题</title>
    <url>/2020/06/16/MySQL%E8%A1%A8%E5%90%8D%E5%A4%A7%E5%B0%8F%E5%86%99%E6%95%8F%E6%84%9F%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>最近在部署war包的时候碰到一个问题：项目启动报错找不到表，但是查看本地数据是有这个表，但服务器数据库没有找到。原来是数MySQL据库大小敏感的原因。</p>
<a id="more"></a>

<p><code>SELECT *FROM</code>platform-shop<code>.SCHEDULE_JOB;</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Table 'platform-shop.SCHEDULE_JOB' doesn't exist</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## The error may exist in com/platform/dao/ScheduleJobDao.java (best guess)</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## The error may involve defaultParameterMap</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## The error occurred while setting parameters</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## SQL: SELECT  job_id,bean_name,method_name,params,cron_expression,status,remark,create_time  FROM SCHEDULE_JOB</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## Cause: java.sql.SQLSyntaxErrorException: Table 'platform-shop.SCHEDULE_JOB' doesn't exist</span></span></span><br><span class="line">; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Table 'platform-shop.SCHEDULE_JOB' doesn't exist</span><br></pre></td></tr></table></figure>
<p>找了一些资料解决了这个问题，记录一下。</p>
<h3 id="变量lower-case-table-names"><a href="#变量lower-case-table-names" class="headerlink" title="变量lower_case_table_names"></a>变量lower_case_table_names</h3><p>为什么本地开发没问题? 因为本地的windows开发环境，默认是大小写不敏感。而服务器环境的linux是敏感的。<br>本地windows我们执行命令，查看自己电脑中的mysql系统变量可以看到：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%lower_case_table_names%'</span>;</span><br></pre></td></tr></table></figure>
<p><img src="/2020/06/16/MySQL%E8%A1%A8%E5%90%8D%E5%A4%A7%E5%B0%8F%E5%86%99%E6%95%8F%E6%84%9F%E9%97%AE%E9%A2%98/01.jpg" alt="01"><br>值为1，表示是大小写不敏感，而linux环境的mysql是0.</p>
<h3 id="修改变量lower-case-table-names"><a href="#修改变量lower-case-table-names" class="headerlink" title="修改变量lower-case-table-names"></a>修改变量lower-case-table-names</h3><ol>
<li>打开mysql配置文件my.cnf <figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">[root<span class="symbol">@qyjy</span> bin]<span class="meta"># vim /etc/my.cnf</span></span><br></pre></td></tr></table></figure></li>
<li>在[mysqld]节点下添加 lower-case-table-names=1</li>
<li>重启mysql服务<figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">[root<span class="symbol">@qyjy</span> bin]<span class="meta"># systemctl restart mysqld.service</span></span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="变量lower-case-table-names的取值"><a href="#变量lower-case-table-names的取值" class="headerlink" title="变量lower-case-table-names的取值"></a>变量lower-case-table-names的取值</h3><p>取值范围有三个，分别是0、1、2. </p>
<ol>
<li>设置成0：表名按你写的SQL大小写存储，大写就大写小写就小写，比较时大小写敏感。 </li>
<li>设置成1：表名转小写后存储到硬盘，比较时大小写不敏感。 </li>
<li>设置成2：表名按你写的SQL大小写存储，大写就大写小写就小写，比较时统一转小写比较。</li>
</ol>
<p>这个选项不仅仅适用于表名的大小写敏感，同样适用于数据库名和表别名。</p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Centos7-Nginx安装</title>
    <url>/2020/06/18/Centos7-Nginx%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>本文描述在Centos7下安装Nginx服务器</p>
<a id="more"></a>

<h3 id="nginx安装环境"><a href="#nginx安装环境" class="headerlink" title="nginx安装环境"></a>nginx安装环境</h3><p>nginx是C语言开发，建议在linux上运行，本教程使用Centos7作为安装环境。</p>
<h4 id="gcc"><a href="#gcc" class="headerlink" title="gcc"></a>gcc</h4><p>安装nginx需要先将官网下载的源码进行编译，编译依赖gcc环境，如果没有gcc环境，需要安装gcc：</p>
<figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">yum</span> <span class="comment">install</span> <span class="comment">gcc</span><span class="literal">-</span><span class="comment">c</span>++</span><br></pre></td></tr></table></figure>
<h4 id="PCRE"><a href="#PCRE" class="headerlink" title="PCRE"></a>PCRE</h4><p>PCRE(Perl Compatible Regular Expressions)是一个Perl库，包括 perl 兼容的正则表达式库。nginx的http模块使用pcre来解析正则表达式，所以需要在linux上安装pcre库。</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">yum <span class="keyword">install</span> -y pcre pcre-devel</span><br></pre></td></tr></table></figure>
<p>注：pcre-devel是使用pcre开发的一个二次开发库。nginx也需要此库。</p>
<h4 id="zlib"><a href="#zlib" class="headerlink" title="zlib"></a>zlib</h4><p>zlib库提供了很多种压缩和解压缩的方式，nginx使用zlib对http包的内容进行gzip，所以需要在linux上安装zlib库。</p>
<figure class="highlight nsis"><table><tr><td class="code"><pre><span class="line">yum install -y <span class="literal">zlib</span> <span class="literal">zlib</span>-devel</span><br></pre></td></tr></table></figure>

<h4 id="openssl"><a href="#openssl" class="headerlink" title="openssl"></a>openssl</h4><p>OpenSSL 是一个强大的安全套接字层密码库，囊括主要的密码算法、常用的密钥和证书封装管理功能及SSL协议，并提供丰富的应用程序供测试或其它目的使用。<br>nginx不仅支持http协议，还支持https（即在ssl协议上传输http），所以需要在linux安装openssl库。</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">yum <span class="keyword">install</span> -y openssl openssl-devel</span><br></pre></td></tr></table></figure>

<h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><h4 id="将nginx-1-8-0-tar-gz拷贝至linux服务器。"><a href="#将nginx-1-8-0-tar-gz拷贝至linux服务器。" class="headerlink" title="将nginx-1.8.0.tar.gz拷贝至linux服务器。"></a>将nginx-1.8.0.tar.gz拷贝至linux服务器。</h4><h4 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">tar</span> <span class="selector-tag">-zxvf</span> <span class="selector-tag">nginx-1</span><span class="selector-class">.8</span><span class="selector-class">.0</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br><span class="line"><span class="selector-tag">cd</span> <span class="selector-tag">nginx-1</span><span class="selector-class">.8</span><span class="selector-class">.0</span></span><br></pre></td></tr></table></figure>

<h4 id="configure"><a href="#configure" class="headerlink" title="configure"></a>configure</h4><figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">./configure --help  查询详细参数（参考本教程附录部分：nginx编译参数）</span><br><span class="line"> </span><br><span class="line">参数设置如下：</span><br><span class="line">./configure \</span><br><span class="line">-<span class="ruby">-prefix=<span class="regexp">/usr/local</span><span class="regexp">/nginx \</span></span></span><br><span class="line"><span class="ruby">--pid-path=<span class="regexp">/var/run</span><span class="regexp">/nginx/nginx</span>.pid \</span></span><br><span class="line"><span class="ruby">--lock-path=<span class="regexp">/var/lock</span><span class="regexp">/nginx.lock \</span></span></span><br><span class="line"><span class="ruby">--error-log-path=<span class="regexp">/var/log</span><span class="regexp">/nginx/error</span>.log \</span></span><br><span class="line"><span class="ruby">--http-log-path=<span class="regexp">/var/log</span><span class="regexp">/nginx/access</span>.log \</span></span><br><span class="line"><span class="ruby">--with-http_gzip_static_module \</span></span><br><span class="line"><span class="ruby">--http-client-body-temp-path=<span class="regexp">/var/temp</span><span class="regexp">/nginx/client</span> \</span></span><br><span class="line"><span class="ruby">--http-proxy-temp-path=<span class="regexp">/var/temp</span><span class="regexp">/nginx/proxy</span> \</span></span><br><span class="line"><span class="ruby">--http-fastcgi-temp-path=<span class="regexp">/var/temp</span><span class="regexp">/nginx/fastcgi</span> \</span></span><br><span class="line"><span class="ruby">--http-uwsgi-temp-path=<span class="regexp">/var/temp</span><span class="regexp">/nginx/uwsgi</span> \</span></span><br><span class="line"><span class="ruby">--http-scgi-temp-path=<span class="regexp">/var/temp</span><span class="regexp">/nginx/scgi</span></span></span><br></pre></td></tr></table></figure>
<p>注意：上边将临时文件目录指定为/var/temp/nginx，需要在/var下创建temp及nginx目录<br>mkdir /var/log/nginx<br>需要创建目录：/var/run/nginx<br>坑一：必须在nginx目录下创建logs目录不然服务器重启后会删除/var/run/nginx目录</p>
<h4 id="编译安装-1"><a href="#编译安装-1" class="headerlink" title="编译安装"></a>编译安装</h4><figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line"><span class="built_in">make</span></span><br><span class="line"><span class="built_in">make</span>  install</span><br></pre></td></tr></table></figure>

<h3 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/usr/local/nginx/sbin/</span></span><br><span class="line"><span class="string">./nginx</span></span><br></pre></td></tr></table></figure>

<p>查询nginx进程：</p>
<p>15098是nginx主进程的进程id，15099是nginx工作进程的进程id</p>
<p>注意：执行./nginx启动nginx，这里可以-c指定加载的nginx配置文件，如下：<br>./nginx -c /usr/local/nginx/conf/nginx.conf</p>
<p>如果不指定-c，nginx在启动时默认加载conf/nginx.conf文件，此文件的地址也可以在编译安装nginx时指定./configure的参数（–conf-path= 指向配置文件（nginx.conf））</p>
<h3 id="停止nginx"><a href="#停止nginx" class="headerlink" title="停止nginx"></a>停止nginx</h3><h4 id="方式1，快速停止："><a href="#方式1，快速停止：" class="headerlink" title="方式1，快速停止："></a>方式1，快速停止：</h4><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/usr/local/nginx/sbin</span></span><br><span class="line"><span class="string">./nginx</span> -s stop</span><br></pre></td></tr></table></figure>
<p>此方式相当于先查出nginx进程id再使用kill命令强制杀掉进程。</p>
<h4 id="方式2，完整停止-建议使用-："><a href="#方式2，完整停止-建议使用-：" class="headerlink" title="方式2，完整停止(建议使用)："></a>方式2，完整停止(建议使用)：</h4><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/usr/local/nginx/sbin</span></span><br><span class="line"><span class="string">./nginx</span> -s <span class="keyword">quit</span></span><br></pre></td></tr></table></figure>
<p>此方式停止步骤是待nginx进程处理任务完毕进行停止。</p>
<h3 id="重启nginx"><a href="#重启nginx" class="headerlink" title="重启nginx"></a>重启nginx</h3><h4 id="方式1，先停止再启动（建议使用）："><a href="#方式1，先停止再启动（建议使用）：" class="headerlink" title="方式1，先停止再启动（建议使用）："></a>方式1，先停止再启动（建议使用）：</h4><p>对nginx进行重启相当于先停止nginx再启动nginx，即先执行停止命令再执行启动命令。<br>如下：</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="string">./nginx</span> -s <span class="keyword">quit</span></span><br><span class="line"><span class="string">./nginx</span></span><br></pre></td></tr></table></figure>

<h4 id="方式2，重新加载配置文件："><a href="#方式2，重新加载配置文件：" class="headerlink" title="方式2，重新加载配置文件："></a>方式2，重新加载配置文件：</h4><p>当nginx的配置文件nginx.conf修改后，要想让配置生效需要重启nginx，使用-s reload不用先停止nginx再启动nginx即可将配置信息在nginx中生效，如下：</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="string">./nginx</span> -s <span class="keyword">reload</span></span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>nginx安装成功，启动nginx，即可访问nginx：<br>到这说明nginx上安装成功。</p>
<h3 id="开机自启动nginx"><a href="#开机自启动nginx" class="headerlink" title="开机自启动nginx"></a>开机自启动nginx</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/init.d/nginx  (输入下面的代码)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">#!/bin/sh</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># nginx - this script starts and stops the nginx daemon</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># chkconfig:   - 85 15</span></span><br><span class="line"><span class="comment"># description:  NGINX is an HTTP(S) server, HTTP(S) reverse \</span></span><br><span class="line"><span class="comment">#               proxy and IMAP/POP3 proxy server</span></span><br><span class="line"><span class="comment"># processname: nginx</span></span><br><span class="line"><span class="comment"># config:      /etc/nginx/nginx.conf</span></span><br><span class="line"><span class="comment"># config:      /etc/sysconfig/nginx</span></span><br><span class="line"><span class="comment"># pidfile:     /var/run/nginx.pid</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Source function library.</span></span><br><span class="line">. /etc/rc.d/init.d/<span class="built_in">functions</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Source networking configuration.</span></span><br><span class="line">. /etc/sysconfig/network</span><br><span class="line"></span><br><span class="line"><span class="comment"># Check that networking is up.</span></span><br><span class="line">[ <span class="string">"<span class="variable">$NETWORKING</span>"</span> = <span class="string">"no"</span> ] &amp;&amp; <span class="built_in">exit</span> 0</span><br><span class="line"></span><br><span class="line">nginx=<span class="string">"/usr/sbin/nginx"</span></span><br><span class="line">prog=$(basename <span class="variable">$nginx</span>)</span><br><span class="line"></span><br><span class="line">NGINX_CONF_FILE=<span class="string">"/etc/nginx/nginx.conf"</span></span><br><span class="line"></span><br><span class="line">[ -f /etc/sysconfig/nginx ] &amp;&amp; . /etc/sysconfig/nginx</span><br><span class="line"></span><br><span class="line">lockfile=/var/lock/subsys/nginx</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">make_dirs</span></span>() &#123;</span><br><span class="line">   <span class="comment"># make required directories</span></span><br><span class="line">   user=`<span class="variable">$nginx</span> -V 2&gt;&amp;1 | grep <span class="string">"configure arguments:.*--user="</span> | sed <span class="string">'s/[^*]*--user=\([^ ]*\).*/\1/g'</span> -`</span><br><span class="line">   <span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$user</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">      <span class="keyword">if</span> [ -z <span class="string">"`grep <span class="variable">$user</span> /etc/passwd`"</span> ]; <span class="keyword">then</span></span><br><span class="line">         useradd -M -s /bin/nologin <span class="variable">$user</span></span><br><span class="line">      <span class="keyword">fi</span></span><br><span class="line">      options=`<span class="variable">$nginx</span> -V 2&gt;&amp;1 | grep <span class="string">'configure arguments:'</span>`</span><br><span class="line">      <span class="keyword">for</span> opt <span class="keyword">in</span> <span class="variable">$options</span>; <span class="keyword">do</span></span><br><span class="line">          <span class="keyword">if</span> [ `<span class="built_in">echo</span> <span class="variable">$opt</span> | grep <span class="string">'.*-temp-path'</span>` ]; <span class="keyword">then</span></span><br><span class="line">              value=`<span class="built_in">echo</span> <span class="variable">$opt</span> | cut -d <span class="string">"="</span> -f 2`</span><br><span class="line">              <span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$value</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">                  <span class="comment"># echo "creating" $value</span></span><br><span class="line">                  mkdir -p <span class="variable">$value</span> &amp;&amp; chown -R <span class="variable">$user</span> <span class="variable">$value</span></span><br><span class="line">              <span class="keyword">fi</span></span><br><span class="line">          <span class="keyword">fi</span></span><br><span class="line">       <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start</span></span>() &#123;</span><br><span class="line">    [ -x <span class="variable">$nginx</span> ] || <span class="built_in">exit</span> 5</span><br><span class="line">    [ -f <span class="variable">$NGINX_CONF_FILE</span> ] || <span class="built_in">exit</span> 6</span><br><span class="line">    make_dirs</span><br><span class="line">    <span class="built_in">echo</span> -n $<span class="string">"Starting <span class="variable">$prog</span>: "</span></span><br><span class="line">    daemon <span class="variable">$nginx</span> -c <span class="variable">$NGINX_CONF_FILE</span></span><br><span class="line">    retval=$?</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    [ <span class="variable">$retval</span> -eq 0 ] &amp;&amp; touch <span class="variable">$lockfile</span></span><br><span class="line">    <span class="built_in">return</span> <span class="variable">$retval</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> -n $<span class="string">"Stopping <span class="variable">$prog</span>: "</span></span><br><span class="line">    killproc <span class="variable">$prog</span> -QUIT</span><br><span class="line">    retval=$?</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    [ <span class="variable">$retval</span> -eq 0 ] &amp;&amp; rm -f <span class="variable">$lockfile</span></span><br><span class="line">    <span class="built_in">return</span> <span class="variable">$retval</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">restart</span></span>() &#123;</span><br><span class="line">    configtest || <span class="built_in">return</span> $?</span><br><span class="line">    stop</span><br><span class="line">    sleep 1</span><br><span class="line">    start</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">reload</span></span>() &#123;</span><br><span class="line">    configtest || <span class="built_in">return</span> $?</span><br><span class="line">    <span class="built_in">echo</span> -n $<span class="string">"Reloading <span class="variable">$prog</span>: "</span></span><br><span class="line">    killproc <span class="variable">$prog</span> -HUP</span><br><span class="line">    retval=$?</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">force_reload</span></span>() &#123;</span><br><span class="line">    restart</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">configtest</span></span>() &#123;</span><br><span class="line">  <span class="variable">$nginx</span> -t -c <span class="variable">$NGINX_CONF_FILE</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">rh_status</span></span>() &#123;</span><br><span class="line">    status <span class="variable">$prog</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">rh_status_q</span></span>() &#123;</span><br><span class="line">    rh_status &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">    start)</span><br><span class="line">        rh_status_q &amp;&amp; <span class="built_in">exit</span> 0</span><br><span class="line">        <span class="variable">$1</span></span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        rh_status_q || <span class="built_in">exit</span> 0</span><br><span class="line">        <span class="variable">$1</span></span><br><span class="line">        ;;</span><br><span class="line">    restart|configtest)</span><br><span class="line">        <span class="variable">$1</span></span><br><span class="line">        ;;</span><br><span class="line">    reload)</span><br><span class="line">        rh_status_q || <span class="built_in">exit</span> 7</span><br><span class="line">        <span class="variable">$1</span></span><br><span class="line">        ;;</span><br><span class="line">    force-reload)</span><br><span class="line">        force_reload</span><br><span class="line">        ;;</span><br><span class="line">    status)</span><br><span class="line">        rh_status</span><br><span class="line">        ;;</span><br><span class="line">    condrestart|try-restart)</span><br><span class="line">        rh_status_q || <span class="built_in">exit</span> 0</span><br><span class="line">            ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> $<span class="string">"Usage: <span class="variable">$0</span> &#123;start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest&#125;"</span></span><br><span class="line">        <span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure>

<p>其内容参考nginx官方文档<br>需要注意的配置：<br>nginx=”/usr/local/nginx/sbin/nginx”<br>//修改成nginx执行程序的路径。<br>NGINX_CONF_FILE=”/usr/local/nginx/conf/nginx.conf”<br>//修改成nginx.conf文件的路径。</p>
<p>保存后设置文件的执行权限<br>[root@localhost ~]# chmod a+x /etc/init.d/nginx</p>
<p>至此就可以通过下面指令控制启动停止<br>/etc/init.d/nginx start<br>/etc/init.d/nginx stop</p>
<p>上面的方法完成了用脚本管理nginx服务的功能，但是还是不太方便。<br>先将nginx服务加入chkconfig管理列表：<br>[root@localhost ~]# chkconfig –add /etc/init.d/nginx</p>
<p>加完这个之后，就可以使用service对nginx进行启动，重启等操作了。<br>service nginx start<br>service nginx stop<br>service nginx restart</p>
<p>坑二：最后设置开机自动启动<br>[root@localhost ~]# chkconfig nginx on</p>
]]></content>
  </entry>
  <entry>
    <title>SpringBoot-MyBatis入门笔记</title>
    <url>/2020/06/17/SpringBoot-MyBatis%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>在 DAL（Data Access Layer） 数据访问层，目前会有三种方向的解决方案：</p>
<ul>
<li>JDBC</li>
<li>MyBatis</li>
<li>JPA<a id="more"></a>

</li>
</ul>
<p>注意，主要几种方式可以组合使用。</p>
<ul>
<li>MyBatis + XML</li>
<li>MyBatis + 注解</li>
<li>MyBatis-Plus</li>
</ul>
<h3 id="MyBatis-XML"><a href="#MyBatis-XML" class="headerlink" title="MyBatis + XML"></a>MyBatis + XML</h3><h4 id="在pom-xml里引入依赖"><a href="#在pom-xml里引入依赖" class="headerlink" title="在pom.xml里引入依赖"></a>在pom.xml里引入依赖</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Springboot起步依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--mybatis和springboot的集成jar包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 单元测试包 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--连接mysql的jar包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.20<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--代码简化神器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="启动类-MyBatisTestApplication"><a href="#启动类-MyBatisTestApplication" class="headerlink" title="启动类 MyBatisTestApplication"></a>启动类 MyBatisTestApplication</h4><p><code>配置 @MapperScan 注解，扫描对应 Mapper 接口所在的包路径</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@MapperScan</span>(<span class="string">"com.zhuhb5.dao"</span>)</span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisTestApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(MyBatisTestApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>工具：JDBC-&gt;Dbutils(QueryRunner)-&gt;jdbcTemplate<br>功能简单，sql语句编写在java代码里面；硬编码高耦合的方式；</p>
<p>编写sql -&gt; 预编译 -&gt; 设置参数 -&gt; 执行sql -&gt; 封装结果</p>
<p>框架：整体解决方案<br>Hibernate: 全自动映射ORM框架，旨在消除sql</p>
<p>javaBean -&gt; 编写sql -&gt; 预编译 -&gt; 设置参数 -&gt; 执行sql -&gt; 封装结果 -&gt; DbRecords</p>
<p>MyBatis: 半自动ORM框架，sql与java编码分离，sql是开发人员控制。</p>
<h3 id="Mybatis3-官方文档-https-mybatis-org-mybatis-3-zh-index-html"><a href="#Mybatis3-官方文档-https-mybatis-org-mybatis-3-zh-index-html" class="headerlink" title="Mybatis3 官方文档 https://mybatis.org/mybatis-3/zh/index.html"></a>Mybatis3 官方文档 <a href="https://mybatis.org/mybatis-3/zh/index.html" target="_blank" rel="noopener">https://mybatis.org/mybatis-3/zh/index.html</a></h3><p>按官方文档来操作一遍</p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>在pom.xml添加mybatis的jar包</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="从-XML-中构建-SqlSessionFactory"><a href="#从-XML-中构建-SqlSessionFactory" class="headerlink" title="从 XML 中构建 SqlSessionFactory"></a>从 XML 中构建 SqlSessionFactory</h4><p>未完待续。。。</p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
      <tags>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis-源码分析-调试环境搭建</title>
    <url>/2020/06/06/MyBatis-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>本文主要是搭建 MyBatis 源码调试环境</p>
<a id="more"></a>

<h3 id="依赖工具"><a href="#依赖工具" class="headerlink" title="依赖工具"></a>依赖工具</h3><p>Maven<br>Git<br>JDK<br>IntelliJ IDEA  </p>
<!-- more -->
<h3 id="源码拉取"><a href="#源码拉取" class="headerlink" title="源码拉取"></a>源码拉取</h3><p>从官方仓库 <a href="https://github.com/mybatis/mybatis-3" target="_blank" rel="noopener">https://github.com/mybatis/mybatis-3</a> Fork 出属于自己的仓库。为什么要 Fork ？既然开始阅读、调试源码，我们可能会写一些注释，有了自己的仓库，可以进行自由的提交。<br>使用 IntelliJ IDEA 从 Fork 出来的仓库拉取代码。<br>本文使用的 MyBatis 版本为 3.5.0-SNAPSHOT 。<br>因为 MyBatis 是有些年份的框架，所以克隆的过程可能比较慢，耐心等待。</p>
<h3 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h3><p>MyBatis 想要调试，非常方便，只需要打开 org.apache.ibatis.autoconstructor.AutoConstructorTest 单元测试类，任意一个单元测试方法，右键，开始调试即可。<br>当然，考虑到让大家更好的理解 AutoConstructorTest 这个类，下面，我们还是详细解析下。AutoConstructorTest 所在在 autoconstructor 包下，整体结构如下：<br><img src="/2020/06/06/MyBatis-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/01.jpg" alt="01"></p>
<h3 id="mybatis-config-xml"><a href="#mybatis-config-xml" class="headerlink" title="mybatis-config.xml"></a>mybatis-config.xml</h3><p>mybatis-config.xml ，MyBatis 配置文件。XML 如下：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE configuration</span><br><span class="line">        PUBLIC <span class="string">"-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line">        <span class="string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;configuration&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- autoMappingBehavior should be set in each test <span class="keyword">case</span> --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;environments <span class="keyword">default</span>=<span class="string">"development"</span>&gt;</span><br><span class="line">        &lt;environment id=<span class="string">"development"</span>&gt;</span><br><span class="line">            &lt;!-- 配置事务管理 --&gt;</span><br><span class="line">            &lt;transactionManager type=<span class="string">"JDBC"</span>&gt;</span><br><span class="line">                &lt;property name=<span class="string">""</span> value=<span class="string">""</span>/&gt;</span><br><span class="line">            &lt;/transactionManager&gt;</span><br><span class="line">            &lt;!-- 配置数据源  --&gt;</span><br><span class="line">            &lt;dataSource type=<span class="string">"UNPOOLED"</span>&gt;</span><br><span class="line">                &lt;property name=<span class="string">"driver"</span> value=<span class="string">"org.hsqldb.jdbcDriver"</span>/&gt;</span><br><span class="line">                &lt;property name=<span class="string">"url"</span> value=<span class="string">"jdbc:hsqldb:mem:automapping"</span>/&gt;</span><br><span class="line">                &lt;property name=<span class="string">"username"</span> value=<span class="string">"sa"</span>/&gt;</span><br><span class="line">            &lt;/dataSource&gt;</span><br><span class="line">        &lt;/environment&gt;</span><br><span class="line">    &lt;/environments&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 扫描 Mapper 文件  --&gt;</span><br><span class="line">    &lt;mappers&gt;</span><br><span class="line">        &lt;mapper resource=<span class="string">"org/apache/ibatis/autoconstructor/AutoConstructorMapper.xml"</span>/&gt;</span><br><span class="line">    &lt;/mappers&gt;</span><br><span class="line"></span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>在 <environments> 标签中，配置了事务管理和数据源。考虑到减少外部依赖，所以使用了 HSQLDB 。</environments></li>
<li>在 <mappers> 标签中，配置了需要扫描的 Mapper 文件。目前，仅仅扫描 AutoConstructorMapper.xml 文件。  </mappers></li>
</ul>
<h3 id="AutoConstructorMapper-xml"><a href="#AutoConstructorMapper-xml" class="headerlink" title="AutoConstructorMapper.xml"></a>AutoConstructorMapper.xml</h3><p>AutoConstructorMapper.xml ，Mapper 文件。代码如下：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">    PUBLIC <span class="string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line">    <span class="string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;mapper namespace=<span class="string">"org.apache.ibatis.autoconstructor.AutoConstructorMapper"</span>&gt;</span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>对应的接口为 org.apache.ibatis.autoconstructor.AutoConstructorMapper 。</li>
</ul>
<h4 id="AutoConstructorMapper"><a href="#AutoConstructorMapper" class="headerlink" title="AutoConstructorMapper"></a>AutoConstructorMapper</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AutoConstructorMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ========== PrimitiveSubject ==========</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM subject WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function">PrimitiveSubject <span class="title">getSubject</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> id)</span></span>;</span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM subject"</span>)</span><br><span class="line">    <span class="function">List&lt;PrimitiveSubject&gt; <span class="title">getSubjects</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ========== AnnotatedSubject ==========</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM subject"</span>)</span><br><span class="line">    <span class="function">List&lt;AnnotatedSubject&gt; <span class="title">getAnnotatedSubjects</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ========== BadSubject ==========</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM subject"</span>)</span><br><span class="line">    <span class="function">List&lt;BadSubject&gt; <span class="title">getBadSubjects</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ========== ExtensiveSubject ==========</span></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"SELECT * FROM extensive_subject"</span>)</span><br><span class="line">    <span class="function">List&lt;ExtensiveSubject&gt; <span class="title">getExtensiveSubject</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>使用注解的方法，编写 SQL 。</li>
</ul>
<h3 id="CreateDB-sql"><a href="#CreateDB-sql" class="headerlink" title="CreateDB.sql"></a>CreateDB.sql</h3><p>CreateDB.sql 文件，用于单元测试里，初始化数据库的数据。如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">DROP TABLE subject</span><br><span class="line">IF EXISTS;</span><br><span class="line"></span><br><span class="line">DROP TABLE extensive_subject</span><br><span class="line">IF EXISTS;</span><br><span class="line"></span><br><span class="line"><span class="function">CREATE TABLE <span class="title">subject</span> <span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  id     INT NOT NULL,</span></span></span><br><span class="line"><span class="function"><span class="params">  name   VARCHAR(<span class="number">20</span>)</span>,</span></span><br><span class="line"><span class="function">  age    INT NOT NULL,</span></span><br><span class="line"><span class="function">  height INT,</span></span><br><span class="line"><span class="function">  weight INT,</span></span><br><span class="line"><span class="function">  active BIT,</span></span><br><span class="line"><span class="function">  dt     TIMESTAMP</span></span><br><span class="line"><span class="function">)</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">CREATE TABLE <span class="title">extensive_subject</span> <span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  aByte      TINYINT,</span></span></span><br><span class="line"><span class="function"><span class="params">  aShort     SMALLINT,</span></span></span><br><span class="line"><span class="function"><span class="params">  aChar      CHAR,</span></span></span><br><span class="line"><span class="function"><span class="params">  anInt      INT,</span></span></span><br><span class="line"><span class="function"><span class="params">  aLong      BIGINT,</span></span></span><br><span class="line"><span class="function"><span class="params">  aFloat     FLOAT,</span></span></span><br><span class="line"><span class="function"><span class="params">  aDouble    DOUBLE,</span></span></span><br><span class="line"><span class="function"><span class="params">  aBoolean   BIT,</span></span></span><br><span class="line"><span class="function"><span class="params">  aString    VARCHAR(<span class="number">255</span>)</span>,</span></span><br><span class="line"><span class="function">  anEnum     <span class="title">VARCHAR</span><span class="params">(<span class="number">50</span>)</span>,</span></span><br><span class="line"><span class="function">  aClob      LONGVARCHAR,</span></span><br><span class="line"><span class="function">  aBlob      LONGVARBINARY,</span></span><br><span class="line"><span class="function">  aTimestamp TIMESTAMP</span></span><br><span class="line"><span class="function">)</span>;</span><br><span class="line"></span><br><span class="line">INSERT INTO subject VALUES</span><br><span class="line">  (<span class="number">1</span>, <span class="string">'a'</span>, <span class="number">10</span>, <span class="number">100</span>, <span class="number">45</span>, <span class="number">1</span>, CURRENT_TIMESTAMP),</span><br><span class="line">  (<span class="number">2</span>, <span class="string">'b'</span>, <span class="number">10</span>, NULL, <span class="number">45</span>, <span class="number">1</span>, CURRENT_TIMESTAMP),</span><br><span class="line">  (<span class="number">2</span>, <span class="string">'c'</span>, <span class="number">10</span>, NULL, NULL, <span class="number">0</span>, CURRENT_TIMESTAMP);</span><br><span class="line"></span><br><span class="line">INSERT INTO extensive_subject</span><br><span class="line">VALUES</span><br><span class="line">  (<span class="number">1</span>, <span class="number">1</span>, <span class="string">'a'</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1.0</span>, <span class="number">1</span>, <span class="string">'a'</span>, <span class="string">'AVALUE'</span>, <span class="string">'ACLOB'</span>, <span class="string">'aaaaaabbbbbb'</span>, CURRENT_TIMESTAMP),</span><br><span class="line">  (<span class="number">2</span>, <span class="number">2</span>, <span class="string">'b'</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2.0</span>, <span class="number">2</span>, <span class="string">'b'</span>, <span class="string">'BVALUE'</span>, <span class="string">'BCLOB'</span>, <span class="string">'010101010101'</span>, CURRENT_TIMESTAMP),</span><br><span class="line">  (<span class="number">3</span>, <span class="number">3</span>, <span class="string">'c'</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">3.0</span>, <span class="number">3</span>, <span class="string">'c'</span>, <span class="string">'CVALUE'</span>, <span class="string">'CCLOB'</span>, <span class="string">'777d010078da'</span>, CURRENT_TIMESTAMP);</span><br></pre></td></tr></table></figure>
<ul>
<li>创建了 subject 表，并初始化三条数据。</li>
<li>创建了 extensive_subject 表，并初始化三条数据。</li>
</ul>
<h3 id="POJO"><a href="#POJO" class="headerlink" title="POJO"></a>POJO</h3><p>在 AutoConstructorMapper 中，我们可以看到有四个 POJO 类。但是，从 CreateDB.sql 中，实际只有两个表。这个是为什么呢？继续往下看噢。</p>
<h4 id="AnnotatedSubject"><a href="#AnnotatedSubject" class="headerlink" title="AnnotatedSubject"></a>AnnotatedSubject</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.apache.ibatis.autoconstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.AutomapConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AnnotatedSubject</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> height;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> weight;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AnnotatedSubject</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> id, <span class="keyword">final</span> String name, <span class="keyword">final</span> <span class="keyword">int</span> age, <span class="keyword">final</span> <span class="keyword">int</span> height, <span class="keyword">final</span> <span class="keyword">int</span> weight)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.height = height;</span><br><span class="line">        <span class="keyword">this</span>.weight = weight;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AutomapConstructor</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">AnnotatedSubject</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> id, <span class="keyword">final</span> String name, <span class="keyword">final</span> <span class="keyword">int</span> age, <span class="keyword">final</span> Integer height, <span class="keyword">final</span> Integer weight)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.height = height == <span class="keyword">null</span> ? <span class="number">0</span> : height;</span><br><span class="line">        <span class="keyword">this</span>.weight = weight == <span class="keyword">null</span> ? <span class="number">0</span> : weight;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>对应 subject 表。<br>@AutomapConstructor 注解，表示 MyBatis 查询后，在创建 AnnotatedSubject 对象，使用该构造方法。<br>实际场景下，非常少使用这个注解，甚至 Google 上资料也不多。</p>
<h5 id="PrimitiveSubject"><a href="#PrimitiveSubject" class="headerlink" title="PrimitiveSubject"></a>PrimitiveSubject</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.apache.ibatis.autoconstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrimitiveSubject</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> height;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> weight;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">boolean</span> active;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Date dt;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PrimitiveSubject</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> id, <span class="keyword">final</span> String name, <span class="keyword">final</span> <span class="keyword">int</span> age, <span class="keyword">final</span> <span class="keyword">int</span> height, <span class="keyword">final</span> <span class="keyword">int</span> weight, <span class="keyword">final</span> <span class="keyword">boolean</span> active, <span class="keyword">final</span> Date dt)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.height = height;</span><br><span class="line">        <span class="keyword">this</span>.weight = weight;</span><br><span class="line">        <span class="keyword">this</span>.active = active;</span><br><span class="line">        <span class="keyword">this</span>.dt = dt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>对应的也是 subject 表。<br>和 AnnotatedSubject 不同，在其构造方法上，weight 和 height 方法参数的类型是 int ，而不是 Integer 。那么，如果 subject 表中的记录，这两个字段为 NULL 时，会创建 PrimitiveSubject 对象报错。</p>
<h5 id="BadSubject"><a href="#BadSubject" class="headerlink" title="BadSubject"></a>BadSubject</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.apache.ibatis.autoconstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BadSubject</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Height height;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Double weight;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BadSubject</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> id, <span class="keyword">final</span> String name, <span class="keyword">final</span> <span class="keyword">int</span> age, <span class="keyword">final</span> Height height, <span class="keyword">final</span> Double weight)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.height = height;</span><br><span class="line">        <span class="keyword">this</span>.weight = weight == <span class="keyword">null</span> ? <span class="number">0</span> : weight;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Height</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>对应的也是 subject 表。</li>
<li>和 AnnotatedSubject 不同，在其构造方法上，height 方法参数的类型是 Height ，而不是 Integer 。因为 MyBatis 无法识别 Height 类，所以会创建 BadSubject 对象报错。</li>
<li>一般情况下，POJO 对象里，不使用基本类型。</li>
</ul>
<h4 id="ExtensiveSubject"><a href="#ExtensiveSubject" class="headerlink" title="ExtensiveSubject"></a>ExtensiveSubject</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.apache.ibatis.autoconstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExtensiveSubject</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">byte</span> aByte;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">short</span> aShort;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">char</span> aChar;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> anInt;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">long</span> aLong;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">float</span> aFloat;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">double</span> aDouble;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">boolean</span> aBoolean;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String aString;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// enum types</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> TestEnum anEnum;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// array types</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// string to lob types:</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String aClob;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String aBlob;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ExtensiveSubject</span><span class="params">(<span class="keyword">final</span> <span class="keyword">byte</span> aByte,</span></span></span><br><span class="line"><span class="function"><span class="params">                            <span class="keyword">final</span> <span class="keyword">short</span> aShort,</span></span></span><br><span class="line"><span class="function"><span class="params">                            <span class="keyword">final</span> <span class="keyword">char</span> aChar,</span></span></span><br><span class="line"><span class="function"><span class="params">                            <span class="keyword">final</span> <span class="keyword">int</span> anInt,</span></span></span><br><span class="line"><span class="function"><span class="params">                            <span class="keyword">final</span> <span class="keyword">long</span> aLong,</span></span></span><br><span class="line"><span class="function"><span class="params">                            <span class="keyword">final</span> <span class="keyword">float</span> aFloat,</span></span></span><br><span class="line"><span class="function"><span class="params">                            <span class="keyword">final</span> <span class="keyword">double</span> aDouble,</span></span></span><br><span class="line"><span class="function"><span class="params">                            <span class="keyword">final</span> <span class="keyword">boolean</span> aBoolean,</span></span></span><br><span class="line"><span class="function"><span class="params">                            <span class="keyword">final</span> String aString,</span></span></span><br><span class="line"><span class="function"><span class="params">                            <span class="keyword">final</span> TestEnum anEnum,</span></span></span><br><span class="line"><span class="function"><span class="params">                            <span class="keyword">final</span> String aClob,</span></span></span><br><span class="line"><span class="function"><span class="params">                            <span class="keyword">final</span> String aBlob)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.aByte = aByte;</span><br><span class="line">        <span class="keyword">this</span>.aShort = aShort;</span><br><span class="line">        <span class="keyword">this</span>.aChar = aChar;</span><br><span class="line">        <span class="keyword">this</span>.anInt = anInt;</span><br><span class="line">        <span class="keyword">this</span>.aLong = aLong;</span><br><span class="line">        <span class="keyword">this</span>.aFloat = aFloat;</span><br><span class="line">        <span class="keyword">this</span>.aDouble = aDouble;</span><br><span class="line">        <span class="keyword">this</span>.aBoolean = aBoolean;</span><br><span class="line">        <span class="keyword">this</span>.aString = aString;</span><br><span class="line">        <span class="keyword">this</span>.anEnum = anEnum;</span><br><span class="line">        <span class="keyword">this</span>.aClob = aClob;</span><br><span class="line">        <span class="keyword">this</span>.aBlob = aBlob;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span> TestEnum &#123;</span><br><span class="line">        AVALUE, BVALUE, CVALUE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>对应的也是 extensive_subject 表。<br>这是个复杂对象，基本涵盖了各种类型的数据。</p>
<h3 id="AutoConstructorTest"><a href="#AutoConstructorTest" class="headerlink" title="AutoConstructorTest"></a>AutoConstructorTest</h3><p>org.apache.ibatis.autoconstructor.AutoConstructorTest ，单元测试类。</p>
<h4 id="setUp"><a href="#setUp" class="headerlink" title="setUp"></a>setUp</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line"><span class="meta">@BeforeClass</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setUp</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// create a SqlSessionFactory</span></span><br><span class="line">    <span class="comment">// 创建 SqlSessionFactory 对象，基于 mybatis-config.xml 配置文件。</span></span><br><span class="line">    <span class="keyword">try</span> (Reader reader = Resources.getResourceAsReader(<span class="string">"org/apache/ibatis/autoconstructor/mybatis-config.xml"</span>)) &#123;</span><br><span class="line">        sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(reader);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// populate in-memory database</span></span><br><span class="line">    <span class="comment">// 初始化数据到内存数据库，基于 CreateDB.sql SQL 文件。</span></span><br><span class="line">    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),</span><br><span class="line">            <span class="string">"org/apache/ibatis/autoconstructor/CreateDB.sql"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>创建 SqlSessionFactory 对象，基于 mybatis-config.xml 配置文件。<br>初始化数据到内存数据库，基于 CreateDB.sql SQL 文件。</p>
<h4 id="测试方法"><a href="#测试方法" class="headerlink" title="测试方法"></a>测试方法</h4><p>右键任一单元测试方法，愉快的调试起来把。</p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
      <tags>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis-源码分析-反射模块</title>
    <url>/2020/06/10/MyBatis-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E5%8F%8D%E5%B0%84%E6%A8%A1%E5%9D%97/</url>
    <content><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>本文，我们来分享 MyBatis 的反射模块</p>
<a id="more"></a>
<p>MyBatis 反射模块对应 reflection 包。如下图所示：<br><img src="/2020/06/10/MyBatis-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E5%8F%8D%E5%B0%84%E6%A8%A1%E5%9D%97/01.jpg" alt="01"><br><code>Java 中的反射虽然功能强大，但对大多数开发人员来说，写出高质量的反射代码还是 有一定难度的。MyBatis 中专门提供了反射模块，该模块对 Java 原生的反射进行了良好的封装，提了更加简洁易用的 API，方便上层使调用，并且对反射操作进行了一系列优化，例如缓存了类的元数据，提高了反射操作的性能。</code></p>
<h3 id="Reflector"><a href="#Reflector" class="headerlink" title="Reflector"></a>Reflector</h3><p>org.apache.ibatis.reflection.Reflector ，反射器，每个 Reflector 对应一个类。Reflector 会缓存反射操作需要的类的信息，例如：构造方法、属性名、setting / getting 方法等等。代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Reflector</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 对应的类</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Class&lt;?&gt; type;</span><br><span class="line">  <span class="comment">// 可读属性数组</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> String[] readablePropertyNames;</span><br><span class="line">  <span class="comment">// 可写属性数组</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> String[] writeablePropertyNames;</span><br><span class="line">  <span class="comment">// 属性对应的 setting 方法的映射 key: 属性名称  value: Invoke对象</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;String, Invoker&gt; setMethods = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">  <span class="comment">// 属性对应的 getting 方法的映射 key: 属性名称  value: Invoke对象</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;String, Invoker&gt; getMethods = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">  <span class="comment">// 属性对应的 setting 方法的方法参数类型的映射 key 为属性名称  value 为方法参数类型</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;String, Class&lt;?&gt;&gt; setTypes = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">  <span class="comment">// 属性对应的 getting 方法的返回值类型的映射 key 为属性名称  value 为返回值的类型</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> Map&lt;String, Class&lt;?&gt;&gt; getTypes = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">  <span class="comment">// 默认构造方法</span></span><br><span class="line">  <span class="keyword">private</span> Constructor&lt;?&gt; defaultConstructor;</span><br><span class="line">  <span class="comment">// 不区分大小写的属性集合</span></span><br><span class="line">  <span class="keyword">private</span> Map&lt;String, String&gt; caseInsensitivePropertyMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Reflector</span><span class="params">(Class&lt;?&gt; clazz)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 设置对应的类</span></span><br><span class="line">    type = clazz;</span><br><span class="line">    <span class="comment">// &lt;1&gt; 初始化 defaultConstructor</span></span><br><span class="line">    addDefaultConstructor(clazz);</span><br><span class="line">    <span class="comment">// &lt;2&gt; // 初始化 getMethods 和 getTypes ，通过遍历 getting 方法</span></span><br><span class="line">    addGetMethods(clazz);</span><br><span class="line">    <span class="comment">// &lt;3&gt; // 初始化 setMethods 和 setTypes ，通过遍历 setting 方法。</span></span><br><span class="line">    addSetMethods(clazz);</span><br><span class="line">    <span class="comment">// &lt;4&gt; // 初始化 getMethods + getTypes 和 setMethods + setTypes ，通过遍历 fields 属性。</span></span><br><span class="line">    addFields(clazz);</span><br><span class="line">    <span class="comment">// &lt;5&gt; 初始化 readablePropertyNames、writeablePropertyNames、caseInsensitivePropertyMap 属性</span></span><br><span class="line">    readablePropertyNames = getMethods.keySet().toArray(<span class="keyword">new</span> String[getMethods.keySet().size()]);</span><br><span class="line">    writeablePropertyNames = setMethods.keySet().toArray(<span class="keyword">new</span> String[setMethods.keySet().size()]);</span><br><span class="line">    <span class="keyword">for</span> (String propName : readablePropertyNames) &#123;</span><br><span class="line">      caseInsensitivePropertyMap.put(propName.toUpperCase(Locale.ENGLISH), propName);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (String propName : writeablePropertyNames) &#123;</span><br><span class="line">      caseInsensitivePropertyMap.put(propName.toUpperCase(Locale.ENGLISH), propName);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 省略一些方法。。。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="addDefaultConstructor"><a href="#addDefaultConstructor" class="headerlink" title="addDefaultConstructor"></a>addDefaultConstructor</h4><p>addDefaultConstructor(Class&lt;?&gt; clazz) 方法，查找默认无参构造方法。代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addDefaultConstructor</span><span class="params">(Class&lt;?&gt; clazz)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 获得所有构造方法</span></span><br><span class="line">  Constructor&lt;?&gt;[] consts = clazz.getDeclaredConstructors();</span><br><span class="line">  <span class="keyword">for</span> (Constructor&lt;?&gt; constructor : consts) &#123;</span><br><span class="line">    <span class="comment">// 判断无参的构造方法</span></span><br><span class="line">    <span class="keyword">if</span> (constructor.getParameterTypes().length == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.defaultConstructor = constructor;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="addGetMethods"><a href="#addGetMethods" class="headerlink" title="addGetMethods"></a>addGetMethods</h4><p>addGetMethods(Class&lt;?&gt; cls) 方法，初始化 getMethods 和 getTypes ，通过遍历 getting 方法。代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addGetMethods</span><span class="params">(Class&lt;?&gt; cls)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// &lt;1&gt; 属性与其 getting 方法的映射。</span></span><br><span class="line">    Map&lt;String, List&lt;Method&gt;&gt; conflictingGetters = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="comment">// &lt;2&gt; 获得所有方法</span></span><br><span class="line">    Method[] methods = getClassMethods(cls);</span><br><span class="line">    <span class="comment">// &lt;3&gt; 遍历所有方法</span></span><br><span class="line">    <span class="keyword">for</span> (Method method : methods) &#123;</span><br><span class="line">      <span class="comment">// &lt;3.1&gt; 参数大于 0 ，说明不是 getting 方法，忽略</span></span><br><span class="line">      <span class="keyword">if</span> (method.getParameterTypes().length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      String name = method.getName();</span><br><span class="line">      <span class="comment">// &lt;3.2&gt; 以 get 和 is 方法名开头，说明是 getting 方法</span></span><br><span class="line">      <span class="keyword">if</span> ((name.startsWith(<span class="string">"get"</span>) &amp;&amp; name.length() &gt; <span class="number">3</span>)</span><br><span class="line">          || (name.startsWith(<span class="string">"is"</span>) &amp;&amp; name.length() &gt; <span class="number">2</span>)) &#123;</span><br><span class="line">        <span class="comment">// &lt;3.3&gt; 获得属性</span></span><br><span class="line">        name = PropertyNamer.methodToProperty(name);</span><br><span class="line">        <span class="comment">// &lt;3.4&gt; 添加到 conflictingGetters 中</span></span><br><span class="line">        addMethodConflict(conflictingGetters, name, method);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// &lt;4&gt; 解决 getting 冲突方法</span></span><br><span class="line">    resolveGetterConflicts(conflictingGetters);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>


<h5 id="getClassMethods"><a href="#getClassMethods" class="headerlink" title="getClassMethods"></a>getClassMethods</h5><p>getClassMethods(Class&lt;?&gt; cls)方法，获得所有方法。代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> Method[] getClassMethods(Class&lt;?&gt; cls) &#123;</span><br><span class="line">  <span class="comment">// 每个方法签名与该方法的映射</span></span><br><span class="line">  Map&lt;String, Method&gt; uniqueMethods = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">  <span class="comment">// 循环类，类的父类，类的父类的父类，直到父类为 Object</span></span><br><span class="line">  Class&lt;?&gt; currentClass = cls;</span><br><span class="line">  <span class="keyword">while</span> (currentClass != <span class="keyword">null</span> &amp;&amp; currentClass != Object<span class="class">.<span class="keyword">class</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// &lt;1&gt; 记录当前类定义的方法</span></span><br><span class="line">    addUniqueMethods(uniqueMethods, currentClass.getDeclaredMethods());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// we also need to look for interface methods -</span></span><br><span class="line">    <span class="comment">// because the class may be abstract</span></span><br><span class="line">    <span class="comment">// &lt;2&gt; 记录接口中定义的方法</span></span><br><span class="line">    Class&lt;?&gt;[] interfaces = currentClass.getInterfaces();</span><br><span class="line">    <span class="keyword">for</span> (Class&lt;?&gt; anInterface : interfaces) &#123;</span><br><span class="line">      addUniqueMethods(uniqueMethods, anInterface.getMethods());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 获得父类</span></span><br><span class="line">    currentClass = currentClass.getSuperclass();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 转换成 Method 数组返回</span></span><br><span class="line">  Collection&lt;Method&gt; methods = uniqueMethods.values();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> methods.toArray(<span class="keyword">new</span> Method[methods.size()]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>&lt;3&gt; 处，会调用 getSignature(Method method) 方法，获得方法签名。代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addUniqueMethods</span><span class="params">(Map&lt;String, Method&gt; uniqueMethods, Method[] methods)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (Method currentMethod : methods) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!currentMethod.isBridge()) &#123;</span><br><span class="line">      <span class="comment">// &lt;3&gt; 获得方法签名</span></span><br><span class="line">      String signature = getSignature(currentMethod);</span><br><span class="line">      <span class="comment">// check to see if the method is already known</span></span><br><span class="line">      <span class="comment">// if it is known, then an extended class must have</span></span><br><span class="line">      <span class="comment">// overridden a method</span></span><br><span class="line">      <span class="comment">// 当 uniqueMethods 不存在时，进行添加</span></span><br><span class="line">      <span class="keyword">if</span> (!uniqueMethods.containsKey(signature)) &#123;</span><br><span class="line">        uniqueMethods.put(signature, currentMethod);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="addSetMethods"><a href="#addSetMethods" class="headerlink" title="addSetMethods"></a>addSetMethods</h4><p>addSetMethods(Class&lt;?&gt; cls) 方法，初始化 setMethods 和 setTypes ，通过遍历 setting 方法。代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addSetMethods</span><span class="params">(Class&lt;?&gt; cls)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 属性与其 setting 方法的映射。</span></span><br><span class="line">  Map&lt;String, List&lt;Method&gt;&gt; conflictingSetters = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">  <span class="comment">// 获得所有方法</span></span><br><span class="line">  Method[] methods = getClassMethods(cls);</span><br><span class="line">  <span class="comment">// 遍历所有方法</span></span><br><span class="line">  <span class="keyword">for</span> (Method method : methods) &#123;</span><br><span class="line">    String name = method.getName();</span><br><span class="line">    <span class="comment">// &lt;1&gt; 方法名为 set 开头</span></span><br><span class="line">    <span class="comment">// 参数数量为 1</span></span><br><span class="line">    <span class="keyword">if</span> (name.startsWith(<span class="string">"set"</span>) &amp;&amp; name.length() &gt; <span class="number">3</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (method.getParameterTypes().length == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// 获得属性</span></span><br><span class="line">        name = PropertyNamer.methodToProperty(name);</span><br><span class="line">        <span class="comment">// 添加到 conflictingSetters 中</span></span><br><span class="line">        addMethodConflict(conflictingSetters, name, method);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// &lt;2&gt; 解决 setting 冲突方法</span></span><br><span class="line">  resolveSetterConflicts(conflictingSetters);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="addFields"><a href="#addFields" class="headerlink" title="addFields"></a>addFields</h4><p>addFields(Class&lt;?&gt; clazz) 方法，初始化 getMethods + getTypes 和 setMethods + setTypes ，通过遍历 fields 属性。实际上，它是 addGetMethods(…) 和 #addSetMethods(…) 方法的补充，因为有些 field ，不存在对应的 setting 或 getting 方法，所以直接使用对应的 field ，而不是方法。代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addFields</span><span class="params">(Class&lt;?&gt; clazz)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 获得所有 field</span></span><br><span class="line">  Field[] fields = clazz.getDeclaredFields();</span><br><span class="line">  <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">    <span class="comment">// &lt;1&gt; 添加到 setMethods 和 setTypes 中</span></span><br><span class="line">    <span class="keyword">if</span> (!setMethods.containsKey(field.getName())) &#123;</span><br><span class="line">      <span class="comment">// issue #379 - removed the check for final because JDK 1.5 allows</span></span><br><span class="line">      <span class="comment">// modification of final fields through reflection (JSR-133). (JGB)</span></span><br><span class="line">      <span class="comment">// pr #16 - final static can only be set by the classloader</span></span><br><span class="line">      <span class="keyword">int</span> modifiers = field.getModifiers();</span><br><span class="line">      <span class="keyword">if</span> (!(Modifier.isFinal(modifiers) &amp;&amp; Modifier.isStatic(modifiers))) &#123;</span><br><span class="line">        addSetField(field);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 添加到 getMethods 和 getTypes 中</span></span><br><span class="line">    <span class="keyword">if</span> (!getMethods.containsKey(field.getName())) &#123;</span><br><span class="line">      addGetField(field);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 递归，处理父类</span></span><br><span class="line">  <span class="keyword">if</span> (clazz.getSuperclass() != <span class="keyword">null</span>) &#123;</span><br><span class="line">    addFields(clazz.getSuperclass());</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="ReflectorFactory"><a href="#ReflectorFactory" class="headerlink" title="ReflectorFactory"></a>ReflectorFactory</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ReflectorFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 是否缓存 Reflector 对象</span></span><br><span class="line">  <span class="function"><span class="keyword">boolean</span> <span class="title">isClassCacheEnabled</span><span class="params">()</span></span>;</span><br><span class="line">  <span class="comment">// 设置是否缓存 Reflector 对象</span></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">setClassCacheEnabled</span><span class="params">(<span class="keyword">boolean</span> classCacheEnabled)</span></span>;</span><br><span class="line">  <span class="comment">// 获取 Reflector 对象</span></span><br><span class="line">  <span class="function">Reflector <span class="title">findForClass</span><span class="params">(Class&lt;?&gt; type)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>未完待续…………</p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
      <tags>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序-微同商城-忘记密码</title>
    <url>/2020/06/24/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E5%BE%AE%E5%90%8C%E5%95%86%E5%9F%8E-%E5%BF%98%E8%AE%B0%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>一句话需求：忘记密码页面，用户输入登录名，手机号码、新密码、页面有个随机验证码，短信验证码，验证码验证通过后，发短信，短信验证通后，重置密码。</p>
<a id="more"></a>

<h3 id="准备信息"><a href="#准备信息" class="headerlink" title="准备信息"></a>准备信息</h3><h4 id="需要开通阿里云短信服务"><a href="#需要开通阿里云短信服务" class="headerlink" title="需要开通阿里云短信服务"></a>需要开通阿里云短信服务</h4><p><a href="https://yq.aliyun.com/articles/252987" target="_blank" rel="noopener">如何接入阿里云短信服务</a></p>
<h4 id="获取如下信息"><a href="#获取如下信息" class="headerlink" title="获取如下信息"></a>获取如下信息</h4><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">AccessKey ID</span><br><span class="line">AccessKey Secret</span><br><span class="line">模板编码</span><br><span class="line">签名</span><br><span class="line">KEYS</span><br></pre></td></tr></table></figure>
<h3 id="代码开发"><a href="#代码开发" class="headerlink" title="代码开发"></a>代码开发</h3><h4 id="前台页面"><a href="#前台页面" class="headerlink" title="前台页面"></a>前台页面</h4><ul>
<li>登录页<br>增加忘记密码按钮，点击忘记密码可以跳转到修改密码界面。<br><img src="/2020/06/24/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E5%BE%AE%E5%90%8C%E5%95%86%E5%9F%8E-%E5%BF%98%E8%AE%B0%E5%AF%86%E7%A0%81/01.jpg" alt="01"><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"alteration.html"</span>&gt;</span>忘记密码<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>修改密码页面<br>输入账号、验证码、手机号码、短信验证码、旧密码、新密码。填写完成后提交修改密码，修改完成后自动跳转到登陆页面。点击账号登陆返回登陆页面<br><img src="/2020/06/24/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E5%BE%AE%E5%90%8C%E5%95%86%E5%9F%8E-%E5%BF%98%E8%AE%B0%E5%AF%86%E7%A0%81/02.jpg" alt="02"><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span> <span class="attr">style</span>=<span class="string">"border-top:none;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Card</span> <span class="attr">class</span>=<span class="string">"m-t text-center"</span> <span class="attr">style</span>=<span class="string">"border: 0px solid #dddee1;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"padding: 0 20px 20px 20px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group has-feedback"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i-input</span> <span class="attr">v-model</span>=<span class="string">"username"</span>  @<span class="attr">on-enter</span>=<span class="string">"alteration"</span> <span class="attr">placeholder</span>=<span class="string">"账号"</span> <span class="attr">style</span>=<span class="string">"width: 200px;"</span> <span class="attr">autofocus</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group has-feedback"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"display: inline-block;width: 100px;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i-input</span> <span class="attr">v-model</span>=<span class="string">"captcha"</span> @<span class="attr">on-enter</span>=<span class="string">"alteration"</span></span></span><br><span class="line"><span class="tag">                              <span class="attr">placeholder</span>=<span class="string">"验证码"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"display: inline-block;width: 100px;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">style</span>=<span class="string">"height: 32px;width: 96px;border-radius: 4px;"</span> <span class="attr">alt</span>=<span class="string">"如果看不清楚，请单击图片刷新！"</span> <span class="attr">title</span>=<span class="string">"点击刷新"</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">class</span>=<span class="string">"pointer"</span> <span class="attr">:src</span>=<span class="string">"src"</span> @<span class="attr">click</span>=<span class="string">"refreshCode"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group has-feedback"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i-input</span> <span class="attr">v-model</span>=<span class="string">"mobile"</span> @<span class="attr">on-enter</span>=<span class="string">"alteration"</span> <span class="attr">placeholder</span>=<span class="string">"请输入手机号码"</span> <span class="attr">style</span>=<span class="string">"width: 200px;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group has-feedback"</span> <span class="attr">style</span>=<span class="string">"display: flex; text-align: center; justify-content: center;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width: 100px; margin-right: 10px;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i-input</span> <span class="attr">v-model</span>=<span class="string">"smscode"</span> @<span class="attr">on-enter</span>=<span class="string">"alteration"</span> <span class="attr">placeholder</span>=<span class="string">"手机短信验证码"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width: 92px;"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i-button</span> <span class="attr">type</span>=<span class="string">"plain"</span> @<span class="attr">click</span>=<span class="string">"getCaptcha"</span> <span class="attr">:disabled</span>=<span class="string">"state.smsSendBtn"</span> <span class="attr">v-text</span>=<span class="string">"!state.smsSendBtn &amp;&amp; '获取验证码' || (state.time+' s')"</span>&gt;</span>获取验证码<span class="tag">&lt;/<span class="name">i-button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group has-feedback"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i-input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">v-model</span>=<span class="string">"password"</span> @<span class="attr">on-enter</span>=<span class="string">"alteration"</span> <span class="attr">style</span>=<span class="string">"width: 200px;"</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">placeholder</span>=<span class="string">"请输入旧密码"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group has-feedback"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i-input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">v-model</span>=<span class="string">"newPassword"</span> @<span class="attr">on-enter</span>=<span class="string">"alteration"</span> <span class="attr">style</span>=<span class="string">"width: 200px;"</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">placeholder</span>=<span class="string">"请输入新密码"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group has-feedback"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i-button</span> <span class="attr">type</span>=<span class="string">"primary"</span> <span class="attr">style</span>=<span class="string">"width: 200px;"</span> @<span class="attr">click</span>=<span class="string">"alteration"</span>&gt;</span>修改密码<span class="tag">&lt;/<span class="name">i-button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"login.html"</span>&gt;</span>账号登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Card</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="后台接口"><a href="#后台接口" class="headerlink" title="后台接口"></a>后台接口</h4><ul>
<li><p>发送短信验证码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SysLog</span>(<span class="string">"发送短信验证码"</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/sys/sms"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">sms</span><span class="params">(@RequestBody JSONObject jsonObject)</span> </span>&#123;</span><br><span class="line">    String username = jsonObject.get(<span class="string">"username"</span>).toString();</span><br><span class="line">    String mobile = jsonObject.get(<span class="string">"mobile"</span>).toString();</span><br><span class="line">    String smsmode = jsonObject.get(<span class="string">"smsmode"</span>).toString();</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isBlank(mobile)) &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error(<span class="string">"请输入手机号码！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    SysUserEntity sysUserEntity = sysUserService.queryByUserName(username);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> == sysUserEntity) &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error(<span class="string">"未找到此用户！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!sysUserEntity.getMobile().equals(mobile)) &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error(<span class="string">"输入手机号码与绑定的手机号码不一致!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Object object = J2CacheUtils.get(Constant.CAPTCHA_CACHE, mobile);</span><br><span class="line">    <span class="keyword">if</span> (object != <span class="keyword">null</span>) &#123;</span><br><span class="line">        Map map = <span class="keyword">new</span> HashMap();</span><br><span class="line">        map.put(<span class="string">"msg"</span>, <span class="string">"验证码10分钟内，仍然有效！"</span>);</span><br><span class="line">        map.put(<span class="string">"code"</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> R.ok(map);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 短信验证码24小时内只允许修改3次,防止盗刷</span></span><br><span class="line">    Object smsCaptchaTimes = J2CacheUtils.get(Constant.CAPTCHA_CACHE_TIMES, mobile);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> == smsCaptchaTimes) &#123;</span><br><span class="line">        J2CacheUtils.put(Constant.CAPTCHA_CACHE_TIMES, mobile, Constant.SMS_CAPTCHA_TIMES);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">int</span> times = Integer.parseInt(smsCaptchaTimes.toString());</span><br><span class="line">        <span class="keyword">if</span> (Constant.SMS_CAPTCHA_MAX_TIMES &lt;= times) &#123;</span><br><span class="line">            <span class="keyword">return</span> R.error(<span class="string">"修改密码次数已超上限，请24小时后再修改！"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            times++;</span><br><span class="line">            J2CacheUtils.put(Constant.CAPTCHA_CACHE_TIMES, mobile, String.valueOf(times));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 随机数</span></span><br><span class="line">    String captcha = CharUtil.getRandomNum(<span class="number">6</span>);</span><br><span class="line">    JSONObject obj = <span class="keyword">new</span> JSONObject();</span><br><span class="line">    obj.put(<span class="string">"code"</span>, captcha);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">boolean</span> b = <span class="keyword">false</span>;</span><br><span class="line">        <span class="comment">// 模板</span></span><br><span class="line">        <span class="keyword">if</span> (Constant.SMS_TPL_TYPE_1.equals(smsmode)) &#123;</span><br><span class="line">            b = DySmsHelper.sendSms(mobile, obj, DySmsEnum.FORGET_PASSWORD_TEMPLATE_CODE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">false</span> == b) &#123;</span><br><span class="line">            <span class="keyword">return</span> R.error(<span class="string">"短信验证码发送失败,请稍后重试！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// J2Cache在一级缓存中配置超时时间</span></span><br><span class="line">        J2CacheUtils.put(Constant.CAPTCHA_CACHE, mobile, captcha);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ClientException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> R.error(<span class="string">"短信接口未配置，请联系管理员！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">sendSms</span><span class="params">(String phone, JSONObject templateParamJson, DySmsEnum dySmsEnum)</span> <span class="keyword">throws</span> ClientException </span>&#123;</span><br><span class="line">    <span class="comment">//可自助调整超时时间</span></span><br><span class="line">    System.setProperty(<span class="string">"sun.net.client.defaultConnectTimeout"</span>, <span class="string">"10000"</span>);</span><br><span class="line">    System.setProperty(<span class="string">"sun.net.client.defaultReadTimeout"</span>, <span class="string">"10000"</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//初始化acsClient,暂不支持region化</span></span><br><span class="line">    IClientProfile profile = DefaultProfile.getProfile(<span class="string">"cn-hangzhou"</span>, accessKeyId, accessKeySecret);</span><br><span class="line">    DefaultProfile.addEndpoint(<span class="string">"cn-hangzhou"</span>, <span class="string">"cn-hangzhou"</span>, product, domain);</span><br><span class="line">    IAcsClient acsClient = <span class="keyword">new</span> DefaultAcsClient(profile);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//验证json参数</span></span><br><span class="line">    validateParam(templateParamJson,dySmsEnum);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//组装请求对象-具体描述见控制台-文档部分内容</span></span><br><span class="line">    SendSmsRequest request = <span class="keyword">new</span> SendSmsRequest();</span><br><span class="line">    <span class="comment">//必填:待发送手机号</span></span><br><span class="line">    request.setPhoneNumbers(phone);</span><br><span class="line">    <span class="comment">//必填:短信签名-可在短信控制台中找到</span></span><br><span class="line">    request.setSignName(dySmsEnum.getSignName());</span><br><span class="line">    <span class="comment">//必填:短信模板-可在短信控制台中找到</span></span><br><span class="line">    request.setTemplateCode(dySmsEnum.getTemplateCode());</span><br><span class="line">    <span class="comment">//可选:模板中的变量替换JSON串,如模板内容为"亲爱的$&#123;name&#125;,您的验证码为$&#123;code&#125;"时,此处的值为</span></span><br><span class="line">    request.setTemplateParam(templateParamJson.toJSONString());</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//选填-上行短信扩展码(无特殊需求用户请忽略此字段)</span></span><br><span class="line">    <span class="comment">//request.setSmsUpExtendCode("90997");</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//可选:outId为提供给业务方扩展字段,最终在短信回执消息中将此值带回给调用者</span></span><br><span class="line">    <span class="comment">//request.setOutId("yourOutId");</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">boolean</span> result = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//hint 此处可能会抛出异常，注意catch</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        SendSmsResponse sendSmsResponse = acsClient.getAcsResponse(request);</span><br><span class="line">        logger.info(<span class="string">"短信接口返回的数据----------------"</span>);</span><br><span class="line">        logger.info(<span class="string">"&#123;Code:"</span> + sendSmsResponse.getCode()+<span class="string">",Message:"</span> + sendSmsResponse.getMessage()+<span class="string">",RequestId:"</span>+ sendSmsResponse.getRequestId()+<span class="string">",BizId:"</span>+sendSmsResponse.getBizId()+<span class="string">"&#125;"</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"OK"</span>.equals(sendSmsResponse.getCode())) &#123;</span><br><span class="line">            result = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ClientException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        logger.error(<span class="string">"验证码发送失败："</span> + e.getErrorType() + <span class="string">","</span> + e.getErrCode() + <span class="string">","</span> + e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改密码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 用户更改密码</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@SysLog</span>(<span class="string">"修改密码"</span>)</span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/passwordChange"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span>  R <span class="title">passwordChange</span><span class="params">(@RequestParam String username, String password, String newPassword, String smscode, String mobile, String captcha)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isBlank(username) || StringUtils.isBlank(password) || StringUtils.isBlank(smscode) ||</span><br><span class="line">            StringUtils.isBlank(mobile) || StringUtils.isBlank(newPassword) || StringUtils.isBlank(captcha)) &#123;</span><br><span class="line">        R.error(<span class="string">"重置密码失败！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    SysUserEntity sysUserEntity = sysUserService.queryByUserName(username);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> == sysUserEntity) &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error(<span class="string">"未找到用户！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    String kaptcha = ShiroUtils.getKaptcha(Constants.KAPTCHA_SESSION_KEY);</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">null</span> == kaptcha)&#123;</span><br><span class="line">        <span class="keyword">return</span> R.error(<span class="string">"验证码已失效"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!captcha.equalsIgnoreCase(kaptcha)) &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error(<span class="string">"验证码不正确"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!sysUserEntity.getMobile().equals(mobile)) &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error(<span class="string">"输入手机号码与绑定的手机号码不一致!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Object object = J2CacheUtils.get(Constant.CAPTCHA_CACHE, mobile);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> == object) &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error(<span class="string">"短信验证码失效！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!smscode.equals(object)) &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error(<span class="string">"短信验证码不匹配！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//sha256加密</span></span><br><span class="line">    password = <span class="keyword">new</span> Sha256Hash(password).toHex();</span><br><span class="line">    <span class="comment">//sha256加密</span></span><br><span class="line">    newPassword = <span class="keyword">new</span> Sha256Hash(newPassword).toHex();</span><br><span class="line">    <span class="comment">//更新密码</span></span><br><span class="line">    <span class="keyword">int</span> count = sysUserService.updatePassword(sysUserEntity.getUserId(), password, newPassword);</span><br><span class="line">    <span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> R.error(<span class="string">"旧密码不正确！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> R.ok(<span class="string">"密码修改成功！"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="权限配置"><a href="#权限配置" class="headerlink" title="权限配置"></a>权限配置</h4><p>platform-shiro.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"filterChainDefinitions"</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span></span><br><span class="line">        /sys/sms=anon</span><br><span class="line">        /alteration.html=anon</span><br><span class="line">        /sys/user/passwordChange=anon</span><br><span class="line">        /**=authc</span><br><span class="line">    <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure>


<h4 id="缓存超时时间配置"><a href="#缓存超时时间配置" class="headerlink" title="缓存超时时间配置"></a>缓存超时时间配置</h4><p>caffeine.properties</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># 验证码10分钟内有效</span><br><span class="line">captchaCache=1000, 10m</span><br><span class="line"># 短信验证码24小时内只允许修改3次</span><br><span class="line">captchaCacheTimes=1000, 24h</span><br></pre></td></tr></table></figure>
<p>pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 阿里云短信 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-java-sdk-dysmsapi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aliyun-java-sdk-dysmsapi.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- aliyun oss --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.aliyun.oss<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aliyun-sdk-oss<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;aliyun.oss.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="功能实现"><a href="#功能实现" class="headerlink" title="功能实现"></a>功能实现</h3><p>1、获取验证码：需要填写账号、手机号码校验，输入手机号码与绑定的手机号码必须一致。<br>2、验证码失效时间：10分钟<br>3、同一手机号码24小时只能修改3次密码。防止盗刷短信。<br>4、点击获取验证码后1分钟后才能再次点击，防止频繁发送验证码。<br>5、手机号码必须为国内通用手机号码<br>6、图形验证码、短信验证码必须正确。<br>7、获取手机短信验证码失败，图形验证码自动刷新</p>
]]></content>
      <categories>
        <category>微信小程序</category>
      </categories>
      <tags>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序-如何快速搞定微信小程序开发</title>
    <url>/2020/06/18/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E6%90%9E%E5%AE%9A%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>一位朋友想做一个小程序，希望用来引流。于是就接下了这个活，用了一周的时间才有了下文的内容。</p>
<a id="more"></a>

<h3 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段"></a>准备阶段</h3><h4 id="注册小程序"><a href="#注册小程序" class="headerlink" title="注册小程序"></a>注册小程序</h4><ul>
<li>去<a href="https://mp.weixin.qq.com/" target="_blank" rel="noopener">微信公众平台</a>，选择小程序注册。注册小程序时，可以选择个人身份或者企业身份。如果您的小程序可能会需要微信支付的功能，那么请务必选择企业身份，因为个人微信小程序是无法接入微信支付功能的。</li>
<li>小程序信息完善：注册完登录后去完善小程序基本信息。</li>
<li>点击 设置 -&gt; 开发设置，在该页面可以看到AppID和AppSecret。查看后要记得把AppSecret在其他位置记录下来，因为AppSecret只能查看一次，后续无法再次查看了。小程序的AppID和AppSecret非常重要，开发阶段需要用到。</li>
<li>小程序申请微信认证，个人类型帐号暂不支持微信认证。<br>认证入口：登录小程序—设置—基本设置—微信认证—详情。</li>
</ul>
<h4 id="注册微信支付"><a href="#注册微信支付" class="headerlink" title="注册微信支付"></a>注册微信支付</h4><p>已认证的小程序可申请微信支付。<br>会员下单需要支持微信支付，需要提供营业执照等信息注册，个人身份无法开通微信支付。去<a href="https://pay.weixin.qq.com/index.php/core/home/login?return_url=%2F" target="_blank" rel="noopener">微信支付</a>官方平台，接入微信支付，完成注册即可。</p>
<h4 id="注册域名"><a href="#注册域名" class="headerlink" title="注册域名"></a>注册域名</h4><p>小程序访问后台只支持域名访问，小程序发布后需要提供域名。可以去阿里云注册一个<a href="https://wanwang.aliyun.com/?spm=5176.12825654.eofdhaal5.86.7ef42c4aJ7B8tC" target="_blank" rel="noopener">域名</a>，一般比较冷门的域名就几十￥。</p>
<h3 id="开发阶段"><a href="#开发阶段" class="headerlink" title="开发阶段"></a>开发阶段</h3><h4 id="开发使用到的软件和工具"><a href="#开发使用到的软件和工具" class="headerlink" title="开发使用到的软件和工具"></a>开发使用到的软件和工具</h4><p>微信开发者工具  IDEA  JDK1.8  Maven3.3  Tomcat8 MySQL5.7  Redis4.0.1  Git Xshell</p>
<h4 id="二次开发"><a href="#二次开发" class="headerlink" title="二次开发"></a>二次开发</h4><p>开源平台：微同商城</p>
<h5 id="前台"><a href="#前台" class="headerlink" title="前台"></a>前台</h5><p>前台页面用的Vue + iView开发，根据要求改造好页面即可。<br><a href="https://developers.weixin.qq.com/miniprogram/dev/api/" target="_blank" rel="noopener">微信官方文档API</a><br><a href="https://cn.vuejs.org/v2/api/" target="_blank" rel="noopener">Vue官方API</a><br><a href="https://www.iviewui.com/docs/guide/install" target="_blank" rel="noopener">iView官方API</a></p>
<h5 id="后台"><a href="#后台" class="headerlink" title="后台"></a>后台</h5><p>由于后台功能模块太多了，不一一详细描述。只贴几个关键的功能点。</p>
<h5 id="功能权限设计"><a href="#功能权限设计" class="headerlink" title="功能权限设计"></a>功能权限设计</h5><p>sys_user[用户]表，保存用户相关数据，通过sys_user_role[用户与角色关联]表，与 sys_role[角色]表关联；sys_menu[菜单]表通过 sys_role_menu[菜单与角色关联]表，与 sys_role[角色]表关联<br>sys_menu 表，保存菜单相关数据，并在 perms 字段里，保存了 shiro 的权限标识，也就是说拥有此菜单，就拥有 perms字段里的所有权限，比如，某用户拥有的菜单权限标识 sys:menu:list，就可以访问下面的方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 所有菜单列表</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/list"</span>)</span><br><span class="line"><span class="meta">@RequiresPermissions</span>(<span class="string">"sys:menu:list"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">list</span><span class="params">(@RequestParam Map&lt;String, Object&gt; params)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//查询列表数据</span></span><br><span class="line">    Query query = <span class="keyword">new</span> Query(params);</span><br><span class="line">    List&lt;SysMenuEntity&gt; menuList = sysMenuService.queryList(query);</span><br><span class="line">    <span class="keyword">int</span> total = sysMenuService.queryTotal(query);</span><br><span class="line"></span><br><span class="line">    PageUtils pageUtil = <span class="keyword">new</span> PageUtils(menuList, total, query.getLimit(), query.getPage());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> R.ok().put(<span class="string">"page"</span>, pageUtil);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="日志拦截器"><a href="#日志拦截器" class="headerlink" title="日志拦截器"></a>日志拦截器</h5><p>为了方便开发调试需要日志拦截器。（登录拦截和权限拦截已在 shiro 实现，日志拦截器只做控制台输出日志，不做任何拦截处理。）输出打印除/statics/<em>*、</em>.html、*.js 以外的所有请求。 </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 为了加载拦截器 需要 日志拦截器 （登录拦截和权限拦截已在shiro实现，看实现 情况处理） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;bean class="com.platform.interceptor.LogInterceptor"/&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">"/**"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:exclude-mapping</span> <span class="attr">path</span>=<span class="string">"/statics/**"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:exclude-mapping</span> <span class="attr">path</span>=<span class="string">"/**/**.html"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:exclude-mapping</span> <span class="attr">path</span>=<span class="string">"/**/**.js"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.platform.interceptor.LogInterceptor"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>实现类<br>在preHandle 记录本次请求的时间，在afterCompletion 中取出，然后对比当前时间，即可计算出本次请求的耗时。<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="built_in">public</span> <span class="keyword">class</span> LogInterceptor extends HandlerInterceptorAdapter &#123;</span><br><span class="line"></span><br><span class="line">    private static final <span class="keyword">Log</span> <span class="keyword">log</span> = LogFactory.getLog(LogInterceptor.<span class="keyword">class</span>);</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="built_in">public</span> <span class="type">boolean</span> preHandle(HttpServletRequest request, HttpServletResponse response, <span class="keyword">Object</span> <span class="keyword">handler</span>) throws <span class="keyword">Exception</span> &#123;</span><br><span class="line">        request.setAttribute("REQUEST_START_TIME", <span class="built_in">new</span> <span class="type">Date</span>());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="built_in">public</span> <span class="type">void</span> postHandle(HttpServletRequest request, HttpServletResponse response, <span class="keyword">Object</span> <span class="keyword">handler</span>,</span><br><span class="line">                           ModelAndView modelAndView) throws <span class="keyword">Exception</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="built_in">public</span> <span class="type">void</span> afterCompletion(HttpServletRequest request,</span><br><span class="line">                                HttpServletResponse response, <span class="keyword">Object</span> <span class="keyword">handler</span>,</span><br><span class="line">                                <span class="keyword">Exception</span> ex)</span><br><span class="line">            throws <span class="keyword">Exception</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Date</span> start = (<span class="type">Date</span>) request.getAttribute("REQUEST_START_TIME");</span><br><span class="line">        <span class="type">Date</span> end = <span class="built_in">new</span> <span class="type">Date</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">log</span>.<span class="keyword">info</span>("本次请求耗时：" + (<span class="keyword">end</span>.getTime() - <span class="keyword">start</span>.getTime()) + "毫秒；" + getRequestInfo(request).toString());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="built_in">public</span> <span class="type">void</span> afterConcurrentHandlingStarted(HttpServletRequest request,</span><br><span class="line">                                               HttpServletResponse response,</span><br><span class="line">                                               <span class="keyword">Object</span> <span class="keyword">handler</span>)</span><br><span class="line">            throws <span class="keyword">Exception</span> &#123;</span><br><span class="line">        super.afterConcurrentHandlingStarted(request, response, <span class="keyword">handler</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 主要功能:获取请求详细信息</span></span><br><span class="line"><span class="comment">     * 注意事项:无</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param request 请求</span></span><br><span class="line"><span class="comment">     * @return 请求信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    private StringBuilder getRequestInfo(HttpServletRequest request) &#123;</span><br><span class="line">        StringBuilder reqInfo = <span class="built_in">new</span> StringBuilder();</span><br><span class="line">        UrlPathHelper urlPathHelper = <span class="built_in">new</span> UrlPathHelper();</span><br><span class="line">        String urlPath = urlPathHelper.getLookupPathForRequest(request);</span><br><span class="line">        reqInfo.append(" 请求路径=" + urlPath);</span><br><span class="line">        reqInfo.append(" 来源IP=" + RequestUtil.getIpAddrByRequest(request));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        String userName = "";</span><br><span class="line">        try &#123;</span><br><span class="line">            SysUserEntity sysUser = (SysUserEntity) SecurityUtils.getSubject().getSession().getAttribute(<span class="keyword">Constant</span>.<span class="built_in">CURRENT_USER</span>);</span><br><span class="line">            <span class="keyword">if</span> (sysUser != <span class="keyword">null</span>) &#123;</span><br><span class="line">                userName = (sysUser.getUsername());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (<span class="keyword">Exception</span> e) &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        reqInfo.append(" 操作人=" + (userName));</span><br><span class="line">        reqInfo.append(" 请求参数=" + RequestUtil.getParameters(request).toString());</span><br><span class="line">        <span class="keyword">return</span> reqInfo;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h5 id="系统日志"><a href="#系统日志" class="headerlink" title="系统日志"></a>系统日志</h5><p>系统日志是通过 Spring AOP 实现的，我们自定义了注解@SysLog，此注解只能用于方法上。 </p>
<ul>
<li><p>定义注解 </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Target</span>(ElementType.METHOD)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> SysLog &#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">value</span><span class="params">()</span> <span class="keyword">default</span> "操作日志"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>具体实现</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SysLogAspect</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SysLogService sysLogService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 切点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Pointcut</span>(<span class="string">"@annotation(com.platform.annotation.SysLog)"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">logPointCut</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 前置通知</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> joinPoint 连接点</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Before</span>(<span class="string">"logPointCut()"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveSysLog</span><span class="params">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class="line">        MethodSignature signature = (MethodSignature) joinPoint.getSignature();</span><br><span class="line">        Method method = signature.getMethod();</span><br><span class="line"></span><br><span class="line">        SysLogEntity sysLog = <span class="keyword">new</span> SysLogEntity();</span><br><span class="line">        SysLog syslog = method.getAnnotation(SysLog<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="keyword">if</span> (syslog != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//注解上的描述</span></span><br><span class="line">            sysLog.setOperation(syslog.value());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//请求的方法名</span></span><br><span class="line">        String className = joinPoint.getTarget().getClass().getName();</span><br><span class="line">        String methodName = signature.getName();</span><br><span class="line">        sysLog.setMethod(className + <span class="string">"."</span> + methodName + <span class="string">"()"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//请求的参数</span></span><br><span class="line">        Object[] args = joinPoint.getArgs();</span><br><span class="line">        String params = JSON.toJSONString(args[<span class="number">0</span>]);</span><br><span class="line">        sysLog.setParams(params);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取request</span></span><br><span class="line">        HttpServletRequest request = HttpContextUtils.getHttpServletRequest();</span><br><span class="line">        <span class="comment">//设置IP地址</span></span><br><span class="line">        sysLog.setIp(IPUtils.getIpAddr(request));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//用户名</span></span><br><span class="line">        SysUserEntity sysUserEntity = ShiroUtils.getUserEntity();</span><br><span class="line">        String username = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"login"</span>.equals(methodName)) &#123;</span><br><span class="line">            username = params;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> != sysUserEntity) &#123;</span><br><span class="line">            username = ShiroUtils.getUserEntity().getUsername();</span><br><span class="line">        &#125;</span><br><span class="line">        sysLog.setUsername(username);</span><br><span class="line"></span><br><span class="line">        sysLog.setCreateDate(<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="comment">//保存系统日志</span></span><br><span class="line">        sysLogService.save(sysLog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用方式</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 保存</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@SysLog</span>(<span class="string">"保存菜单"</span>)</span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/save"</span>)</span><br><span class="line"><span class="meta">@RequiresPermissions</span>(<span class="string">"sys:menu:save"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> R <span class="title">save</span><span class="params">(@RequestBody SysMenuEntity menu)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//数据校验</span></span><br><span class="line">    verifyForm(menu);</span><br><span class="line"></span><br><span class="line">    sysMenuService.save(menu);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> R.ok();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="统一异常处理"><a href="#统一异常处理" class="headerlink" title="统一异常处理"></a>统一异常处理</h5></li>
<li><p>后台异常处理<br>本项目通过 RRException 异常类，抛出自定义异常，RRException 继承 RuntimeException，不能继承 Exception，如果继承 Exception，则 Spring 事务不会回滚。 </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RRException</span> <span class="keyword">extends</span> <span class="title">RuntimeException</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> code = <span class="number">500</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RRException</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(msg);</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RRException</span><span class="params">(String msg, Throwable e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(msg, e);</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RRException</span><span class="params">(String msg, <span class="keyword">int</span> code)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(msg);</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RRException</span><span class="params">(String msg, <span class="keyword">int</span> code, Throwable e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(msg, e);</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMsg</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCode</span><span class="params">(<span class="keyword">int</span> code)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我们定义了 RRExceptionHandler 类，并加上注解@RestControllerAdvice，就可以处理所有抛出的异常，并返回 JSON 数据。 </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestControllerAdvice</span>(value = &#123;<span class="string">"com.platform"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RRExceptionHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Logger logger = LoggerFactory.getLogger(getClass());</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义异常</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(RRException<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">R</span> <span class="title">handleRRException</span>(<span class="title">RRException</span> <span class="title">e</span>) </span>&#123;</span><br><span class="line">        R r = <span class="keyword">new</span> R();</span><br><span class="line">        r.put(<span class="string">"code"</span>, e.getCode());</span><br><span class="line">        r.put(<span class="string">"msg"</span>, e.getMessage());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(DuplicateKeyException<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">R</span> <span class="title">handleDuplicateKeyException</span>(<span class="title">DuplicateKeyException</span> <span class="title">e</span>) </span>&#123;</span><br><span class="line">        logger.error(e.getMessage(), e);</span><br><span class="line">        <span class="keyword">return</span> R.error(<span class="string">"数据库中已存在该记录"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(AuthorizationException<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">R</span> <span class="title">handleAuthorizationException</span>(<span class="title">AuthorizationException</span> <span class="title">e</span>) </span>&#123;</span><br><span class="line">        logger.error(e.getMessage(), e);</span><br><span class="line">        <span class="keyword">return</span> R.error(<span class="string">"没有权限，请联系管理员授权"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(Exception<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">R</span> <span class="title">handleException</span>(<span class="title">Exception</span> <span class="title">e</span>) </span>&#123;</span><br><span class="line">        logger.error(e.getMessage(), e);</span><br><span class="line">        <span class="keyword">return</span> R.error();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(ApiRRException<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">Object</span> <span class="title">handleApiRRException</span>(<span class="title">ApiRRException</span> <span class="title">e</span>) </span>&#123;</span><br><span class="line">        HashMap result = <span class="keyword">new</span> HashMap();</span><br><span class="line">        result.put(<span class="string">"errno"</span>, e.getErrno());</span><br><span class="line">        result.put(<span class="string">"errmsg"</span>, e.getErrmsg());</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>前端统一异常处理</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> Ajax.request(&#123;</span></span><br><span class="line"><span class="comment">        url: '', //访问路径</span></span><br><span class="line"><span class="comment">        dataType: 'json', //访问类型 'json','html'等</span></span><br><span class="line"><span class="comment">        params: getJson(form),</span></span><br><span class="line"><span class="comment">        resultMsg: true, false, //是否需要提示信息</span></span><br><span class="line"><span class="comment">        type: 'GET',//,'get','post'</span></span><br><span class="line"><span class="comment">        beforeSubmit: function (data) &#123;&#125;,//提交前处理</span></span><br><span class="line"><span class="comment">        successCallback: function (data) &#123;&#125; //提交后处理</span></span><br><span class="line"><span class="comment">    &#125;);</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Ajax = function () &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//var opt = &#123; type:'GET',dataType:'json',resultMsg:true &#125;;</span></span><br><span class="line">    <span class="function">function <span class="title">request</span><span class="params">(opt)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//添加遮罩层</span></span><br><span class="line">        dialogLoading(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (typeof opt.cache == <span class="string">'undefined'</span>) &#123;</span><br><span class="line">            opt.cache = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (typeof opt == <span class="string">'undefined'</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//opt = $.extend(opt, p);</span></span><br><span class="line">        <span class="keyword">if</span> (typeof(opt.type) == <span class="string">'undefined'</span>) &#123;</span><br><span class="line">            opt.type = <span class="string">'GET'</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (typeof(opt.async) == <span class="string">'undefined'</span>) &#123;</span><br><span class="line">            opt.async = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (typeof(opt.dataType) == <span class="string">'undefined'</span>) &#123;</span><br><span class="line">            opt.dataType = <span class="string">'json'</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (typeof(opt.contentType) == <span class="string">'undefined'</span>) &#123;</span><br><span class="line">            opt.contentType = <span class="string">'application/x-www-form-urlencoded;chartset=UTF-8'</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (typeof(opt.params) == <span class="string">'undefined'</span> || opt.params == <span class="keyword">null</span>) &#123;</span><br><span class="line">            opt.params = &#123;&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        opt.params.date = <span class="keyword">new</span> Date();</span><br><span class="line">        <span class="keyword">if</span> (typeof(opt.beforeSubmit) != <span class="string">'undefined'</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> flag = opt.beforeSubmit(opt);</span><br><span class="line">            <span class="keyword">if</span> (!flag) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (typeof(opt.resultMsg) == <span class="string">'undefined'</span>) &#123;</span><br><span class="line">            opt.resultMsg = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            async: opt.async,</span><br><span class="line">            url: opt.url,</span><br><span class="line">            dataType: opt.dataType,</span><br><span class="line">            contentType: opt.contentType,</span><br><span class="line">            data: opt.params,</span><br><span class="line">            crossDomain: opt.crossDomain || <span class="keyword">false</span>,</span><br><span class="line">            type: opt.type,</span><br><span class="line">            cache: opt.cache,</span><br><span class="line">            success: function (data) &#123;</span><br><span class="line">                <span class="comment">//关闭遮罩</span></span><br><span class="line">                dialogLoading(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (typeof data == <span class="string">'string'</span> &amp;&amp; data.indexOf(<span class="string">"exception"</span>) &gt; <span class="number">0</span> || typeof data.code != <span class="string">'undefined'</span> &amp;&amp; data.code != <span class="string">'0'</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> result = &#123;code: <span class="keyword">null</span>&#125;;</span><br><span class="line">                    <span class="keyword">if</span> (typeof data == <span class="string">'string'</span>) &#123;</span><br><span class="line">                        result = eval(<span class="string">'('</span> + data + <span class="string">')'</span>)</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (typeof data == <span class="string">'object'</span>) &#123;</span><br><span class="line">                        result = data;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (opt.resultMsg &amp;&amp; result.msg) &#123;</span><br><span class="line">                        layer.alert(result.msg, &#123;icon: <span class="number">5</span>&#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (opt.resultMsg &amp;&amp; data.msg) &#123;</span><br><span class="line">                    layer.alert(data.msg, &#123;icon: <span class="number">6</span>&#125;, function () &#123;</span><br><span class="line">                        <span class="keyword">if</span> (typeof(opt.successCallback) != <span class="string">'undefined'</span>) &#123;</span><br><span class="line">                            opt.successCallback(data);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (typeof(opt.successCallback) != <span class="string">'undefined'</span>) &#123;</span><br><span class="line">                    opt.successCallback(data);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            error: function () &#123;</span><br><span class="line">                <span class="comment">//关闭遮罩</span></span><br><span class="line">                dialogLoading(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">                layer.alert(<span class="string">"此页面发生未知异常,请联系管理员"</span>, &#123;icon: <span class="number">5</span>&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * Ajax调用request</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        request: request</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;();</span><br></pre></td></tr></table></figure>
<p>后台抛出未知异常，进入 error，提示此页面发生未知异常，请联系管理员。当后台抛出自定义异常，由 RRExceptionHandler类捕获，返回异常信息 Json 数据。 </p>
</li>
</ul>
<h5 id="云存储模块"><a href="#云存储模块" class="headerlink" title="云存储模块"></a>云存储模块</h5><p>图片、文件上传，使用的是七牛、阿里云、腾讯云的存储服务，不能上传到本地服务器。上传到本地服务器，不利于维护，访问速度慢、占用服务器带宽等缺点，所以推荐使用云存储服务。<br>由于没有购买云存储服务器，所以我采用本地服务器。用nginx做代理。</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">  <span class="attribute">server_name</span>  <span class="number">47</span>.<span class="number">113</span>.<span class="number">108</span>.xxx;</span><br><span class="line"></span><br><span class="line">  <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">  <span class="attribute">location</span> / &#123;</span><br><span class="line">      <span class="attribute">alias</span>  /data/images/;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="发布阶段"><a href="#发布阶段" class="headerlink" title="发布阶段"></a>发布阶段</h3><h4 id="代码审核与发布"><a href="#代码审核与发布" class="headerlink" title="代码审核与发布"></a>代码审核与发布</h4><p>微信开发工具上传<br><img src="/2020/06/18/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E6%90%9E%E5%AE%9A%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/01.jpg" alt="01"></p>
<h4 id="提交审核"><a href="#提交审核" class="headerlink" title="提交审核"></a>提交审核</h4><p><img src="/2020/06/18/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E6%90%9E%E5%AE%9A%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/02.jpg" alt="02"></p>
<h4 id="代码发布"><a href="#代码发布" class="headerlink" title="代码发布"></a>代码发布</h4><p>代码审核通过，需要开发者手动点击发布，小程序才会发布到线上提供服务。<br><img src="/2020/06/18/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E6%90%9E%E5%AE%9A%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/03.jpg" alt="03"></p>
<h3 id="配置文件修改"><a href="#配置文件修改" class="headerlink" title="配置文件修改"></a>配置文件修改</h3><p>部署前需要根据实际参数修改配置文件</p>
<ul>
<li><p>prod/platform.properties<br>#小程序ID<br>wx.appId=<br>#小程序密钥<br>wx.secret=<br>#商户号<br>wx.mchId=<br>#支付签名<br>wx.paySignKey=</p>
</li>
<li><p>j2cache.properties<br>redis.hosts=<br>redis.password=</p>
</li>
</ul>
<h3 id="生产环境部署"><a href="#生产环境部署" class="headerlink" title="生产环境部署"></a>生产环境部署</h3><ul>
<li><p>maven 打包</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">mvn <span class="keyword">package</span> <span class="title">-P prod</span></span><br></pre></td></tr></table></figure></li>
<li><p>拷贝 platform-framework.war 到云服务器 Tomcat 的 webapps 目录下。 </p>
</li>
<li><p>启动 Tomcat</p>
</li>
</ul>
<h3 id="服务器环境搭建"><a href="#服务器环境搭建" class="headerlink" title="服务器环境搭建"></a>服务器环境搭建</h3><ul>
<li><a href="https://blog.csdn.net/u010590120/article/details/94736800" target="_blank" rel="noopener">Centos7-JDK安装</a></li>
<li><a href="http://localhost:4000/2020/06/16/Centos7-Redis%E5%AE%89%E8%A3%85/" target="_blank" rel="noopener">Centos7-Redis安装</a></li>
<li><a href="http://localhost:4000/2020/06/18/Centos7-Nginx%E5%AE%89%E8%A3%85/" target="_blank" rel="noopener">Centos7-Nginx安装</a></li>
<li><a href="http://localhost:4000/2020/06/16/Centos7-Mysql%E5%AE%89%E8%A3%85/" target="_blank" rel="noopener">Centos7-MySql安装</a></li>
</ul>
<p>服务器配置：1核心2G 40G<br><img src="/2020/06/18/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E6%90%9E%E5%AE%9A%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/04.jpg" alt="04"></p>
]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis-知识汇总</title>
    <url>/2020/06/05/MyBatis-%E7%9F%A5%E8%AF%86%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>本文主要是 MyBatis 常见的知识点总结</p>
<a id="more"></a>

<h3 id="MyBatis-编程步骤"><a href="#MyBatis-编程步骤" class="headerlink" title="MyBatis 编程步骤"></a>MyBatis 编程步骤</h3><ol>
<li>创建 SqlSessionFactory 对象</li>
<li>通过 SqlSessionFactory 获取 SqlSession 对象</li>
<li>通过 SqlSession 获得 Mapper 代理对象</li>
<li>执行成功，则使用 SqlSession 提交事务</li>
<li>执行失败，则使用 SqlSession 回滚事务</li>
<li>最终，关闭会话</li>
</ol>
<h3 id="和-的区别是什么？"><a href="#和-的区别是什么？" class="headerlink" title="#{}和 ${} 的区别是什么？"></a><font color="green">#{}</font>和 <font color="green">${}</font> 的区别是什么？</h3><ul>
<li>${} 是Properties 文件中的变量占位符，它可以用于XML标签属性值和SQL内部，属于字符串替换。例如将 ${driver} 会被静态替换为 <font color="green">com.mysql.jdbc.driver</font><figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"UNPOOLED"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;driver&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;url&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;username&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>/&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li>
<li>${} 也可以对传递进来的参数原样拼接在 SQL 中。代码如下：<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">select</span> id="getSubject3" parameterType="Integer" resultType="Subject"&gt;</span><br><span class="line">    <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> subject</span><br><span class="line">    <span class="keyword">WHERE</span> id = $&#123;id&#125;</span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br></pre></td></tr></table></figure>
实际场景下，不推荐这么做。因为，可能有 SQL 注入的风险。</li>
<li>#{} 是 SQL 的参数占位符，Mybatis 会将 SQL 中的 #{} 替换为 ? 号，在 SQL 执行前会使用 PreparedStatement 的参数设置方法，按序给 SQL 的 ? 号占位符设置参数值，比如 ps.setInt(0, parameterValue) 。 所以，#{} 是预编译处理，可以有效防止 SQL 注入，提高系统安全性。</li>
<li>另外，#{} 和 ${} 的取值方式非常方便。例如：#{item.name} 的取值方式，为使用反射从参数对象中，获取 item 对象的 name 属性值，相当于 param.getItem().getName() 。</li>
</ul>
<h3 id="当实体类中的属性名和表中的字段名不一样-，怎么办？"><a href="#当实体类中的属性名和表中的字段名不一样-，怎么办？" class="headerlink" title="当实体类中的属性名和表中的字段名不一样 ，怎么办？"></a>当实体类中的属性名和表中的字段名不一样 ，怎么办？</h3><ul>
<li><p>第一种， 通过在查询的 SQL 语句中定义字段名的别名，让字段名的别名和实体类的属性名一致。代码如下：</p>
<figure class="highlight vbnet"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">select</span> id=<span class="string">"selectOrder"</span> parameterType=<span class="string">"Integer"</span> resultType=<span class="string">"Order"</span>&gt; </span><br><span class="line">    <span class="keyword">SELECT</span> order_id <span class="keyword">AS</span> id, order_no <span class="keyword">AS</span> orderno, order_price <span class="keyword">AS</span> price </span><br><span class="line">    <span class="keyword">FROM</span> orders </span><br><span class="line">    <span class="keyword">WHERE</span> order_id = <span class="meta">#&#123;id&#125;</span></span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br></pre></td></tr></table></figure>
<p>这里，还有几点建议：<br>1、数据库的关键字，统一使用大写，例如：SELECT、AS、FROM、WHERE 。<br>2、每 5 个查询字段换一行，保持整齐。<br>3、, 的后面，和 = 的前后，需要有空格，更加清晰。<br>4、SELECT、FROM、WHERE 等，单独一行，高端大气。</p>
</li>
<li><p>第二种，是第一种的特殊情况。大多数场景下，数据库字段名和实体类中的属性名差，主要是前者为 <strong>下划线风格</strong>，后者为<strong>驼峰风格</strong>。在这种情况下，可以直接配置如下，实现自动的下划线转驼峰的功能。</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">&lt;setting <span class="type">name</span>="logImpl" <span class="keyword">value</span>="LOG4J"/&gt;</span><br><span class="line">    &lt;setting <span class="type">name</span>="mapUnderscoreToCamelCase" <span class="keyword">value</span>="true" /&gt;</span><br><span class="line">&lt;/settings&gt;</span><br></pre></td></tr></table></figure>
<p>也就说，约定大于配置。非常推荐！</p>
</li>
<li><p>第三种，通过 <resultMap> 来映射字段名和实体类属性名的一一对应的关系。代码如下：</resultMap></p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">&lt;resultMap type=<span class="string">"me.gacl.domain.Order"</span> <span class="built_in">id</span>=”OrderResultMap”&gt; </span><br><span class="line">    &lt;!–- 用 <span class="built_in">id</span> 属性来映射主键字段 -–&gt; </span><br><span class="line">    &lt;<span class="built_in">id</span> <span class="keyword">property</span>=<span class="string">"id"</span> column=<span class="string">"order_id"</span>&gt; </span><br><span class="line">    &lt;!–- 用 <span class="literal">result</span> 属性来映射非主键字段，<span class="keyword">property</span> 为实体类属性名，column 为数据表中的属性 -–&gt; </span><br><span class="line">    &lt;<span class="literal">result</span> <span class="keyword">property</span>=<span class="string">"orderNo"</span> column =<span class="string">"order_no"</span> /&gt; </span><br><span class="line">    &lt;<span class="literal">result</span> <span class="keyword">property</span>=<span class="string">"price"</span> column=<span class="string">"order_price"</span> /&gt; </span><br><span class="line">&lt;/resultMap&gt;</span><br><span class="line"></span><br><span class="line">&lt;select <span class="built_in">id</span>=<span class="string">"getOrder"</span> parameterType=<span class="string">"Integer"</span> resultMap=<span class="string">"OrderResultMap"</span>&gt;</span><br><span class="line">    SELECT * </span><br><span class="line">    FROM orders </span><br><span class="line">    WHERE order_id = <span class="comment">#&#123;id&#125;</span></span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure></li>
<li><p><em>此处 SELECT * 仅仅作为示例只用，实际场景下，千万千万千万不要这么干。用多少字段，查询多少字段。*</em>  </p>
</li>
</ul>
<h3 id="XML-映射文件中，除了常见的-select-insert-update-delete标-签之外，还有哪些标签？"><a href="#XML-映射文件中，除了常见的-select-insert-update-delete标-签之外，还有哪些标签？" class="headerlink" title="XML 映射文件中，除了常见的 select | insert | update | delete标 签之外，还有哪些标签？"></a>XML 映射文件中，除了常见的 select | insert | update | delete标 签之外，还有哪些标签？</h3><p><code>&lt;cache /&gt; 标签，给定命名空间的缓存配置。</code><br><code>&lt;cache-ref /&gt; 标签，其他命名空间缓存配置的引用。</code><br><code>&lt;resultMap &gt; 标签，是最复杂也是最强大的元素，用来描述如何从数据库结果集中来加载对象。</code><br><code>&lt;parameterMap /&gt; 标签，已废弃！老式风格的参数映射。内联参数是首选,这个元素可能在将来被移除，这里不会记录。</code><br><code>&lt;sql /&gt; 标签，可被其他语句引用的可重用语句块。</code><br><code>&lt;include /&gt; 标签，引用 &lt;sql /&gt; 标签的语句。</code><br><code>&lt;selectKey /&gt; 标签，不支持自增的主键生成策略标签。</code><br><code>&lt;if /&gt;</code><br><code>&lt;choose /&gt;、&lt;when /&gt;、&lt;otherwise /&gt;</code><br><code>&lt;trim /&gt;、&lt;where /&gt;、&lt;set /&gt;</code><br><code>&lt;foreach /&gt;</code><br><code>&lt;bind /&gt;</code><br>请参考 <a href="https://mybatis.org/mybatis-3/zh/sqlmap-xml.html" target="_blank" rel="noopener">MyBatis 官方文档</a></p>
<h3 id="Mybatis-动态-SQL-是做什么的？都有哪些动态-SQL-？能简述一下动态-SQL-的执行原理吗？"><a href="#Mybatis-动态-SQL-是做什么的？都有哪些动态-SQL-？能简述一下动态-SQL-的执行原理吗？" class="headerlink" title="Mybatis 动态 SQL 是做什么的？都有哪些动态 SQL ？能简述一下动态 SQL 的执行原理吗？"></a>Mybatis 动态 SQL 是做什么的？都有哪些动态 SQL ？能简述一下动态 SQL 的执行原理吗？</h3><p><code>Mybatis 动态 SQL ，可以让我们在 XML 映射文件内，以 XML 标签的形式编写动态 SQL ，完成逻辑判断和动态拼接 SQL 的功能。</code><br><code>Mybatis 提供了 9 种动态 SQL 标签：&lt;if /&gt;、&lt;choose /&gt;、&lt;when /&gt;、&lt;otherwise /&gt;、&lt;trim /&gt;、&lt;where /&gt;、&lt;set /&gt;、&lt;foreach /&gt;、&lt;bind /&gt; 。</code><br><code>其执行原理为，使用 OGNL 的表达式，从 SQL 参数对象中计算表达式的值，根据表达式的值动态拼接 SQL ，以此来完成动态 SQL 的功能。</code></p>
<p>如上的内容，更加详细的话，请看 <a href="https://mybatis.org/mybatis-3/zh/dynamic-sql.html" target="_blank" rel="noopener">《MyBatis 文档 —— 动态 SQL》</a> 文档。</p>
<h3 id="最佳实践中，通常一个-XML-映射文件，都会写一个-Mapper-接口与之对应。请问，这个-Mapper-接口的工作原理是什么？Mapper-接口里的方法，参数不同时，方法能重载吗？"><a href="#最佳实践中，通常一个-XML-映射文件，都会写一个-Mapper-接口与之对应。请问，这个-Mapper-接口的工作原理是什么？Mapper-接口里的方法，参数不同时，方法能重载吗？" class="headerlink" title="最佳实践中，通常一个 XML 映射文件，都会写一个 Mapper 接口与之对应。请问，这个 Mapper 接口的工作原理是什么？Mapper 接口里的方法，参数不同时，方法能重载吗？"></a>最佳实践中，通常一个 XML 映射文件，都会写一个 Mapper 接口与之对应。请问，这个 Mapper 接口的工作原理是什么？Mapper 接口里的方法，参数不同时，方法能重载吗？</h3><p>Mapper 接口，对应的关系如下：</p>
<ul>
<li>接口的全限名，就是映射文件中的 “namespace” 的值。</li>
<li>接口的方法名，就是映射文件中 MappedStatement 的 “id” 值。</li>
<li>接口方法内的参数，就是传递给 SQL 的参数。<br>Mapper 接口是没有实现类的，当调用接口方法时，接口全限名 + 方法名拼接字符串作为 key 值，可唯一定位一个对应的 MappedStatement 。举例：com.mybatis3.mappers.StudentDao.findStudentById ，可以唯一找到 “namespace” 为 com.mybatis3.mappers.StudentDao 下面 “id” 为 findStudentById 的 MappedStatement 。</li>
</ul>
<p><code>总结来说，在 Mybatis 中，每一个 &lt;select /&gt;、&lt;insert /&gt;、&lt;update /&gt;、&lt;delete /&gt; 标签，都会被解析为一个 MappedStatement 对象。另外，Mapper 接口的实现类，通过 MyBatis 使用 JDK Proxy 自动生成其代理对象 Proxy ，而代理对象 Proxy 会拦截接口方法，从而“调用”对应的 MappedStatement 方法，最终执行 SQL ，返回执行结果。整体流程如下图：</code></p>
<p><img src="/2020/06/05/MyBatis-%E7%9F%A5%E8%AF%86%E6%B1%87%E6%80%BB/01.png" alt="01"></p>
<ul>
<li>其中，SqlSession 在调用 Executor 之前，会获得对应的 MappedStatement 方法。例如：DefaultSqlSession#select(String statement, Object parameter, RowBounds rowBounds, ResultHandler handler) 方法，代码如下：</li>
</ul>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// DefaultSqlSession.java</span></span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void select(String statement, Object parameter, RowBounds rowBounds, ResultHandler handler) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 获得 MappedStatement 对象</span></span><br><span class="line">        MappedStatement ms = configuration.get<span class="constructor">MappedStatement(<span class="params">statement</span>)</span>;</span><br><span class="line">        <span class="comment">// 执行查询</span></span><br><span class="line">        executor.query(ms, wrap<span class="constructor">Collection(<span class="params">parameter</span>)</span>, rowBounds, handler);</span><br><span class="line">    &#125; catch (Exception e) &#123;</span><br><span class="line">        throw <span class="module-access"><span class="module"><span class="identifier">ExceptionFactory</span>.</span></span>wrap<span class="constructor">Exception(<span class="string">"Error querying database.  Cause: "</span> + <span class="params">e</span>, <span class="params">e</span>)</span>;</span><br><span class="line">    &#125; finally &#123;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">ErrorContext</span>.</span></span>instance<span class="literal">()</span>.reset<span class="literal">()</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>Mapper 接口里的方法，是不能重载的，因为是全限名 + 方法名的保存和寻找策略。</li>
</ul>
<h3 id="Mapper-接口绑定有几种实现方式，分别是怎么实现的"><a href="#Mapper-接口绑定有几种实现方式，分别是怎么实现的" class="headerlink" title="Mapper 接口绑定有几种实现方式，分别是怎么实现的?"></a>Mapper 接口绑定有几种实现方式，分别是怎么实现的?</h3><p>接口绑定有三种实现方式：</p>
<ul>
<li>第一种，通过 XML Mapper 里面写 SQL 来绑定。在这种情况下，要指定 XML 映射文件里面的 “namespace” 必须为接口的全路径名。</li>
<li>第二种，通过注解绑定，就是在接口的方法上面加上 @Select、@Update、@Insert、@Delete 注解，里面包含 SQL 语句来绑定。</li>
<li>第三种，是第二种的特例，也是通过注解绑定，在接口的方法上面加上 @SelectProvider、@UpdateProvider、@InsertProvider、@DeleteProvider 注解，通过 Java 代码，生成对应的动态 SQL。<br><code>实际场景下，最最最推荐的是第一种方式。因为，SQL 通过注解写在 Java 代码中，会非常杂乱。而写在 XML 中，更加有整体性，并且可以更加方便的使用 OGNL 表达式。</code></li>
</ul>
<h3 id="Mybatis-的-XML-Mapper文件中，不同的-XML-映射文件，id-是否可以重复？"><a href="#Mybatis-的-XML-Mapper文件中，不同的-XML-映射文件，id-是否可以重复？" class="headerlink" title="Mybatis 的 XML Mapper文件中，不同的 XML 映射文件，id 是否可以重复？"></a>Mybatis 的 XML Mapper文件中，不同的 XML 映射文件，id 是否可以重复？</h3><p>不同的 XML Mapper 文件，如果配置了 “namespace” ，那么 id 可以重复；如果没有配置 “namespace” ，那么 id 不能重复。毕竟”namespace” 不是必须的，只是最佳实践而已。</p>
<p>原因就是，namespace + id 是作为 Map&lt;String, MappedStatement&gt; 的 key 使用的。如果没有 “namespace”，就剩下 id ，那么 id 重复会导致数据互相覆盖。如果有了 “namespace”，自然 id 就可以重复，”namespace”不同，namespace + id 自然也就不同。</p>
<h3 id="如何获取自动生成的-主-键值"><a href="#如何获取自动生成的-主-键值" class="headerlink" title="如何获取自动生成的(主)键值?"></a>如何获取自动生成的(主)键值?</h3><p>不同的数据库，获取自动生成的(主)键值的方式是不同的。</p>
<p><code>MySQL 有两种方式，但是自增主键，代码如下：</code></p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">// 方式一，使用 useGeneratedKeys + keyProperty 属性</span><br><span class="line">&lt;<span class="keyword">insert</span> id="insert" parameterType="Person" useGeneratedKeys="true" keyProperty="id"&gt;</span><br><span class="line">    <span class="keyword">INSERT</span> <span class="keyword">INTO</span> person(<span class="type">name</span>, pswd)</span><br><span class="line">    <span class="keyword">VALUE</span> (#&#123;<span class="type">name</span>&#125;, #&#123;pswd&#125;)</span><br><span class="line">&lt;/<span class="keyword">insert</span>&gt;</span><br><span class="line">    </span><br><span class="line">// 方式二，使用 `&lt;selectKey /&gt;` 标签</span><br><span class="line">&lt;<span class="keyword">insert</span> id="insert" parameterType="Person"&gt;</span><br><span class="line">    &lt;selectKey keyProperty="id" resultType="long" <span class="keyword">order</span>="AFTER"&gt;</span><br><span class="line">        <span class="keyword">SELECT</span> LAST_INSERT_ID()</span><br><span class="line">    &lt;/selectKey&gt;</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">INSERT</span> <span class="keyword">INTO</span> person(<span class="type">name</span>, pswd)</span><br><span class="line">    <span class="keyword">VALUE</span> (#&#123;<span class="type">name</span>&#125;, #&#123;pswd&#125;)</span><br><span class="line">&lt;/<span class="keyword">insert</span>&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>其中，方式一较为常用。</li>
</ul>
<p><code>Oracle 有两种方式，序列和触发器。基于序列，根据 &lt;selectKey /&gt; 执行的时机，也有两种方式，代码如下：</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 这个是创建表的自增序列</span></span><br><span class="line">CREATE SEQUENCE student_sequence</span><br><span class="line">INCREMENT BY <span class="number">1</span></span><br><span class="line">NOMAXVALUE</span><br><span class="line">NOCYCLE</span><br><span class="line">CACHE <span class="number">10</span>;</span><br></pre></td></tr></table></figure>
<p>// 方式一，使用 <code>&lt;selectKey /&gt;</code> 标签 + BEFORE</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;insert id=<span class="string">"add"</span> parameterType=<span class="string">"Student"</span>&gt;</span><br><span class="line">　　&lt;selectKey keyProperty=<span class="string">"student_id"</span> resultType=<span class="string">"int"</span> order=<span class="string">"BEFORE"</span>&gt;</span><br><span class="line">      select student_sequence.nextval FROM dual</span><br><span class="line">    &lt;/selectKey&gt;</span><br><span class="line">    </span><br><span class="line">     <span class="function">INSERT INTO <span class="title">student</span><span class="params">(student_id, student_name, student_age)</span></span></span><br><span class="line"><span class="function">     <span class="title">VALUES</span> <span class="params">(#&#123;student_id&#125;,#&#123;student_name&#125;,#&#123;student_age&#125;)</span></span></span><br><span class="line"><span class="function">&lt;/insert&gt;</span></span><br><span class="line"><span class="function">```java</span></span><br><span class="line"><span class="function"><span class="comment">// 方式二，使用 `&lt;selectKey /&gt;` 标签 + AFTER</span></span></span><br><span class="line"><span class="function">&lt;insert id</span>=<span class="string">"save"</span> parameterType=<span class="string">"com.threeti.to.ZoneTO"</span> &gt;</span><br><span class="line">    &lt;selectKey resultType=<span class="string">"java.lang.Long"</span> keyProperty=<span class="string">"id"</span> order=<span class="string">"AFTER"</span> &gt;</span><br><span class="line">      SELECT SEQ_ZONE.CURRVAL AS id FROM dual</span><br><span class="line">    &lt;/selectKey&gt;</span><br><span class="line">    </span><br><span class="line">    <span class="function">INSERT INTO <span class="title">TBL_ZONE</span> <span class="params">(ID, NAME )</span> </span></span><br><span class="line"><span class="function">    <span class="title">VALUES</span> <span class="params">(SEQ_ZONE.NEXTVAL, #&#123;name,jdbcType=VARCHAR&#125;)</span></span></span><br><span class="line"><span class="function">&lt;/insert&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Mybatis-执行批量插入，能返回数据库主键列表吗？"><a href="#Mybatis-执行批量插入，能返回数据库主键列表吗？" class="headerlink" title="Mybatis 执行批量插入，能返回数据库主键列表吗？"></a>Mybatis 执行批量插入，能返回数据库主键列表吗？</h3><p>能<br>升级Mybatis版本到3.3.1。官方在这个版本中加入了批量新增返回主键id的功能<br>mapper.xml层代码</p>
<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!-- 批量新增 --&gt;</span>  </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"batchInsert"</span> <span class="attr">parameterType</span>=<span class="string">"java.util.List"</span> <span class="attr">useGeneratedKeys</span>=<span class="string">"true"</span> <span class="attr">keyProperty</span>=<span class="string">"id"</span> &gt;</span>  </span></span><br><span class="line"><span class="xml">    INSERT INTO  </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">"t_shop_resource"</span> /&gt;</span>  </span></span><br><span class="line"><span class="xml">    (relation_id, summary_id, relation_type)  </span></span><br><span class="line"><span class="xml">    VALUES  </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"list"</span> <span class="attr">index</span>=<span class="string">"index"</span> <span class="attr">item</span>=<span class="string">"shopResource"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span>  </span></span><br><span class="line"><span class="xml">        (  </span></span><br><span class="line"><span class="xml">            #</span><span class="template-variable">&#123;shopResource.relationId&#125;</span><span class="xml">, #</span><span class="template-variable">&#123;shopResource.summaryId&#125;</span><span class="xml">, #</span><span class="template-variable">&#123;shopResource.relationType&#125;</span><span class="xml">  </span></span><br><span class="line"><span class="xml">        )  </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span>  </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;ShopResource&gt; batchinsertCallId(List&lt;ShopResource&gt; shopResourceList)&#123;  </span><br><span class="line">    <span class="keyword">this</span>.getSqlSession().insert(getStatement(SQL_BATCH_INSERT_CALL_ID), shopResourceList);  </span><br><span class="line">    <span class="keyword">return</span> shopResourceList;<span class="comment">// 重点介绍  </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在mybatis3.3.1中，虽然加入了批量新增返回主键id的功能，但是它是这样运行的，在需要新增插入新元素集合对象时，它会需要参数对象，当执行完插入操作后，给之前的参数对象设置id值，也就是改变了需要插入对象集合中的元素的属性id值， 所以接收返回时，返回方法形参参数即可，同样的地址引用改变了内容，返回后的集合也是改变后的集合。</p>
<h3 id="在-Mapper-中如何传递多个参数"><a href="#在-Mapper-中如何传递多个参数" class="headerlink" title="在 Mapper 中如何传递多个参数?"></a>在 Mapper 中如何传递多个参数?</h3><ul>
<li><p>第一种，使用 Map 集合，装载多个参数进行传递。代码如下：</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 调用方法</span></span><br><span class="line">Map&lt;<span class="keyword">String</span>, Object&gt; <span class="built_in">map</span> = <span class="keyword">new</span> HashMap();</span><br><span class="line"><span class="built_in">map</span>.<span class="built_in">put</span>(<span class="string">"start"</span>, start);</span><br><span class="line"><span class="built_in">map</span>.<span class="built_in">put</span>(<span class="string">"end"</span>, <span class="built_in">end</span>);</span><br><span class="line"><span class="keyword">return</span> studentMapper.selectStudents(<span class="built_in">map</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Mapper 接口</span></span><br><span class="line"><span class="function">List&lt;Student&gt; <span class="title">selectStudents</span><span class="params">(Map&lt;<span class="keyword">String</span>, Object&gt; <span class="built_in">map</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Mapper XML 代码</span></span><br><span class="line">&lt;select id=<span class="string">"selectStudents"</span> parameterType=<span class="string">"Map"</span> resultType=<span class="string">"Student"</span>&gt;</span><br><span class="line">    SELECT * </span><br><span class="line">    FROM students </span><br><span class="line">    LIMIT #&#123;start&#125;, #&#123;<span class="built_in">end</span>&#125;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure>
<p><strong>显然，这不是一种优雅的方式。</strong></p>
</li>
<li><p>第二种，保持传递多个参数，使用 @Param 注解。代码如下：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">// 调用方法</span><br><span class="line"><span class="keyword">return</span> studentMapper.selectStudents(<span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">// Mapper 接口</span><br><span class="line">List&lt;Student&gt; selectStudents(@Param("start") <span class="type">Integer</span> <span class="keyword">start</span>, @Param("end") <span class="type">Integer</span> <span class="keyword">end</span>);</span><br><span class="line"></span><br><span class="line">// Mapper <span class="type">XML</span> 代码</span><br><span class="line">&lt;<span class="keyword">select</span> id="selectStudents" resultType="Student"&gt;</span><br><span class="line">    <span class="keyword">SELECT</span> * </span><br><span class="line">    <span class="keyword">FROM</span> students </span><br><span class="line">    <span class="keyword">LIMIT</span> #&#123;<span class="keyword">start</span>&#125;, #&#123;<span class="keyword">end</span>&#125;</span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br></pre></td></tr></table></figure>
<p><strong>推荐使用这种方式。</strong> </p>
</li>
<li><p>第三种，保持传递多个参数，不使用 @Param 注解。代码如下：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">// 调用方法</span><br><span class="line"><span class="keyword">return</span> studentMapper.selectStudents(<span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">// Mapper 接口</span><br><span class="line">List&lt;Student&gt; selectStudents(<span class="type">Integer</span> <span class="keyword">start</span>, <span class="type">Integer</span> <span class="keyword">end</span>);</span><br><span class="line"></span><br><span class="line">// Mapper <span class="type">XML</span> 代码</span><br><span class="line">&lt;<span class="keyword">select</span> id="selectStudents" resultType="Student"&gt;</span><br><span class="line">    <span class="keyword">SELECT</span> * </span><br><span class="line">    <span class="keyword">FROM</span> students </span><br><span class="line">    <span class="keyword">LIMIT</span> #&#123;param1&#125;, #&#123;param2&#125;</span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br></pre></td></tr></table></figure>
<p><strong>其中，按照参数在方法方法中的位置，从 1 开始，逐个为 #{param1}、#{param2}、#{param3} 不断向下。</strong></p>
</li>
</ul>
<h3 id="Mybatis-是否可以映射-Enum-枚举类？"><a href="#Mybatis-是否可以映射-Enum-枚举类？" class="headerlink" title="Mybatis 是否可以映射 Enum 枚举类？"></a>Mybatis 是否可以映射 Enum 枚举类？</h3><p>Mybatis 可以映射枚举类，对应的实现类为 EnumTypeHandler 或 EnumOrdinalTypeHandler 。</p>
<p>EnumTypeHandler ，基于 Enum.name 属性( String )。默认。<br>EnumOrdinalTypeHandler ，基于 Enum.ordinal 属性( int )。可通过 <setting name="defaultEnumTypeHandler" value="EnumOrdinalTypeHandler"> 来设置。<br>当然，实际开发场景，我们很少使用 Enum 类型，更加的方式是，代码如下：</setting></p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="symbol">Dog</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> static <span class="keyword">final</span> <span class="built_in">int</span> STATUS_GOOD = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> static <span class="keyword">final</span> <span class="built_in">int</span> STATUS_BETTER = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">public</span> static <span class="keyword">final</span> <span class="built_in">int</span> STATUS_BEST = <span class="number">3</span>；</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> status;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>并且，不单可以映射枚举类，Mybatis 可以映射任何对象到表的一列上。映射方式为自定义一个 TypeHandler 类，实现 TypeHandler 的#setParameter(…) 和 #getResult(…) 接口方法。</p>
<p>TypeHandler 有两个作用：</p>
<p>一是，完成从 javaType 至 jdbcType 的转换。<br>二是，完成 jdbcType 至 javaType 的转换。<br>具体体现为 #setParameter(…) 和 #getResult(..) 两个方法，分别代表设置 SQL 问号占位符参数和获取列查询结果。</p>
<h3 id="Mybatis-都有哪些-Executor-执行器？它们之间的区别是什么？"><a href="#Mybatis-都有哪些-Executor-执行器？它们之间的区别是什么？" class="headerlink" title="Mybatis 都有哪些 Executor 执行器？它们之间的区别是什么？"></a>Mybatis 都有哪些 Executor 执行器？它们之间的区别是什么？</h3><p>Mybatis 有四种 Executor 执行器，分别是 SimpleExecutor、ReuseExecutor、BatchExecutor、CachingExecutor 。</p>
<p>SimpleExecutor ：每执行一次 update 或 select 操作，就创建一个 Statement 对象，用完立刻关闭 Statement 对象。<br>ReuseExecutor ：执行 update 或 select 操作，以 SQL 作为key 查找缓存的 Statement 对象，存在就使用，不存在就创建；用完后，不关闭 Statement 对象，而是放置于缓存 Map&lt;String, Statement&gt; 内，供下一次使用。简言之，就是重复使用 Statement 对象。<br>BatchExecutor ：执行 update 操作（没有 select 操作，因为 JDBC 批处理不支持 select 操作），将所有 SQL 都添加到批处理中（通过 addBatch 方法），等待统一执行（使用 executeBatch 方法）。它缓存了多个 Statement 对象，每个 Statement 对象都是调用 addBatch 方法完毕后，等待一次执行 executeBatch 批处理。实际上，整个过程与 JDBC 批处理是相同。<br>CachingExecutor ：在上述的三个执行器之上，增加二级缓存的功能。</p>
<p><code>通过设置 &lt;setting name=&quot;defaultExecutorType&quot; value=&quot;&quot;&gt; 的 &quot;value&quot; 属性，可传入 SIMPLE、REUSE、BATCH 三个值，分别使用 SimpleExecutor、ReuseExecutor、BatchExecutor 执行器。</code></p>
<p><code>通过设置 &lt;setting name=&quot;cacheEnabled&quot; value=&quot;&quot; 的 &quot;value&quot; 属性为 true 时，创建 CachingExecutor 执行器。</code></p>
<h3 id="MyBatis-如何执行批量插入"><a href="#MyBatis-如何执行批量插入" class="headerlink" title="MyBatis 如何执行批量插入?"></a>MyBatis 如何执行批量插入?</h3><p>首先，在 Mapper XML 编写一个简单的 Insert 语句。代码如下：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">insert</span> id="insertUser" parameterType="String"&gt; </span><br><span class="line">    <span class="keyword">INSERT</span> <span class="keyword">INTO</span> users(<span class="type">name</span>) </span><br><span class="line">    <span class="keyword">VALUES</span> (#&#123;<span class="keyword">value</span>&#125;) </span><br><span class="line">&lt;/<span class="keyword">insert</span>&gt;</span><br></pre></td></tr></table></figure>
<p>然后，然后在对应的 Mapper 接口中，编写映射的方法。代码如下：</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">public</span> <span class="selector-tag">interface</span> <span class="selector-tag">UserMapper</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="selector-tag">void</span> <span class="selector-tag">insertUser</span>(<span class="variable">@Param</span>(<span class="string">"name"</span>) String name);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>最后，调用该 Mapper 接口方法。代码如下：</p>
<figure class="highlight processing"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line">@Test</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> testBatch() &#123;</span><br><span class="line">    <span class="comment">// 创建要插入的用户的名字的数组</span></span><br><span class="line">    List&lt;<span class="keyword">String</span>&gt; names = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    names.<span class="built_in">add</span>(<span class="string">"占小狼"</span>);</span><br><span class="line">    names.<span class="built_in">add</span>(<span class="string">"朱小厮"</span>);</span><br><span class="line">    names.<span class="built_in">add</span>(<span class="string">"徐妈"</span>);</span><br><span class="line">    names.<span class="built_in">add</span>(<span class="string">"飞哥"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得执行器类型为 Batch 的 SqlSession 对象，并且 autoCommit = false ，禁止事务自动提交</span></span><br><span class="line">    <span class="keyword">try</span> (SqlSession session = sqlSessionFactory.openSession(ExecutorType.BATCH, <span class="keyword">false</span>)) &#123;</span><br><span class="line">        <span class="comment">// 获得 Mapper 对象</span></span><br><span class="line">        UserMapper mapper = session.getMapper(UserMapper.class);</span><br><span class="line">        <span class="comment">// 循环插入</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">String</span> name : names) &#123;</span><br><span class="line">            mapper.insertUser(name);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 提交批量操作</span></span><br><span class="line">        session.commit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>还有另一种方式，代码如下：<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">INSERT INTO [<span class="string">表名</span>](<span class="link">[列名],[列名]</span>) </span><br><span class="line">VALUES</span><br><span class="line">([列值],[列值])),</span><br><span class="line">([列值],[列值])),</span><br><span class="line">([列值],[列值]));</span><br></pre></td></tr></table></figure>
对于这种方式，需要保证单条 SQL 不超过语句的最大限制 max_allowed_packet 大小，默认为 1 M 。<br>这两种方式的性能对比，可以看看 <a href="https://www.jianshu.com/p/cce617be9f9e" target="_blank" rel="noopener">《[实验]mybatis批量插入方式的比较》 </a>。</li>
</ul>
<h3 id="介绍-MyBatis-的一级缓存和二级缓存的概念和实现原理？"><a href="#介绍-MyBatis-的一级缓存和二级缓存的概念和实现原理？" class="headerlink" title="介绍 MyBatis 的一级缓存和二级缓存的概念和实现原理？"></a>介绍 MyBatis 的一级缓存和二级缓存的概念和实现原理？</h3><h3 id="Mybatis-是否支持延迟加载？如果支持，它的实现原理是什么？"><a href="#Mybatis-是否支持延迟加载？如果支持，它的实现原理是什么？" class="headerlink" title="Mybatis 是否支持延迟加载？如果支持，它的实现原理是什么？"></a>Mybatis 是否支持延迟加载？如果支持，它的实现原理是什么？</h3><p>Mybatis 仅支持 association 关联对象和 collection 关联集合对象的延迟加载。其中，association 指的就是一对一，collection 指的就是一对多查询。</p>
<p>在 Mybatis 配置文件中，可以配置 <setting name="lazyLoadingEnabled" value="true"> 来启用延迟加载的功能。默认情况下，延迟加载的功能是关闭的。</setting></p>
<p>它的原理是，使用 CGLIB 或 Javassist( 默认 ) 创建目标对象的代理对象。当调用代理对象的延迟加载属性的 getting 方法时，进入拦截器方法。比如调用 a.getB().getName() 方法，进入拦截器的 invoke(…) 方法，发现 a.getB() 需要延迟加载时，那么就会单独发送事先保存好的查询关联 B 对象的 SQL ，把 B 查询上来，然后调用a.setB(b) 方法，于是 a 对象 b 属性就有值了，接着完成a.getB().getName() 方法的调用。这就是延迟加载的基本原理。</p>
<p>当然了，不光是 Mybatis，几乎所有的包括 Hibernate 在内，支持延迟加载的原理都是一样的。</p>
<h3 id="Mybatis-能否执行一对一、一对多的关联查询吗？都有哪些实现方式，以及它们之间的区别。"><a href="#Mybatis-能否执行一对一、一对多的关联查询吗？都有哪些实现方式，以及它们之间的区别。" class="headerlink" title="Mybatis 能否执行一对一、一对多的关联查询吗？都有哪些实现方式，以及它们之间的区别。"></a>Mybatis 能否执行一对一、一对多的关联查询吗？都有哪些实现方式，以及它们之间的区别。</h3><p>能，Mybatis 不仅可以执行一对一、一对多的关联查询，还可以执行多对一，多对多的关联查询。</p>
<ul>
<li><p>一对多<br>用户级联文章在JavaBean中的编写方式,这就是一对多在JavaBean中的配置<br><img src="/2020/06/05/MyBatis-%E7%9F%A5%E8%AF%86%E6%B1%87%E6%80%BB/02.png" alt="02.png"><br>Mybatis的Mapper该如何编写一对多?很简单,就是在resultMap标签中配置<collection>标签,用来存储查询到的文章列表,注意posts代表的是用户实体的文章List集合<br><img src="/2020/06/05/MyBatis-%E7%9F%A5%E8%AF%86%E6%B1%87%E6%80%BB/03.png" alt="03.png"></collection></p>
</li>
<li><p>多对一<br>文章级联用户在JavaBean中的编写方式,这是多对一在JavaBean中的配置<br><img src="/2020/06/05/MyBatis-%E7%9F%A5%E8%AF%86%E6%B1%87%E6%80%BB/04.png" alt="04.png"><br>Mybatis的Mapper该如何编写多对一?很简单,就是在resultMap标签中配置<association></association>标签关联所属的用户实体<br><img src="/2020/06/05/MyBatis-%E7%9F%A5%E8%AF%86%E6%B1%87%E6%80%BB/05.png" alt="05.png"></p>
</li>
</ul>
<h3 id="简述-Mybatis-的插件运行原理？以及如何编写一个插件？"><a href="#简述-Mybatis-的插件运行原理？以及如何编写一个插件？" class="headerlink" title="简述 Mybatis 的插件运行原理？以及如何编写一个插件？"></a>简述 Mybatis 的插件运行原理？以及如何编写一个插件？</h3><p>Mybatis 仅可以编写针对 ParameterHandler、ResultSetHandler、StatementHandler、Executor 这 4 种接口的插件。</p>
<p>Mybatis 使用 JDK 的动态代理，为需要拦截的接口生成代理对象以实现接口方法拦截功能，每当执行这 4 种接口对象的方法时，就会进入拦截方法，具体就是 InvocationHandler 的 #invoke(…)方法。当然，只会拦截那些你指定需要拦截的方法。</p>
<p>编写一个 MyBatis 插件的步骤如下：</p>
<ul>
<li>首先，实现 Mybatis 的 Interceptor 接口，并实现 #intercept(…) 方法。</li>
<li>然后，在给插件编写注解，指定要拦截哪一个接口的哪些方法即可</li>
<li>最后，在配置文件中配置你编写的插件。</li>
</ul>
<h3 id="简述-Mybatis-的插件运行原理？以及如何编写一个插件？-1"><a href="#简述-Mybatis-的插件运行原理？以及如何编写一个插件？-1" class="headerlink" title="简述 Mybatis 的插件运行原理？以及如何编写一个插件？"></a>简述 Mybatis 的插件运行原理？以及如何编写一个插件？</h3><p>Mybatis 使用 RowBounds 对象进行分页，它是针对 ResultSet 结果集执行的内存分页，而非数据库分页。<br>所以，实际场景下，不适合直接使用 MyBatis 原有的 RowBounds 对象进行分页。而是使用如下两种方案：</p>
<p>在 SQL 内直接书写带有数据库分页的参数来完成数据库分页功能<br>也可以使用分页插件来完成数据库分页。<br>这两者都是基于数据库分页，差别在于前者是工程师手动编写分页条件，后者是插件自动添加分页条件。</p>
<p>分页插件的基本原理是使用 Mybatis 提供的插件接口，实现自定义分页插件。在插件的拦截方法内，拦截待执行的 SQL ，然后重写 SQL ，根据dialect 方言，添加对应的物理分页语句和物理分页参数。</p>
<p>举例：SELECT * FROM student ，拦截 SQL 后重写为：select * FROM student LIMI 0，10 。</p>
<h3 id="MyBatis-与-Hibernate-有哪些不同？"><a href="#MyBatis-与-Hibernate-有哪些不同？" class="headerlink" title="MyBatis 与 Hibernate 有哪些不同？"></a>MyBatis 与 Hibernate 有哪些不同？</h3><ul>
<li>hibernate是全自动，而mybatis是半自动<br>hibernate完全可以通过对象关系模型实现对数据库的操作，拥有完整的JavaBean对象与数据库的映射结构来自动生成sql。而mybatis仅有基本的字段映射，对象数据以及对象实际关系仍然需要通过手写sql来实现和管理。</li>
<li>hibernate数据库移植性远大于mybatis<br>hibernate通过它强大的映射结构和hql语言，大大降低了对象与数据库（oracle、mysql等）的耦合性，而mybatis由于需要手写sql，因此与数据库的耦合性直接取决于程序员写sql的方法，如果sql不具通用性而用了很多某数据库特性的sql语句的话，移植性也会随之降低很多，成本很高。</li>
<li>hibernate拥有完整的日志系统，mybatis则欠缺一些<br>hibernate日志系统非常健全，涉及广泛，包括：sql记录、关系异常、优化警告、缓存提示、脏数据警告等；而mybatis则除了基本记录功能外，功能薄弱很多。</li>
<li>mybatis相比hibernate需要关心很多细节<br>hibernate配置要比mybatis复杂的多，学习成本也比mybatis高。但也正因为mybatis使用简单，才导致它要比hibernate关心很多技术细节。mybatis由于不用考虑很多细节，开发模式上与传统jdbc区别很小，因此很容易上手并开发项目，但忽略细节会导致项目前期bug较多，因而开发出相对稳定的软件很慢，而开发出软件却很快。hibernate则正好与之相反。但是如果使用hibernate很熟练的话，实际上开发效率丝毫不差于甚至超越mybatis。</li>
<li>sql直接优化上，mybatis要比hibernate方便很多<br>由于mybatis的sql都是写在xml里，因此优化sql比hibernate方便很多。而hibernate的sql很多都是自动生成的，无法直接维护sql；虽有hql，但功能还是不及sql强大，见到报表等变态需求时，hql也歇菜，也就是说hql是有局限的；hibernate虽然也支持原生sql，但开发模式上却与orm不同，需要转换思维，因此使用上不是非常方便。总之写sql的灵活度上hibernate不及mybatis。</li>
</ul>
<h3 id="JDBC-编程有哪些不足之处，MyBatis是如何解决这些问题的？"><a href="#JDBC-编程有哪些不足之处，MyBatis是如何解决这些问题的？" class="headerlink" title="JDBC 编程有哪些不足之处，MyBatis是如何解决这些问题的？"></a>JDBC 编程有哪些不足之处，MyBatis是如何解决这些问题的？</h3><p>问题一：SQL 语句写在代码中造成代码不易维护，且代码会比较混乱。<br>解决方式：将 SQL 语句配置在 Mapper XML 文件中，与 Java 代码分离。</p>
<p>问题二：根据参数不同，拼接不同的 SQL 语句非常麻烦。例如 SQL 语句的 WHERE 条件不一定，可能多也可能少，占位符需要和参数一一对应。<br>解决方式：MyBatis 提供 <where>、<if> 等等动态语句所需要的标签，并支持 OGNL 表达式，简化了动态 SQL 拼接的代码，提升了开发效率。</if></where></p>
<p>问题三，对结果集解析麻烦，SQL 变化可能导致解析代码变化，且解析前需要遍历。<br>解决方式：Mybatis 自动将 SQL 执行结果映射成 Java 对象。</p>
<p>问题四，数据库链接创建、释放频繁造成系统资源浪费从而影响系统性能，如果使用数据库链接池可解决此问题。<br>解决方式：在 mybatis-config.xml 中，配置数据链接池，使用连接池管理数据库链接。<br>当然，即使不使用 MyBatis ，也可以使用数据库连接池。<br>另外，MyBatis 默认提供了数据库连接池的实现，只是说，因为其它开源的数据库连接池性能更好，所以一般很少使用 MyBatis 自带的连接池实现。</p>
<h3 id="Mybatis-映射文件中，如果-A-标签通过-include-引用了B标签的内容，请问，B-标签能否定义在-A-标签的后面，还是说必须定义在A标签的前面？"><a href="#Mybatis-映射文件中，如果-A-标签通过-include-引用了B标签的内容，请问，B-标签能否定义在-A-标签的后面，还是说必须定义在A标签的前面？" class="headerlink" title="Mybatis 映射文件中，如果 A 标签通过 include 引用了B标签的内容，请问，B 标签能否定义在 A 标签的后面，还是说必须定义在A标签的前面？"></a>Mybatis 映射文件中，如果 A 标签通过 include 引用了B标签的内容，请问，B 标签能否定义在 A 标签的后面，还是说必须定义在A标签的前面？</h3><p>虽然 Mybatis 解析 XML 映射文件是按照顺序解析的。但是，被引用的 B 标签依然可以定义在任何地方，Mybatis 都可以正确识别。也就是说，无需按照顺序，进行定义。</p>
<p>原理是，Mybatis 解析 A 标签，发现 A 标签引用了 B 标签，但是 B 标签尚未解析到，尚不存在，此时，Mybatis 会将 A 标签标记为<strong>未解析状态</strong>。然后，继续解析余下的标签，包含 B 标签，待所有标签解析完毕，Mybatis 会重新解析那些被标记为未解析的标签，此时再解析A标签时，B 标签已经存在，A 标签也就可以正常解析完成了</p>
<h3 id="简述-Mybatis-的-XML-映射文件和-Mybatis-内部数据结构之间的映射关系？"><a href="#简述-Mybatis-的-XML-映射文件和-Mybatis-内部数据结构之间的映射关系？" class="headerlink" title="简述 Mybatis 的 XML 映射文件和 Mybatis 内部数据结构之间的映射关系？"></a>简述 Mybatis 的 XML 映射文件和 Mybatis 内部数据结构之间的映射关系？</h3><p>Mybatis 将所有 XML 配置信息都封装到 All-In-One 重量级对象Configuration内部。<br>在 XML Mapper 文件中：<br><code>&lt;parameterMap&gt; 标签，会被解析为 ParameterMap 对象，其每个子元素会被解析为 ParameterMapping 对象。</code><br><code>&lt;resultMap&gt; 标签，会被解析为 ResultMap 对象，其每个子元素会被解析为 ResultMapping 对象。</code><br><code>每一个 &lt;select&gt;、&lt;insert&gt;、&lt;update&gt;、&lt;delete&gt; 标签，均会被解析为一个 MappedStatement 对象，标签内的 SQL 会被解析为一个 BoundSql 对象。</code></p>
]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
      <tags>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序-购物车</title>
    <url>/2020/06/12/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E8%B4%AD%E7%89%A9%E8%BD%A6/</url>
    <content><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p><code>本项目是仿网易严选开源平台（此为免费版），前端使用Vue+iView, 后台使用Spring+SpringMVC+Mybatis+Shiro+J2Cache框架，这里只列出关键代码，有兴趣可以下载源码来研究。</code></p>
<a id="more"></a>

<h3 id="查询商品"><a href="#查询商品" class="headerlink" title="查询商品"></a>查询商品</h3><ul>
<li>先添加一个商品到购物车里，如下图，点击 分类 -&gt; 居家 -&gt; 布艺软装<br><img src="/2020/06/12/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E8%B4%AD%E7%89%A9%E8%BD%A6/01.jpg" alt="01"> </li>
</ul>
<h4 id="前台实现"><a href="#前台实现" class="headerlink" title="前台实现"></a>前台实现</h4><h5 id="app-json"><a href="#app-json" class="headerlink" title="app.json"></a>app.json</h5><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"pagePath"</span>: <span class="string">"pages/catalog/catalog"</span>,</span><br><span class="line">  <span class="attr">"iconPath"</span>: <span class="string">"static/images/ic_menu_sort_nor.png"</span>,</span><br><span class="line">  <span class="attr">"selectedIconPath"</span>: <span class="string">"static/images/ic_menu_sort_pressed.png"</span>,</span><br><span class="line">  <span class="attr">"text"</span>: <span class="string">"分类"</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<h5 id="catalog-wxml"><a href="#catalog-wxml" class="headerlink" title="catalog.wxml"></a>catalog.wxml</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"search"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">navigator</span> <span class="attr">url</span>=<span class="string">"/pages/search/search"</span> <span class="attr">class</span>=<span class="string">"input"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">"icon"</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"txt"</span>&gt;</span>商品搜索, 共&#123;&#123;goodsCount&#125;&#125;款好物<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">navigator</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"catalog"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scroll-view</span> <span class="attr">class</span>=<span class="string">"nav"</span> <span class="attr">scroll-y</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"item &#123;&#123; currentCategory.id == item.id ? 'active' : ''&#125;&#125;"</span> <span class="attr">wx:for</span>=<span class="string">"&#123;&#123;navList&#125;&#125;"</span>  <span class="attr">data-id</span>=<span class="string">"&#123;&#123;item.id&#125;&#125;"</span> <span class="attr">data-index</span>=<span class="string">"&#123;&#123;index&#125;&#125;"</span> <span class="attr">bindtap</span>=<span class="string">"switchCate"</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">scroll-view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scroll-view</span> <span class="attr">class</span>=<span class="string">"cate"</span> <span class="attr">scroll-y</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">navigator</span> <span class="attr">url</span>=<span class="string">"url"</span> <span class="attr">class</span>=<span class="string">"banner"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">"image"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;currentCategory.wap_banner_url&#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"txt"</span>&gt;</span>&#123;&#123;currentCategory.front_name&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">navigator</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"hd"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span><span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"txt"</span>&gt;</span>&#123;&#123;currentCategory.name&#125;&#125;分类<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span><span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"bd"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">navigator</span> <span class="attr">url</span>=<span class="string">"/pages/category/category?id=&#123;&#123;item.id&#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"item &#123;&#123;(index+1) % 3 == 0 ? 'last' : ''&#125;&#125;"</span> <span class="attr">wx:for</span>=<span class="string">"&#123;&#123;currentCategory.subCategoryList&#125;&#125;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">"icon"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123;item.wap_banner_url&#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"txt"</span>&gt;</span>&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">navigator</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">scroll-view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="catalog-js"><a href="#catalog-js" class="headerlink" title="catalog.js"></a>catalog.js</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> util = <span class="built_in">require</span>(<span class="string">'../../utils/util.js'</span>);</span><br><span class="line"><span class="keyword">var</span> api = <span class="built_in">require</span>(<span class="string">'../../config/api.js'</span>);</span><br><span class="line"></span><br><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    navList: [],</span><br><span class="line">    categoryList: [],</span><br><span class="line">    currentCategory: &#123;&#125;,</span><br><span class="line">    scrollLeft: <span class="number">0</span>,</span><br><span class="line">    scrollTop: <span class="number">0</span>,</span><br><span class="line">    goodsCount: <span class="number">0</span>,</span><br><span class="line">    scrollHeight: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 页面加载完后调用</span></span><br><span class="line">  onLoad: <span class="function"><span class="keyword">function</span> (<span class="params">options</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.getCatalog();</span><br><span class="line">  &#125;,</span><br><span class="line">  getCatalog: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//CatalogList</span></span><br><span class="line">    <span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line">    wx.showLoading(&#123;</span><br><span class="line">      title: <span class="string">'加载中...'</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 获取分类栏目数据</span></span><br><span class="line">    util.request(api.CatalogList).then(<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">        that.setData(&#123;</span><br><span class="line">          navList: res.data.categoryList,</span><br><span class="line">          currentCategory: res.data.currentCategory</span><br><span class="line">        &#125;);</span><br><span class="line">        wx.hideLoading();</span><br><span class="line">      &#125;);</span><br><span class="line">    util.request(api.GoodsCount).then(<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">      that.setData(&#123;</span><br><span class="line">        goodsCount: res.data.goodsCount</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">  getCurrentCategory: <span class="function"><span class="keyword">function</span> (<span class="params">id</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line">    util.request(api.CatalogCurrent, &#123; <span class="attr">id</span>: id &#125;)</span><br><span class="line">      .then(<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">        that.setData(&#123;</span><br><span class="line">          currentCategory: res.data.currentCategory</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  onReady: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 页面渲染完成</span></span><br><span class="line">  &#125;,</span><br><span class="line">  onShow: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 页面显示</span></span><br><span class="line">  &#125;,</span><br><span class="line">  onHide: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 页面隐藏</span></span><br><span class="line">  &#125;,</span><br><span class="line">  onUnload: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 页面关闭</span></span><br><span class="line">  &#125;,</span><br><span class="line">  getList: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">    util.request(api.ApiRootUrl + <span class="string">'api/catalog/'</span> + that.data.currentCategory.cat_id)</span><br><span class="line">      .then(<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">        that.setData(&#123;</span><br><span class="line">          categoryList: res.data,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 切换类别时触发事件</span></span><br><span class="line">  switchCate: <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">var</span> currentTarget = event.currentTarget;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.data.currentCategory.id == event.currentTarget.dataset.id) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.getCurrentCategory(event.currentTarget.dataset.id);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h5 id="config-api"><a href="#config-api" class="headerlink" title="config/api"></a>config/api</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> API_BASE_URL = <span class="string">'http://localhost:8080/platform-framework/api/'</span>;</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line"></span><br><span class="line">  CatalogList: API_BASE_URL + <span class="string">'catalog/index'</span>,  <span class="comment">//分类目录全部分类数据接口</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="后台实现"><a href="#后台实现" class="headerlink" title="后台实现"></a>后台实现</h4><h5 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h5><p>ApiCatalogController</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 获取分类栏目数据</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@ApiOperation</span>(value = <span class="string">"获取分类栏目数据"</span>)</span><br><span class="line"><span class="meta">@ApiImplicitParams</span>(&#123;<span class="meta">@ApiImplicitParam</span>(name = <span class="string">"id"</span>, value = <span class="string">"id"</span>, paramType = <span class="string">"query"</span>, required = <span class="keyword">false</span>),</span><br><span class="line">        <span class="meta">@ApiImplicitParam</span>(name = <span class="string">"page"</span>, value = <span class="string">"page"</span>, paramType = <span class="string">"query"</span>, required = <span class="keyword">false</span>),</span><br><span class="line">        <span class="meta">@ApiImplicitParam</span>(name = <span class="string">"size"</span>, value = <span class="string">"size"</span>, paramType = <span class="string">"query"</span>, required = <span class="keyword">false</span>)&#125;)</span><br><span class="line"><span class="meta">@IgnoreAuth</span></span><br><span class="line"><span class="meta">@PostMapping</span>(value = <span class="string">"index"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">index</span><span class="params">(Integer id,</span></span></span><br><span class="line"><span class="function"><span class="params">                    @RequestParam(value = <span class="string">"page"</span>, defaultValue = <span class="string">"1"</span>)</span> Integer page,</span></span><br><span class="line"><span class="function">                    @<span class="title">RequestParam</span><span class="params">(value = <span class="string">"size"</span>, defaultValue = <span class="string">"10"</span>)</span> Integer size) </span>&#123;</span><br><span class="line">    Map&lt;String, Object&gt; resultObj = <span class="keyword">new</span> HashMap();</span><br><span class="line">    Map params = <span class="keyword">new</span> HashMap();</span><br><span class="line">    params.put(<span class="string">"page"</span>, page);</span><br><span class="line">    params.put(<span class="string">"limit"</span>, size);</span><br><span class="line">    params.put(<span class="string">"sidx"</span>, <span class="string">"sort_order"</span>);</span><br><span class="line">    params.put(<span class="string">"order"</span>, <span class="string">"asc"</span>);</span><br><span class="line">    params.put(<span class="string">"parent_id"</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="comment">//查询列表数据</span></span><br><span class="line">    List&lt;CategoryVo&gt; data = categoryService.queryList(params);</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    CategoryVo currentCategory = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> != id) &#123;</span><br><span class="line">        currentCategory = categoryService.queryObject(id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> == currentCategory &amp;&amp; <span class="keyword">null</span> != data &amp;&amp; data.size() != <span class="number">0</span>) &#123;</span><br><span class="line">        currentCategory = data.get(<span class="number">0</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        currentCategory = <span class="keyword">new</span> CategoryVo();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取子分类数据</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> != currentCategory &amp;&amp; <span class="keyword">null</span> != currentCategory.getId()) &#123;</span><br><span class="line">        params.put(<span class="string">"parent_id"</span>, currentCategory.getId());</span><br><span class="line">        currentCategory.setSubCategoryList(categoryService.queryList(params));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    resultObj.put(<span class="string">"categoryList"</span>, data);</span><br><span class="line">    resultObj.put(<span class="string">"currentCategory"</span>, currentCategory);</span><br><span class="line">    <span class="keyword">return</span> toResponsSuccess(resultObj);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h5><p>ApiCategoryService</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> List&lt;CategoryVo&gt; <span class="title">queryList</span><span class="params">(Map&lt;String, Object&gt; map)</span></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> categoryDao.queryList(map);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="Dao"><a href="#Dao" class="headerlink" title="Dao"></a>Dao</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">List&lt;T&gt; <span class="title">queryList</span><span class="params">(Map&lt;String, Object&gt; map)</span></span>;</span><br></pre></td></tr></table></figure>
<h5 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"queryList"</span> <span class="attr">resultType</span>=<span class="string">"com.platform.entity.CategoryEntity"</span>&gt;</span></span><br><span class="line">		select</span><br><span class="line">    		`id`,</span><br><span class="line">    		`name`,</span><br><span class="line">    		`keywords`,</span><br><span class="line">    		`front_desc`,</span><br><span class="line">    		`parent_id`,</span><br><span class="line">    		`sort_order`,</span><br><span class="line">    		`show_index`,</span><br><span class="line">    		`is_show`,</span><br><span class="line">    		`banner_url`,</span><br><span class="line">    		`icon_url`,</span><br><span class="line">    		`img_url`,</span><br><span class="line">    		`wap_banner_url`,</span><br><span class="line">    		`level`,</span><br><span class="line">    		`type`,</span><br><span class="line">    		`front_name`,</span><br><span class="line">			`is_show` as `show`</span><br><span class="line">		from nideshop_category</span><br><span class="line">		WHERE 1=1</span><br><span class="line">		<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"name != null and name.trim() != ''"</span>&gt;</span></span><br><span class="line">			AND `name` LIKE concat('%',#&#123;name&#125;,'%')</span><br><span class="line">		<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"parentId != null and parentId != ''"</span>&gt;</span></span><br><span class="line">			AND `parent_id` = #&#123;parentId&#125;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"sidx != null and sidx.trim() != ''"</span>&gt;</span></span><br><span class="line">                order by $&#123;sidx&#125; $&#123;order&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">                order by id desc</span><br><span class="line">			<span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"offset != null and limit != null"</span>&gt;</span></span><br><span class="line">			limit #&#123;offset&#125;, #&#123;limit&#125;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="Sql"><a href="#Sql" class="headerlink" title="Sql"></a>Sql</h5><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查询商品分类</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_category t <span class="keyword">where</span> t.parent_id = <span class="number">0</span> <span class="keyword">order</span> <span class="keyword">by</span> show_index <span class="keyword">asc</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_category t <span class="keyword">where</span> t.parent_id = <span class="number">1005000</span> <span class="keyword">order</span> <span class="keyword">by</span> t.show_index <span class="keyword">asc</span> ;</span><br></pre></td></tr></table></figure>
<p><img src="/2020/06/12/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E8%B4%AD%E7%89%A9%E8%BD%A6/02.jpg" alt="02"> </p>
<h3 id="添加商品"><a href="#添加商品" class="headerlink" title="添加商品"></a>添加商品</h3><ul>
<li>进入布艺软装 种类下面，选择 简约知性系列居家地毯<br><img src="/2020/06/12/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E8%B4%AD%E7%89%A9%E8%BD%A6/03.jpg" alt="03"><br><img src="/2020/06/12/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E8%B4%AD%E7%89%A9%E8%BD%A6/04.jpg" alt="04"> </li>
</ul>
<h4 id="前台实现-1"><a href="#前台实现-1" class="headerlink" title="前台实现"></a>前台实现</h4><h5 id="goods-wxml"><a href="#goods-wxml" class="headerlink" title="goods.wxml"></a>goods.wxml</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"bottom-btn"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"l l-collect &#123;&#123; openAttr ? 'back' : ''&#125;&#125;"</span> <span class="attr">bindtap</span>=<span class="string">"closeAttrOrCollect"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">image</span> <span class="attr">class</span>=<span class="string">"icon"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; collectBackImage &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"l l-cart"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">"cart-count"</span>&gt;</span>&#123;&#123;cartGoodsCount&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">image</span> <span class="attr">bindtap</span>=<span class="string">"openCartPage"</span> <span class="attr">class</span>=<span class="string">"icon"</span> <span class="attr">src</span>=<span class="string">"/static/images/ic_menu_shoping_nor.png"</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"c"</span> <span class="attr">bindtap</span>=<span class="string">'buyGoods'</span>&gt;</span>立即购买<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"r"</span> <span class="attr">bindtap</span>=<span class="string">"addToCart"</span>&gt;</span>加入购物车<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="goods-js"><a href="#goods-js" class="headerlink" title="goods.js"></a>goods.js</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加到购物车</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">addToCart: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.data.openAttr == <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="comment">//打开规格选择窗口</span></span><br><span class="line">    <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">      openAttr: !<span class="keyword">this</span>.data.openAttr,</span><br><span class="line">      collectBackImage: <span class="string">"/static/images/detail_back.png"</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//提示选择完整规格</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">this</span>.isCheckedAllSpec()) &#123;</span><br><span class="line">        wx.showToast(&#123;</span><br><span class="line">            title: <span class="string">'请选择完整规格'</span></span><br><span class="line">        &#125;);</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据选中的规格，判断是否有对应的sku信息</span></span><br><span class="line">    <span class="keyword">let</span> checkedProduct = <span class="keyword">this</span>.getCheckedProductItem(<span class="keyword">this</span>.getCheckedSpecKey());</span><br><span class="line">    <span class="keyword">if</span> (!checkedProduct || checkedProduct.length &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">//找不到对应的product信息，提示没有库存</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//验证库存</span></span><br><span class="line">    <span class="keyword">if</span> (checkedProduct.goods_number &lt; <span class="keyword">this</span>.data.number) &#123;</span><br><span class="line">      <span class="comment">//找不到对应的product信息，提示没有库存</span></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加到购物车</span></span><br><span class="line">    util.request(api.CartAdd, &#123; <span class="attr">goodsId</span>: <span class="keyword">this</span>.data.goods.id, <span class="attr">number</span>: <span class="keyword">this</span>.data.number, <span class="attr">productId</span>: checkedProduct[<span class="number">0</span>].id &#125;, <span class="string">'POST'</span>, <span class="string">'application/json'</span>)</span><br><span class="line">      .then(<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> _res = res;</span><br><span class="line">        <span class="keyword">if</span> (_res.errno == <span class="number">0</span>) &#123;</span><br><span class="line">          wx.showToast(&#123;</span><br><span class="line">            title: <span class="string">'添加成功'</span></span><br><span class="line">          &#125;);</span><br><span class="line">          that.setData(&#123;</span><br><span class="line">            openAttr: !that.data.openAttr,</span><br><span class="line">            cartGoodsCount: _res.data.cartTotal.goodsCount</span><br><span class="line">          &#125;);</span><br><span class="line">          <span class="keyword">if</span> (that.data.userHasCollect == <span class="number">1</span>) &#123;</span><br><span class="line">            that.setData(&#123;</span><br><span class="line">              <span class="string">'collectBackImage'</span>: that.data.hasCollectImage</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            that.setData(&#123;</span><br><span class="line">              <span class="string">'collectBackImage'</span>: that.data.noCollectImage</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          wx.showToast(&#123;</span><br><span class="line">            image: <span class="string">'/static/images/icon_error.png'</span>,</span><br><span class="line">            title: _res.errmsg,</span><br><span class="line">            mask: <span class="literal">true</span></span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<h5 id="config-api-1"><a href="#config-api-1" class="headerlink" title="config/api"></a>config/api</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> API_BASE_URL = <span class="string">'http://localhost:8080/platform-framework/api/'</span>;</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  CartAdd: API_BASE_URL + <span class="string">'cart/add'</span>, <span class="comment">// 添加商品到购物车</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="后台实现-1"><a href="#后台实现-1" class="headerlink" title="后台实现"></a>后台实现</h4><h5 id="Controller-1"><a href="#Controller-1" class="headerlink" title="Controller"></a>Controller</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ApiCartController</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 添加商品到购物车</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@ApiOperation</span>(value = <span class="string">"添加商品到购物车"</span>)</span><br><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"add"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">add</span><span class="params">(@LoginUser UserVo loginUser)</span> </span>&#123;</span><br><span class="line">    JSONObject jsonParam = getJsonRequest();</span><br><span class="line">    Integer goodsId = jsonParam.getInteger(<span class="string">"goodsId"</span>);</span><br><span class="line">    Integer productId = jsonParam.getInteger(<span class="string">"productId"</span>);</span><br><span class="line">    Integer number = jsonParam.getInteger(<span class="string">"number"</span>);</span><br><span class="line">    <span class="comment">//判断商品是否可以购买</span></span><br><span class="line">    GoodsVo goodsInfo = goodsService.queryObject(goodsId);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> == goodsInfo || goodsInfo.getIs_delete() == <span class="number">1</span> || goodsInfo.getIs_on_sale() != <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.toResponsObject(<span class="number">400</span>, <span class="string">"商品已下架"</span>, <span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//取得规格的信息,判断规格库存</span></span><br><span class="line">    ProductVo productInfo = productService.queryObject(productId);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> == productInfo || productInfo.getGoods_number() &lt; number) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.toResponsObject(<span class="number">400</span>, <span class="string">"库存不足"</span>, <span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断购物车中是否存在此规格商品</span></span><br><span class="line">    Map cartParam = <span class="keyword">new</span> HashMap();</span><br><span class="line">    cartParam.put(<span class="string">"goods_id"</span>, goodsId);</span><br><span class="line">    cartParam.put(<span class="string">"product_id"</span>, productId);</span><br><span class="line">    cartParam.put(<span class="string">"user_id"</span>, loginUser.getUserId());</span><br><span class="line">    List&lt;CartVo&gt; cartInfoList = cartService.queryList(cartParam);</span><br><span class="line">    CartVo cartInfo = <span class="keyword">null</span> != cartInfoList &amp;&amp; cartInfoList.size() &gt; <span class="number">0</span> ? cartInfoList.get(<span class="number">0</span>) : <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> == cartInfo) &#123;</span><br><span class="line">        <span class="comment">//添加操作</span></span><br><span class="line">        <span class="comment">//添加规格名和值</span></span><br><span class="line">        String[] goodsSepcifitionValue = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> != productInfo.getGoods_specification_ids() &amp;&amp; productInfo.getGoods_specification_ids().length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            Map specificationParam = <span class="keyword">new</span> HashMap();</span><br><span class="line">            String[] idsArray = getSpecificationIdsArray(productInfo.getGoods_specification_ids());</span><br><span class="line">            specificationParam.put(<span class="string">"ids"</span>, idsArray);</span><br><span class="line">            specificationParam.put(<span class="string">"goods_id"</span>, goodsId);</span><br><span class="line">            List&lt;GoodsSpecificationVo&gt; specificationEntities = goodsSpecificationService.queryList(specificationParam);</span><br><span class="line">            goodsSepcifitionValue = <span class="keyword">new</span> String[specificationEntities.size()];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; specificationEntities.size(); i++) &#123;</span><br><span class="line">                goodsSepcifitionValue[i] = specificationEntities.get(i).getValue();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cartInfo = <span class="keyword">new</span> CartVo();</span><br><span class="line"></span><br><span class="line">        cartInfo.setGoods_id(goodsId);</span><br><span class="line">        cartInfo.setProduct_id(productId);</span><br><span class="line">        cartInfo.setGoods_sn(productInfo.getGoods_sn());</span><br><span class="line">        cartInfo.setGoods_name(goodsInfo.getName());</span><br><span class="line">        cartInfo.setList_pic_url(goodsInfo.getList_pic_url());</span><br><span class="line">        cartInfo.setNumber(number);</span><br><span class="line">        cartInfo.setSession_id(<span class="string">"1"</span>);</span><br><span class="line">        cartInfo.setUser_id(loginUser.getUserId());</span><br><span class="line">        cartInfo.setRetail_price(productInfo.getRetail_price());</span><br><span class="line">        cartInfo.setMarket_price(productInfo.getMarket_price());</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> != goodsSepcifitionValue) &#123;</span><br><span class="line">            cartInfo.setGoods_specifition_name_value(StringUtils.join(goodsSepcifitionValue, <span class="string">";"</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        cartInfo.setGoods_specifition_ids(productInfo.getGoods_specification_ids());</span><br><span class="line">        cartInfo.setChecked(<span class="number">1</span>);</span><br><span class="line">        cartService.save(cartInfo);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//如果已经存在购物车中，则数量增加</span></span><br><span class="line">        <span class="keyword">if</span> (productInfo.getGoods_number() &lt; (number + cartInfo.getNumber())) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.toResponsObject(<span class="number">400</span>, <span class="string">"库存不足"</span>, <span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        cartInfo.setNumber(cartInfo.getNumber() + number);</span><br><span class="line">        cartService.update(cartInfo);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> toResponsSuccess(getCart(loginUser));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="Dao-1"><a href="#Dao-1" class="headerlink" title="Dao"></a>Dao</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># 查询商品信息-关联产品表</span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"queryList"</span> <span class="attr">resultType</span>=<span class="string">"com.platform.entity.ProductEntity"</span>&gt;</span></span><br><span class="line">    select</span><br><span class="line">    nideshop_product.id,</span><br><span class="line">    nideshop_product.goods_id,</span><br><span class="line">    nideshop_product.goods_specification_ids,</span><br><span class="line">    nideshop_product.goods_sn,</span><br><span class="line">    nideshop_product.goods_number,</span><br><span class="line">    nideshop_product.retail_price,</span><br><span class="line">    nideshop_product.market_price,</span><br><span class="line">    nideshop_goods.name goods_name</span><br><span class="line">    from nideshop_product</span><br><span class="line">    LEFT JOIN nideshop_goods ON nideshop_product.goods_id = nideshop_goods.id</span><br><span class="line">    WHERE 1=1</span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"goodsId != null and goodsId.trim() != ''"</span>&gt;</span></span><br><span class="line">        AND nideshop_product.goods_id = #&#123;goodsId&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"goodsName != null and goodsName.trim() != ''"</span>&gt;</span></span><br><span class="line">        AND nideshop_goods.name LIKE concat('%',#&#123;goodsName&#125;,'%')</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"sidx != null and sidx.trim() != ''"</span>&gt;</span></span><br><span class="line">            order by $&#123;sidx&#125; $&#123;order&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">            order by nideshop_product.id desc</span><br><span class="line">        <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"offset != null and limit != null"</span>&gt;</span></span><br><span class="line">        limit #&#123;offset&#125;, #&#123;limit&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"># 添加一条商品到购物车</span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span> <span class="attr">parameterType</span>=<span class="string">"com.platform.entity.CartEntity"</span> <span class="attr">useGeneratedKeys</span>=<span class="string">"true"</span> <span class="attr">keyProperty</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">  insert into nideshop_cart</span><br><span class="line">  (</span><br><span class="line">    `user_id`, </span><br><span class="line">    `session_id`, </span><br><span class="line">    `goods_id`, </span><br><span class="line">    `goods_sn`, </span><br><span class="line">    `product_id`, </span><br><span class="line">    `goods_name`, </span><br><span class="line">    `market_price`, </span><br><span class="line">    `retail_price`, </span><br><span class="line">    `number`, </span><br><span class="line">    `goods_specifition_name_value`, </span><br><span class="line">    `goods_specifition_ids`, </span><br><span class="line">    `checked`, </span><br><span class="line">    `list_pic_url`</span><br><span class="line">  )</span><br><span class="line">  values</span><br><span class="line">  (</span><br><span class="line">    #&#123;userId&#125;, </span><br><span class="line">    #&#123;sessionId&#125;, </span><br><span class="line">    #&#123;goodsId&#125;, </span><br><span class="line">    #&#123;goodsSn&#125;, </span><br><span class="line">    #&#123;productId&#125;, </span><br><span class="line">    #&#123;goodsName&#125;, </span><br><span class="line">    #&#123;marketPrice&#125;, </span><br><span class="line">    #&#123;retailPrice&#125;, </span><br><span class="line">    #&#123;number&#125;, </span><br><span class="line">    #&#123;goodsSpecifitionNameValue&#125;, </span><br><span class="line">    #&#123;goodsSpecifitionIds&#125;, </span><br><span class="line">    #&#123;checked&#125;, </span><br><span class="line">    #&#123;listPicUrl&#125;</span><br><span class="line">  )</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="下单"><a href="#下单" class="headerlink" title="下单"></a>下单</h3><p><img src="/2020/06/12/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E8%B4%AD%E7%89%A9%E8%BD%A6/05.jpg" alt="05"></p>
<h4 id="前台实现-2"><a href="#前台实现-2" class="headerlink" title="前台实现"></a>前台实现</h4><h5 id="cart-wxml"><a href="#cart-wxml" class="headerlink" title="cart.wxml"></a>cart.wxml</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"cart-bottom"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"checkbox &#123;&#123;checkedAllStatus ? 'checked' : ''&#125;&#125;"</span> <span class="attr">bindtap</span>=<span class="string">"checkedAll"</span>&gt;</span>全选(&#123;&#123;cartTotal.checkedGoodsCount&#125;&#125;)<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"total"</span>&gt;</span>&#123;&#123;!isEditCart ? '￥'+cartTotal.checkedGoodsAmount : ''&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"delete"</span> <span class="attr">bindtap</span>=<span class="string">"editCart"</span>&gt;</span>&#123;&#123;!isEditCart ? '编辑' : '完成'&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"checkout"</span> <span class="attr">bindtap</span>=<span class="string">"deleteCart"</span> <span class="attr">wx:if</span>=<span class="string">"&#123;&#123;isEditCart&#125;&#125;"</span>&gt;</span>删除所选<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"checkout"</span> <span class="attr">bindtap</span>=<span class="string">"checkoutOrder"</span> <span class="attr">wx:if</span>=<span class="string">"&#123;&#123;!isEditCart&#125;&#125;"</span>&gt;</span>下单<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="cart-js"><a href="#cart-js" class="headerlink" title="cart.js"></a>cart.js</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">checkoutOrder: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">//获取已选择的商品</span></span><br><span class="line">  <span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> checkedGoods = <span class="keyword">this</span>.data.cartGoods.filter(<span class="function"><span class="keyword">function</span> (<span class="params">element, index, array</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (element.checked == <span class="literal">true</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (checkedGoods.length &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 去付款页面</span></span><br><span class="line">  wx.navigateTo(&#123;</span><br><span class="line">    url: <span class="string">'../shopping/checkout/checkout'</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<h3 id="付款"><a href="#付款" class="headerlink" title="付款"></a>付款</h3><p>付款页面需要调用接口查询地址信息和商品信息。<br><img src="/2020/06/12/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E8%B4%AD%E7%89%A9%E8%BD%A6/06.jpg" alt="06"></p>
<h4 id="前台实现-3"><a href="#前台实现-3" class="headerlink" title="前台实现"></a>前台实现</h4><h5 id="checkout-js"><a href="#checkout-js" class="headerlink" title="checkout.js"></a>checkout.js</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">submitOrder: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.data.addressId &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">    util.showErrorToast(<span class="string">'请选择收货地址'</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  util.request(api.OrderSubmit, &#123; <span class="attr">addressId</span>: <span class="keyword">this</span>.data.addressId, <span class="attr">couponId</span>: <span class="keyword">this</span>.data.couponId, <span class="attr">type</span>: <span class="keyword">this</span>.data.buyType &#125;, <span class="string">'POST'</span>, <span class="string">'application/json'</span>).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (res.errno === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> orderId = res.data.orderInfo.id;</span><br><span class="line">      <span class="comment">// 提交订单成功后调支付接口</span></span><br><span class="line">      pay.payOrder(<span class="built_in">parseInt</span>(orderId)).then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        wx.redirectTo(&#123;</span><br><span class="line">          url: <span class="string">'/pages/payResult/payResult?status=1&amp;orderId='</span> + orderId</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;).catch(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">        wx.redirectTo(&#123;</span><br><span class="line">          url: <span class="string">'/pages/payResult/payResult?status=0&amp;orderId='</span> + orderId</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      util.showErrorToast(<span class="string">'下单失败'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="pay-js"><a href="#pay-js" class="headerlink" title="pay.js"></a>pay.js</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 订单支付，入参：订单id</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">payOrder</span>(<span class="params">orderId</span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">  util.request(api.PayPrepayId, &#123;</span><br><span class="line">    orderId: orderId</span><br><span class="line">  &#125;).then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (res.errno === <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> payParam = res.data;</span><br><span class="line">      wx.requestPayment(&#123;</span><br><span class="line">        <span class="string">'timeStamp'</span>: payParam.timeStamp,</span><br><span class="line">        <span class="string">'nonceStr'</span>: payParam.nonceStr,</span><br><span class="line">        <span class="string">'package'</span>: payParam.package,</span><br><span class="line">        <span class="string">'signType'</span>: payParam.signType,</span><br><span class="line">        <span class="string">'paySign'</span>: payParam.paySign,</span><br><span class="line">        <span class="string">'success'</span>: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">          resolve(res);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'fail'</span>: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">          reject(res);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'complete'</span>: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">          reject(res);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      reject(res);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="config-api-js"><a href="#config-api-js" class="headerlink" title="config/api.js"></a>config/api.js</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> API_BASE_URL = <span class="string">'http://localhost:8080/platform-framework/api/'</span>;</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  OrderSubmit: API_BASE_URL + <span class="string">'order/submit'</span>, <span class="comment">// 提交订单</span></span><br><span class="line">  PayPrepayId: API_BASE_URL + <span class="string">'pay/prepay'</span>, <span class="comment">//获取微信统一下单prepay_id</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="后台实现-2"><a href="#后台实现-2" class="headerlink" title="后台实现"></a>后台实现</h4><h5 id="Controller-2"><a href="#Controller-2" class="headerlink" title="Controller"></a>Controller</h5><p>ApiOrderController</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 获取订单列表</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@ApiOperation</span>(value = <span class="string">"订单提交"</span>)</span><br><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"submit"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">submit</span><span class="params">(@LoginUser UserVo loginUser)</span> </span>&#123;</span><br><span class="line">    Map resultObj = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        resultObj = orderService.submit(getJsonRequest(), loginUser);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> != resultObj) &#123;</span><br><span class="line">            <span class="keyword">return</span> toResponsObject(MapUtils.getInteger(resultObj, <span class="string">"errno"</span>), MapUtils.getString(resultObj, <span class="string">"errmsg"</span>), resultObj.get(<span class="string">"data"</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> toResponsFail(<span class="string">"提交失败"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 获取支付的请求参数</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@ApiOperation</span>(value = <span class="string">"获取支付的请求参数"</span>)</span><br><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"prepay"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">payPrepay</span><span class="params">(@LoginUser UserVo loginUser, Integer orderId)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    OrderVo orderInfo = orderService.queryObject(orderId);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> == orderInfo) &#123;</span><br><span class="line">        <span class="keyword">return</span> toResponsObject(<span class="number">400</span>, <span class="string">"订单已取消"</span>, <span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (orderInfo.getPay_status() != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> toResponsObject(<span class="number">400</span>, <span class="string">"订单已支付，请不要重复操作"</span>, <span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    String nonceStr = CharUtil.getRandomString(<span class="number">32</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=7_7&amp;index=3</span></span><br><span class="line">    Map&lt;Object, Object&gt; resultObj = <span class="keyword">new</span> TreeMap();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Map&lt;Object, Object&gt; parame = <span class="keyword">new</span> TreeMap&lt;Object, Object&gt;();</span><br><span class="line">        parame.put(<span class="string">"appid"</span>, ResourceUtil.getConfigByName(<span class="string">"wx.appId"</span>));</span><br><span class="line">        <span class="comment">// 商家账号。</span></span><br><span class="line">        parame.put(<span class="string">"mch_id"</span>, ResourceUtil.getConfigByName(<span class="string">"wx.mchId"</span>));</span><br><span class="line">        String randomStr = CharUtil.getRandomNum(<span class="number">18</span>).toUpperCase();</span><br><span class="line">        <span class="comment">// 随机字符串</span></span><br><span class="line">        parame.put(<span class="string">"nonce_str"</span>, randomStr);</span><br><span class="line">        <span class="comment">// 商户订单编号</span></span><br><span class="line">        parame.put(<span class="string">"out_trade_no"</span>, orderInfo.getOrder_sn());</span><br><span class="line">        Map orderGoodsParam = <span class="keyword">new</span> HashMap();</span><br><span class="line">        orderGoodsParam.put(<span class="string">"order_id"</span>, orderId);</span><br><span class="line">        <span class="comment">// 商品描述</span></span><br><span class="line">        parame.put(<span class="string">"body"</span>, <span class="string">"超市-支付"</span>);</span><br><span class="line">        <span class="comment">//订单的商品</span></span><br><span class="line">        List&lt;OrderGoodsVo&gt; orderGoods = orderGoodsService.queryList(orderGoodsParam);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> != orderGoods) &#123;</span><br><span class="line">            String body = <span class="string">"超市-"</span>;</span><br><span class="line">            <span class="keyword">for</span> (OrderGoodsVo goodsVo : orderGoods) &#123;</span><br><span class="line">                body = body + goodsVo.getGoods_name() + <span class="string">"、"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (body.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                body = body.substring(<span class="number">0</span>, body.length() - <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 商品描述</span></span><br><span class="line">            parame.put(<span class="string">"body"</span>, body);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//支付金额</span></span><br><span class="line">        parame.put(<span class="string">"total_fee"</span>, orderInfo.getActual_price().multiply(<span class="keyword">new</span> BigDecimal(<span class="number">100</span>)).intValue());</span><br><span class="line">        <span class="comment">// 回调地址</span></span><br><span class="line">        parame.put(<span class="string">"notify_url"</span>, ResourceUtil.getConfigByName(<span class="string">"wx.notifyUrl"</span>));</span><br><span class="line">        <span class="comment">// 交易类型APP</span></span><br><span class="line">        parame.put(<span class="string">"trade_type"</span>, ResourceUtil.getConfigByName(<span class="string">"wx.tradeType"</span>));</span><br><span class="line">        parame.put(<span class="string">"spbill_create_ip"</span>, getClientIp());</span><br><span class="line">        parame.put(<span class="string">"openid"</span>, loginUser.getWeixin_openid());</span><br><span class="line">        String sign = WechatUtil.arraySign(parame, ResourceUtil.getConfigByName(<span class="string">"wx.paySignKey"</span>));</span><br><span class="line">        <span class="comment">// 数字签证</span></span><br><span class="line">        parame.put(<span class="string">"sign"</span>, sign);</span><br><span class="line"></span><br><span class="line">        String xml = MapUtils.convertMap2Xml(parame);</span><br><span class="line">        logger.info(<span class="string">"xml:"</span> + xml);</span><br><span class="line">        Map&lt;String, Object&gt; resultUn = XmlUtil.xmlStrToMap(WechatUtil.requestOnce(ResourceUtil.getConfigByName(<span class="string">"wx.uniformorder"</span>), xml));</span><br><span class="line">        <span class="comment">// 响应报文</span></span><br><span class="line">        String return_code = MapUtils.getString(<span class="string">"return_code"</span>, resultUn);</span><br><span class="line">        String return_msg = MapUtils.getString(<span class="string">"return_msg"</span>, resultUn);</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="keyword">if</span> (return_code.equalsIgnoreCase(<span class="string">"FAIL"</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> toResponsFail(<span class="string">"支付失败,"</span> + return_msg);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (return_code.equalsIgnoreCase(<span class="string">"SUCCESS"</span>)) &#123;</span><br><span class="line">            <span class="comment">// 返回数据</span></span><br><span class="line">            String result_code = MapUtils.getString(<span class="string">"result_code"</span>, resultUn);</span><br><span class="line">            String err_code_des = MapUtils.getString(<span class="string">"err_code_des"</span>, resultUn);</span><br><span class="line">            <span class="keyword">if</span> (result_code.equalsIgnoreCase(<span class="string">"FAIL"</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> toResponsFail(<span class="string">"支付失败,"</span> + err_code_des);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (result_code.equalsIgnoreCase(<span class="string">"SUCCESS"</span>)) &#123;</span><br><span class="line">                String prepay_id = MapUtils.getString(<span class="string">"prepay_id"</span>, resultUn);</span><br><span class="line">                <span class="comment">// 先生成paySign 参考https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=7_7&amp;index=5</span></span><br><span class="line">                resultObj.put(<span class="string">"appId"</span>, ResourceUtil.getConfigByName(<span class="string">"wx.appId"</span>));</span><br><span class="line">                resultObj.put(<span class="string">"timeStamp"</span>, DateUtils.timeToStr(System.currentTimeMillis() / <span class="number">1000</span>, DateUtils.DATE_TIME_PATTERN));</span><br><span class="line">                resultObj.put(<span class="string">"nonceStr"</span>, nonceStr);</span><br><span class="line">                resultObj.put(<span class="string">"package"</span>, <span class="string">"prepay_id="</span> + prepay_id);</span><br><span class="line">                resultObj.put(<span class="string">"signType"</span>, <span class="string">"MD5"</span>);</span><br><span class="line">                String paySign = WechatUtil.arraySign(resultObj, ResourceUtil.getConfigByName(<span class="string">"wx.paySignKey"</span>));</span><br><span class="line">                resultObj.put(<span class="string">"paySign"</span>, paySign);</span><br><span class="line">                <span class="comment">// 业务处理</span></span><br><span class="line">                orderInfo.setPay_id(prepay_id);</span><br><span class="line">                <span class="comment">// 付款中</span></span><br><span class="line">                orderInfo.setPay_status(<span class="number">1</span>);</span><br><span class="line">                orderService.update(orderInfo);</span><br><span class="line">                <span class="keyword">return</span> toResponsObject(<span class="number">0</span>, <span class="string">"微信统一订单下单成功"</span>, resultObj);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> toResponsFail(<span class="string">"下单失败,error="</span> + e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> toResponsFail(<span class="string">"下单失败"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ApiPayController</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 获取支付的请求参数</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">@ApiOperation</span>(value = <span class="string">"获取支付的请求参数"</span>)</span><br><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"prepay"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">payPrepay</span><span class="params">(@LoginUser UserVo loginUser, Integer orderId)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    OrderVo orderInfo = orderService.queryObject(orderId);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> == orderInfo) &#123;</span><br><span class="line">        <span class="keyword">return</span> toResponsObject(<span class="number">400</span>, <span class="string">"订单已取消"</span>, <span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (orderInfo.getPay_status() != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> toResponsObject(<span class="number">400</span>, <span class="string">"订单已支付，请不要重复操作"</span>, <span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    String nonceStr = CharUtil.getRandomString(<span class="number">32</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=7_7&amp;index=3</span></span><br><span class="line">    Map&lt;Object, Object&gt; resultObj = <span class="keyword">new</span> TreeMap();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Map&lt;Object, Object&gt; parame = <span class="keyword">new</span> TreeMap&lt;Object, Object&gt;();</span><br><span class="line">        parame.put(<span class="string">"appid"</span>, ResourceUtil.getConfigByName(<span class="string">"wx.appId"</span>));</span><br><span class="line">        <span class="comment">// 商家账号。</span></span><br><span class="line">        parame.put(<span class="string">"mch_id"</span>, ResourceUtil.getConfigByName(<span class="string">"wx.mchId"</span>));</span><br><span class="line">        String randomStr = CharUtil.getRandomNum(<span class="number">18</span>).toUpperCase();</span><br><span class="line">        <span class="comment">// 随机字符串</span></span><br><span class="line">        parame.put(<span class="string">"nonce_str"</span>, randomStr);</span><br><span class="line">        <span class="comment">// 商户订单编号</span></span><br><span class="line">        parame.put(<span class="string">"out_trade_no"</span>, orderInfo.getOrder_sn());</span><br><span class="line">        Map orderGoodsParam = <span class="keyword">new</span> HashMap();</span><br><span class="line">        orderGoodsParam.put(<span class="string">"order_id"</span>, orderId);</span><br><span class="line">        <span class="comment">// 商品描述</span></span><br><span class="line">        parame.put(<span class="string">"body"</span>, <span class="string">"超市-支付"</span>);</span><br><span class="line">        <span class="comment">//订单的商品</span></span><br><span class="line">        List&lt;OrderGoodsVo&gt; orderGoods = orderGoodsService.queryList(orderGoodsParam);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> != orderGoods) &#123;</span><br><span class="line">            String body = <span class="string">"超市-"</span>;</span><br><span class="line">            <span class="keyword">for</span> (OrderGoodsVo goodsVo : orderGoods) &#123;</span><br><span class="line">                body = body + goodsVo.getGoods_name() + <span class="string">"、"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (body.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                body = body.substring(<span class="number">0</span>, body.length() - <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 商品描述</span></span><br><span class="line">            parame.put(<span class="string">"body"</span>, body);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//支付金额</span></span><br><span class="line">        parame.put(<span class="string">"total_fee"</span>, orderInfo.getActual_price().multiply(<span class="keyword">new</span> BigDecimal(<span class="number">100</span>)).intValue());</span><br><span class="line">        <span class="comment">// 回调地址</span></span><br><span class="line">        parame.put(<span class="string">"notify_url"</span>, ResourceUtil.getConfigByName(<span class="string">"wx.notifyUrl"</span>));</span><br><span class="line">        <span class="comment">// 交易类型APP</span></span><br><span class="line">        parame.put(<span class="string">"trade_type"</span>, ResourceUtil.getConfigByName(<span class="string">"wx.tradeType"</span>));</span><br><span class="line">        parame.put(<span class="string">"spbill_create_ip"</span>, getClientIp());</span><br><span class="line">        parame.put(<span class="string">"openid"</span>, loginUser.getWeixin_openid());</span><br><span class="line">        String sign = WechatUtil.arraySign(parame, ResourceUtil.getConfigByName(<span class="string">"wx.paySignKey"</span>));</span><br><span class="line">        <span class="comment">// 数字签证</span></span><br><span class="line">        parame.put(<span class="string">"sign"</span>, sign);</span><br><span class="line"></span><br><span class="line">        String xml = MapUtils.convertMap2Xml(parame);</span><br><span class="line">        logger.info(<span class="string">"xml:"</span> + xml);</span><br><span class="line">        Map&lt;String, Object&gt; resultUn = XmlUtil.xmlStrToMap(WechatUtil.requestOnce(ResourceUtil.getConfigByName(<span class="string">"wx.uniformorder"</span>), xml));</span><br><span class="line">        <span class="comment">// 响应报文</span></span><br><span class="line">        String return_code = MapUtils.getString(<span class="string">"return_code"</span>, resultUn);</span><br><span class="line">        String return_msg = MapUtils.getString(<span class="string">"return_msg"</span>, resultUn);</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="keyword">if</span> (return_code.equalsIgnoreCase(<span class="string">"FAIL"</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> toResponsFail(<span class="string">"支付失败,"</span> + return_msg);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (return_code.equalsIgnoreCase(<span class="string">"SUCCESS"</span>)) &#123;</span><br><span class="line">            <span class="comment">// 返回数据</span></span><br><span class="line">            String result_code = MapUtils.getString(<span class="string">"result_code"</span>, resultUn);</span><br><span class="line">            String err_code_des = MapUtils.getString(<span class="string">"err_code_des"</span>, resultUn);</span><br><span class="line">            <span class="keyword">if</span> (result_code.equalsIgnoreCase(<span class="string">"FAIL"</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> toResponsFail(<span class="string">"支付失败,"</span> + err_code_des);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (result_code.equalsIgnoreCase(<span class="string">"SUCCESS"</span>)) &#123;</span><br><span class="line">                String prepay_id = MapUtils.getString(<span class="string">"prepay_id"</span>, resultUn);</span><br><span class="line">                <span class="comment">// 先生成paySign 参考https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=7_7&amp;index=5</span></span><br><span class="line">                resultObj.put(<span class="string">"appId"</span>, ResourceUtil.getConfigByName(<span class="string">"wx.appId"</span>));</span><br><span class="line">                resultObj.put(<span class="string">"timeStamp"</span>, DateUtils.timeToStr(System.currentTimeMillis() / <span class="number">1000</span>, DateUtils.DATE_TIME_PATTERN));</span><br><span class="line">                resultObj.put(<span class="string">"nonceStr"</span>, nonceStr);</span><br><span class="line">                resultObj.put(<span class="string">"package"</span>, <span class="string">"prepay_id="</span> + prepay_id);</span><br><span class="line">                resultObj.put(<span class="string">"signType"</span>, <span class="string">"MD5"</span>);</span><br><span class="line">                String paySign = WechatUtil.arraySign(resultObj, ResourceUtil.getConfigByName(<span class="string">"wx.paySignKey"</span>));</span><br><span class="line">                resultObj.put(<span class="string">"paySign"</span>, paySign);</span><br><span class="line">                <span class="comment">// 业务处理</span></span><br><span class="line">                orderInfo.setPay_id(prepay_id);</span><br><span class="line">                <span class="comment">// 付款中</span></span><br><span class="line">                orderInfo.setPay_status(<span class="number">1</span>);</span><br><span class="line">                orderService.update(orderInfo);</span><br><span class="line">                <span class="keyword">return</span> toResponsObject(<span class="number">0</span>, <span class="string">"微信统一订单下单成功"</span>, resultObj);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> toResponsFail(<span class="string">"下单失败,error="</span> + e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> toResponsFail(<span class="string">"下单失败"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="Service-1"><a href="#Service-1" class="headerlink" title="Service"></a>Service</h5><p>ApiOrderService</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Transactional</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">submit</span><span class="params">(JSONObject jsonParam, UserVo loginUser)</span> </span>&#123;</span><br><span class="line">      Map&lt;String, Object&gt; resultObj = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line"></span><br><span class="line">      Integer couponId = jsonParam.getInteger(<span class="string">"couponId"</span>);</span><br><span class="line">      String type = jsonParam.getString(<span class="string">"type"</span>);</span><br><span class="line">      String postscript = jsonParam.getString(<span class="string">"postscript"</span>);</span><br><span class="line"><span class="comment">//        AddressVo addressVo = jsonParam.getObject("checkedAddress",AddressVo.class);</span></span><br><span class="line">      AddressVo addressVo = apiAddressMapper.queryObject(jsonParam.getInteger(<span class="string">"addressId"</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      Integer freightPrice = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// * 获取要购买的商品</span></span><br><span class="line">      List&lt;CartVo&gt; checkedGoodsList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">      BigDecimal goodsTotalPrice;</span><br><span class="line">      <span class="keyword">if</span> (type.equals(<span class="string">"cart"</span>)) &#123;</span><br><span class="line">          Map&lt;String, Object&gt; param = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">          param.put(<span class="string">"user_id"</span>, loginUser.getUserId());</span><br><span class="line">          param.put(<span class="string">"session_id"</span>, <span class="number">1</span>);</span><br><span class="line">          param.put(<span class="string">"checked"</span>, <span class="number">1</span>);</span><br><span class="line">          checkedGoodsList = apiCartMapper.queryList(param);</span><br><span class="line">          <span class="keyword">if</span> (<span class="keyword">null</span> == checkedGoodsList) &#123;</span><br><span class="line">              resultObj.put(<span class="string">"errno"</span>, <span class="number">400</span>);</span><br><span class="line">              resultObj.put(<span class="string">"errmsg"</span>, <span class="string">"请选择商品"</span>);</span><br><span class="line">              <span class="keyword">return</span> resultObj;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">//统计商品总价</span></span><br><span class="line">          goodsTotalPrice = <span class="keyword">new</span> BigDecimal(<span class="number">0.00</span>);</span><br><span class="line">          <span class="keyword">for</span> (CartVo cartItem : checkedGoodsList) &#123;</span><br><span class="line">              goodsTotalPrice = goodsTotalPrice.add(cartItem.getRetail_price().multiply(<span class="keyword">new</span> BigDecimal(cartItem.getNumber())));</span><br><span class="line">          &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          BuyGoodsVo goodsVo = (BuyGoodsVo) J2CacheUtils.get(J2CacheUtils.SHOP_CACHE_NAME, <span class="string">"goods"</span> + loginUser.getUserId());</span><br><span class="line">          ProductVo productInfo = productService.queryObject(goodsVo.getProductId());</span><br><span class="line">          <span class="comment">//计算订单的费用</span></span><br><span class="line">          <span class="comment">//商品总价</span></span><br><span class="line">          goodsTotalPrice = productInfo.getRetail_price().multiply(<span class="keyword">new</span> BigDecimal(goodsVo.getNumber()));</span><br><span class="line"></span><br><span class="line">          CartVo cartVo = <span class="keyword">new</span> CartVo();</span><br><span class="line">          BeanUtils.copyProperties(productInfo, cartVo);</span><br><span class="line">          cartVo.setNumber(goodsVo.getNumber());</span><br><span class="line">          cartVo.setProduct_id(goodsVo.getProductId());</span><br><span class="line">          checkedGoodsList.add(cartVo);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="comment">//获取订单使用的优惠券</span></span><br><span class="line">      BigDecimal couponPrice = <span class="keyword">new</span> BigDecimal(<span class="number">0.00</span>);</span><br><span class="line">      CouponVo couponVo = <span class="keyword">null</span>;</span><br><span class="line">      <span class="keyword">if</span> (couponId != <span class="keyword">null</span> &amp;&amp; couponId != <span class="number">0</span>) &#123;</span><br><span class="line">          couponVo = apiCouponMapper.getUserCoupon(couponId);</span><br><span class="line">          <span class="keyword">if</span> (couponVo != <span class="keyword">null</span> &amp;&amp; couponVo.getCoupon_status() == <span class="number">1</span>) &#123;</span><br><span class="line">              couponPrice = couponVo.getType_money();</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//订单价格计算</span></span><br><span class="line">      BigDecimal orderTotalPrice = goodsTotalPrice.add(<span class="keyword">new</span> BigDecimal(freightPrice)); <span class="comment">//订单的总价</span></span><br><span class="line"></span><br><span class="line">      BigDecimal actualPrice = orderTotalPrice.subtract(couponPrice);  <span class="comment">//减去其它支付的金额后，要实际支付的金额</span></span><br><span class="line"></span><br><span class="line">      Long currentTime = System.currentTimeMillis() / <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//</span></span><br><span class="line">      OrderVo orderInfo = <span class="keyword">new</span> OrderVo();</span><br><span class="line">      orderInfo.setOrder_sn(CommonUtil.generateOrderNumber());</span><br><span class="line">      orderInfo.setUser_id(loginUser.getUserId());</span><br><span class="line">      <span class="comment">//收货地址和运费</span></span><br><span class="line">      orderInfo.setConsignee(addressVo.getUserName());</span><br><span class="line">      orderInfo.setMobile(addressVo.getTelNumber());</span><br><span class="line">      orderInfo.setCountry(addressVo.getNationalCode());</span><br><span class="line">      orderInfo.setProvince(addressVo.getProvinceName());</span><br><span class="line">      orderInfo.setCity(addressVo.getCityName());</span><br><span class="line">      orderInfo.setDistrict(addressVo.getCountyName());</span><br><span class="line">      orderInfo.setAddress(addressVo.getDetailInfo());</span><br><span class="line">      <span class="comment">//</span></span><br><span class="line">      orderInfo.setFreight_price(freightPrice);</span><br><span class="line">      <span class="comment">//留言</span></span><br><span class="line">      orderInfo.setPostscript(postscript);</span><br><span class="line">      <span class="comment">//使用的优惠券</span></span><br><span class="line">      orderInfo.setCoupon_id(couponId);</span><br><span class="line">      orderInfo.setCoupon_price(couponPrice);</span><br><span class="line">      orderInfo.setAdd_time(<span class="keyword">new</span> Date());</span><br><span class="line">      orderInfo.setGoods_price(goodsTotalPrice);</span><br><span class="line">      orderInfo.setOrder_price(orderTotalPrice);</span><br><span class="line">      orderInfo.setActual_price(actualPrice);</span><br><span class="line">      <span class="comment">// 待付款</span></span><br><span class="line">      orderInfo.setOrder_status(<span class="number">0</span>);</span><br><span class="line">      orderInfo.setShipping_status(<span class="number">0</span>);</span><br><span class="line">      orderInfo.setPay_status(<span class="number">0</span>);</span><br><span class="line">      orderInfo.setShipping_id(<span class="number">0</span>);</span><br><span class="line">      orderInfo.setShipping_fee(<span class="keyword">new</span> BigDecimal(<span class="number">0</span>));</span><br><span class="line">      orderInfo.setIntegral(<span class="number">0</span>);</span><br><span class="line">      orderInfo.setIntegral_money(<span class="keyword">new</span> BigDecimal(<span class="number">0</span>));</span><br><span class="line">      <span class="keyword">if</span> (type.equals(<span class="string">"cart"</span>)) &#123;</span><br><span class="line">          orderInfo.setOrder_type(<span class="string">"1"</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          orderInfo.setOrder_type(<span class="string">"4"</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//开启事务，插入订单信息和订单商品</span></span><br><span class="line">      apiOrderMapper.save(orderInfo);</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">null</span> == orderInfo.getId()) &#123;</span><br><span class="line">          resultObj.put(<span class="string">"errno"</span>, <span class="number">1</span>);</span><br><span class="line">          resultObj.put(<span class="string">"errmsg"</span>, <span class="string">"订单提交失败"</span>);</span><br><span class="line">          <span class="keyword">return</span> resultObj;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//统计商品总价</span></span><br><span class="line">      List&lt;OrderGoodsVo&gt; orderGoodsData = <span class="keyword">new</span> ArrayList&lt;OrderGoodsVo&gt;();</span><br><span class="line">      <span class="keyword">for</span> (CartVo goodsItem : checkedGoodsList) &#123;</span><br><span class="line">          OrderGoodsVo orderGoodsVo = <span class="keyword">new</span> OrderGoodsVo();</span><br><span class="line">          orderGoodsVo.setOrder_id(orderInfo.getId());</span><br><span class="line">          orderGoodsVo.setGoods_id(goodsItem.getGoods_id());</span><br><span class="line">          orderGoodsVo.setGoods_sn(goodsItem.getGoods_sn());</span><br><span class="line">          orderGoodsVo.setProduct_id(goodsItem.getProduct_id());</span><br><span class="line">          orderGoodsVo.setGoods_name(goodsItem.getGoods_name());</span><br><span class="line">          orderGoodsVo.setList_pic_url(goodsItem.getList_pic_url());</span><br><span class="line">          orderGoodsVo.setMarket_price(goodsItem.getMarket_price());</span><br><span class="line">          orderGoodsVo.setRetail_price(goodsItem.getRetail_price());</span><br><span class="line">          orderGoodsVo.setNumber(goodsItem.getNumber());</span><br><span class="line">          orderGoodsVo.setGoods_specifition_name_value(goodsItem.getGoods_specifition_name_value());</span><br><span class="line">          orderGoodsVo.setGoods_specifition_ids(goodsItem.getGoods_specifition_ids());</span><br><span class="line">          orderGoodsData.add(orderGoodsVo);</span><br><span class="line">          apiOrderGoodsMapper.save(orderGoodsVo);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//清空已购买的商品</span></span><br><span class="line">      apiCartMapper.deleteByCart(loginUser.getUserId(), <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">      resultObj.put(<span class="string">"errno"</span>, <span class="number">0</span>);</span><br><span class="line">      resultObj.put(<span class="string">"errmsg"</span>, <span class="string">"订单提交成功"</span>);</span><br><span class="line">      <span class="comment">//</span></span><br><span class="line">      Map&lt;String, OrderVo&gt; orderInfoMap = <span class="keyword">new</span> HashMap&lt;String, OrderVo&gt;();</span><br><span class="line">      orderInfoMap.put(<span class="string">"orderInfo"</span>, orderInfo);</span><br><span class="line">      <span class="comment">//</span></span><br><span class="line">      resultObj.put(<span class="string">"data"</span>, orderInfoMap);</span><br><span class="line">      <span class="comment">// 优惠券标记已用</span></span><br><span class="line">      <span class="keyword">if</span> (couponVo != <span class="keyword">null</span> &amp;&amp; couponVo.getCoupon_status() == <span class="number">1</span>) &#123;</span><br><span class="line">          couponVo.setCoupon_status(<span class="number">2</span>);</span><br><span class="line">          apiCouponMapper.updateUserCoupon(couponVo);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> resultObj;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h5 id="Dao-2"><a href="#Dao-2" class="headerlink" title="Dao"></a>Dao</h5><p>OrderDao.xml 保存订单实体</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"save"</span> <span class="attr">parameterType</span>=<span class="string">"com.platform.entity.OrderEntity"</span> <span class="attr">useGeneratedKeys</span>=<span class="string">"true"</span> <span class="attr">keyProperty</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">  insert into nideshop_order</span><br><span class="line">  (</span><br><span class="line">    `order_sn`, </span><br><span class="line">    `user_id`, </span><br><span class="line">    `order_status`, </span><br><span class="line">    `shipping_status`, </span><br><span class="line">    `pay_status`, </span><br><span class="line">    `consignee`, </span><br><span class="line">    `country`, </span><br><span class="line">    `province`, </span><br><span class="line">    `city`, </span><br><span class="line">    `district`,</span><br><span class="line">    `address`, </span><br><span class="line">    `mobile`, </span><br><span class="line">    `postscript`, </span><br><span class="line">    `shipping_id`, </span><br><span class="line">    `shipping_name`,</span><br><span class="line">    `shipping_no`,</span><br><span class="line">    `pay_id`, </span><br><span class="line">    `pay_name`, </span><br><span class="line">    `shipping_fee`, </span><br><span class="line">    `actual_price`, </span><br><span class="line">    `integral`, </span><br><span class="line">    `integral_money`, </span><br><span class="line">    `order_price`, </span><br><span class="line">    `goods_price`, </span><br><span class="line">    `add_time`, </span><br><span class="line">    `confirm_time`, </span><br><span class="line">    `pay_time`, </span><br><span class="line">    `freight_price`, </span><br><span class="line">    `coupon_id`, </span><br><span class="line">    `parent_id`, </span><br><span class="line">    `coupon_price`, </span><br><span class="line">    `callback_status`,</span><br><span class="line">    `order_type`</span><br><span class="line">  )</span><br><span class="line">  values</span><br><span class="line">  (</span><br><span class="line">    #&#123;orderSn&#125;, </span><br><span class="line">    #&#123;userId&#125;, </span><br><span class="line">    #&#123;orderStatus&#125;, </span><br><span class="line">    #&#123;shippingStatus&#125;, </span><br><span class="line">    #&#123;payStatus&#125;, </span><br><span class="line">    #&#123;consignee&#125;, </span><br><span class="line">    #&#123;country&#125;, </span><br><span class="line">    #&#123;province&#125;, </span><br><span class="line">    #&#123;city&#125;, </span><br><span class="line">    #&#123;district&#125;, </span><br><span class="line">    #&#123;address&#125;, </span><br><span class="line">    #&#123;mobile&#125;, </span><br><span class="line">    #&#123;postscript&#125;, </span><br><span class="line">    #&#123;shippingId&#125;, </span><br><span class="line">    #&#123;shippingName&#125;,</span><br><span class="line">    #&#123;shippingNo&#125;,</span><br><span class="line">    #&#123;payId&#125;, </span><br><span class="line">    #&#123;payName&#125;, </span><br><span class="line">    #&#123;shippingFee&#125;, </span><br><span class="line">    #&#123;actualPrice&#125;, </span><br><span class="line">    #&#123;integral&#125;, </span><br><span class="line">    #&#123;integralMoney&#125;, </span><br><span class="line">    #&#123;orderPrice&#125;, </span><br><span class="line">    #&#123;goodsPrice&#125;, </span><br><span class="line">    #&#123;addTime&#125;, </span><br><span class="line">    #&#123;confirmTime&#125;, </span><br><span class="line">    #&#123;payTime&#125;, </span><br><span class="line">    #&#123;freightPrice&#125;, </span><br><span class="line">    #&#123;couponId&#125;, </span><br><span class="line">    #&#123;parentId&#125;, </span><br><span class="line">    #&#123;couponPrice&#125;, </span><br><span class="line">    #&#123;callbackStatus&#125;,</span><br><span class="line">    #&#123;orderType&#125;</span><br><span class="line">  )</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="相关Sql"><a href="#相关Sql" class="headerlink" title="相关Sql"></a>相关Sql</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">######################################################</span><br><span class="line">################# 商品相关查询 #######################</span><br><span class="line">######################################################</span><br><span class="line"># 查询商品</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_goods;</span><br><span class="line"># 热门商品</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_goods t where t.is_hot = <span class="string">'1'</span> and t.is_delete = <span class="string">'0'</span>;</span><br><span class="line"># 查询渠道</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_channel;</span><br><span class="line"># 查询主题</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_topic;</span><br><span class="line"># 查询品牌</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_brand;</span><br><span class="line"># 查询品牌</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_brand;</span><br><span class="line"># 查询广告位</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_ad;</span><br><span class="line"></span><br><span class="line"># 查询渠道</span><br><span class="line">select <span class="string">`id`</span>, <span class="string">`name`</span>, <span class="string">`url`</span>, <span class="string">`icon_url`</span>, <span class="string">`sort_order`</span> <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_channel;</span><br><span class="line"></span><br><span class="line"># 查询商品分类</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_category t where t.parent_id = <span class="number">0</span> order by show_index asc;</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_category t where t.parent_id = <span class="number">1005000</span> order by t.show_index asc ;</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_category t where t.parent_id = <span class="number">1008002</span> order by t.show_index asc ;</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_category t where t.id = <span class="number">1008002</span> order by t.show_index asc ;</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_category t where t.parent_id = <span class="number">1005000</span> order by t.show_index asc ;</span><br><span class="line"># 查询商品信息</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_goods t where t.category_id = <span class="number">1008002</span> order by t.id desc ;</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_goods t where t.id = <span class="number">1147048</span>;</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_related_goods;</span><br><span class="line"></span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_product np left join <span class="string">`platform-shop`</span>.nideshop_goods ng on np.goods_id = ng.id where ng.id = <span class="number">1147048</span>;</span><br><span class="line"></span><br><span class="line">######################################################</span><br><span class="line">################# 购物车相关查询 #####################</span><br><span class="line">######################################################</span><br><span class="line"># 购物车查询</span><br><span class="line">select a.* ,b.username <span class="keyword">as</span> user_name <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_cart a left join <span class="string">`platform-shop`</span>.nideshop_user b on a.user_id = b.id;</span><br><span class="line"># 购物车</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_cart;</span><br><span class="line"># 微信用户</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_user;</span><br><span class="line"># 商品详情</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_goods t where t.id = <span class="number">1147048</span>;</span><br><span class="line"></span><br><span class="line">######################################################</span><br><span class="line">################# 订单相关查询 #####################</span><br><span class="line">######################################################</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_order;</span><br><span class="line"></span><br><span class="line">######################################################</span><br><span class="line">################# 用户相关查询 #######################</span><br><span class="line">######################################################</span><br><span class="line"># 查询一级菜单</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.sys_menu where parent_id = <span class="number">0</span> AND status = <span class="number">0</span> order by order_num asc;</span><br><span class="line"># 查询二级菜单</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.sys_menu t where t.parent_id = <span class="number">1</span>;</span><br><span class="line"># 查询系统用户</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.sys_user;</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.sys_dept;</span><br><span class="line">select u.*, (select d.name <span class="keyword">from</span> <span class="string">`platform-shop`</span>.sys_dept d where d.dept_id = u.dept_id) deptName <span class="keyword">from</span> <span class="string">`platform-shop`</span>.sys_user u where u.user_id = <span class="number">1</span>;</span><br><span class="line"># 查询微信用户</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_user;</span><br><span class="line"></span><br><span class="line">######################################################</span><br><span class="line">################# 图片相关查询 #######################</span><br><span class="line">######################################################</span><br><span class="line"># 上传图片</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.sys_oss;</span><br><span class="line"># 查询云服务器配置</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.sys_config where <span class="string">`key`</span> = <span class="string">'CLOUD_STORAGE_CONFIG_KEY'</span>;</span><br><span class="line"></span><br><span class="line">######################################################</span><br><span class="line">################# 商品相关查询 #######################</span><br><span class="line">######################################################</span><br><span class="line"># 查询商品</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_goods;</span><br><span class="line"># 热门商品</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_goods t where t.is_hot = <span class="string">'1'</span> and t.is_delete = <span class="string">'0'</span>;</span><br><span class="line"># 查询渠道</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_channel;</span><br><span class="line"># 查询主题</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_topic;</span><br><span class="line"># 查询品牌</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_brand;</span><br><span class="line"># 查询品牌</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_brand;</span><br><span class="line"># 查询广告位</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_ad;</span><br><span class="line"></span><br><span class="line"># 查询渠道</span><br><span class="line">select <span class="string">`id`</span>, <span class="string">`name`</span>, <span class="string">`url`</span>, <span class="string">`icon_url`</span>, <span class="string">`sort_order`</span> <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_channel;</span><br><span class="line"></span><br><span class="line"># 查询商品分类</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_category t where t.parent_id = <span class="number">0</span> order by show_index asc;</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_category t where t.parent_id = <span class="number">1005000</span> order by t.show_index asc ;</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_category t where t.parent_id = <span class="number">1008002</span> order by t.show_index asc ;</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_category t where t.id = <span class="number">1008002</span> order by t.show_index asc ;</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_category t where t.parent_id = <span class="number">1005000</span> order by t.show_index asc ;</span><br><span class="line"># 查询商品信息</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_goods t where t.category_id = <span class="number">1008002</span> order by t.id desc ;</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_goods t where t.id = <span class="number">1147048</span>;</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_related_goods;</span><br><span class="line"></span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_product np left join <span class="string">`platform-shop`</span>.nideshop_goods ng on np.goods_id = ng.id where ng.id = <span class="number">1147048</span>;</span><br><span class="line"></span><br><span class="line">######################################################</span><br><span class="line">################# 购物车相关查询 #####################</span><br><span class="line">######################################################</span><br><span class="line"># 购物车查询</span><br><span class="line">select a.* ,b.username <span class="keyword">as</span> user_name <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_cart a left join <span class="string">`platform-shop`</span>.nideshop_user b on a.user_id = b.id;</span><br><span class="line"># 购物车</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_cart;</span><br><span class="line"># 微信用户</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_user;</span><br><span class="line"># 商品详情</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_goods t where t.id = <span class="number">1147048</span>;</span><br><span class="line"></span><br><span class="line">######################################################</span><br><span class="line">################# 订单相关查询 #####################</span><br><span class="line">######################################################</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_order;</span><br><span class="line"></span><br><span class="line">######################################################</span><br><span class="line">################# 用户相关查询 #######################</span><br><span class="line">######################################################</span><br><span class="line"># 查询一级菜单</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.sys_menu where parent_id = <span class="number">0</span> AND status = <span class="number">0</span> order by order_num asc;</span><br><span class="line"># 查询二级菜单</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.sys_menu t where t.parent_id = <span class="number">1</span>;</span><br><span class="line"># 查询系统用户</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.sys_user;</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.sys_dept;</span><br><span class="line">select u.*, (select d.name <span class="keyword">from</span> <span class="string">`platform-shop`</span>.sys_dept d where d.dept_id = u.dept_id) deptName <span class="keyword">from</span> <span class="string">`platform-shop`</span>.sys_user u where u.user_id = <span class="number">1</span>;</span><br><span class="line"># 查询微信用户</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.nideshop_user;</span><br><span class="line"></span><br><span class="line">######################################################</span><br><span class="line">################# 图片相关查询 #######################</span><br><span class="line">######################################################</span><br><span class="line"># 上传图片</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.sys_oss;</span><br><span class="line"># 查询云服务器配置</span><br><span class="line">select * <span class="keyword">from</span> <span class="string">`platform-shop`</span>.sys_config where <span class="string">`key`</span> = <span class="string">'CLOUD_STORAGE_CONFIG_KEY'</span>;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
</search>
